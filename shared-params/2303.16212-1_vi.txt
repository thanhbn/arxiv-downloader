# 2303.16212.pdf
# Được chuyển đổi từ PDF sang TXT
# Đường dẫn nguồn: /home/admin88/arxiv-downloader/shared-params/2303.16212.pdf
# Kích thước tệp: 3347286 bytes

===============================================
NỘI DUNG TỆP PDF
===============================================

--- TRANG 1 ---
1
Một Khung Cắt Tỉa Mạng Phức Tạp Đa Mục Tiêu
Dựa trên Chia-để-Trị và
Xếp Hạng Suy Giảm Hiệu Suất Toàn Cầu
Ronghua Shang, Thành viên Cấp cao, IEEE , Songling Zhu*, Yinan Wu, Weitong Zhang, Thành viên, IEEE ,
Licheng Jiao, Fellow, IEEE , Songhua Xu
Tóm tắt -Nén mô hình đóng vai trò quan trọng trong việc
triển khai thực tế các mạng nơ-ron sâu (DNN), và cắt tỉa đa
mục tiêu tiến hóa (EMO) là một công cụ thiết yếu trong việc
cân bằng tỷ lệ nén và hiệu suất của các DNN. Tuy nhiên, do
bản chất dựa trên quần thể, cắt tỉa EMO gặp khó khăn với
không gian tối ưu phức tạp và quá trình xác minh cấu trúc
tốn nhiều tài nguyên, đặc biệt trong các mạng phức tạp. Để
giải quyết vấn đề này, một khung cắt tỉa mạng phức tạp đa
mục tiêu dựa trên chia-để-trị và xếp hạng suy giảm hiệu suất
toàn cầu (EMO-DIR) được đề xuất trong bài báo này. Thứ
nhất, một phương pháp cắt tỉa mạng EMO chia-để-trị được
đề xuất, phân tách nhiệm vụ phức tạp của cắt tỉa EMO trên
toàn bộ mạng thành các tiểu nhiệm vụ dễ dàng hơn trên nhiều
mạng con. Một mặt, việc phân tách này thu hẹp không gian
tối ưu cắt tỉa và giảm độ khó tối ưu; mặt khác, cấu trúc mạng
nhỏ hơn hội tụ nhanh hơn, vì vậy thuật toán đề xuất tiêu thụ
ít tài nguyên tính toán hơn. Thứ hai, một phương pháp huấn
luyện mạng con dựa trên ràng buộc chéo mạng được thiết kế,
có thể kết nối các tiểu nhiệm vụ cắt tỉa EMO độc lập, cho
phép chúng hợp tác tốt hơn và cải thiện hiệu suất tổng thể
của mạng đã cắt tỉa. Cuối cùng, một phương pháp cắt tỉa
kết hợp nhiều mạng con dựa trên EMO được đề xuất. Phương
pháp này kết hợp các Mặt trận Pareto từ kết quả cắt tỉa EMO
trên nhiều mạng con thông qua xếp hạng suy giảm hiệu suất
toàn cầu để thiết kế một phương án cắt tỉa kết hợp. Các thí
nghiệm phong phú trên CIFAR-10/100 và ImageNet-100/1k
được thực hiện. Thuật toán đề xuất đạt được hiệu suất tương
đương với các phương pháp cắt tỉa tiên tiến nhất.
Từ khóa chỉ mục -Cắt tỉa mạng, tối ưu đa mục tiêu, phân
loại hình ảnh, đa mục tiêu tiến hóa.

I. GIỚI THIỆU
VỚI sự phát triển của công nghệ trí tuệ nhân tạo,
các mạng nơ-ron sâu (DNN) đã được sử dụng
thành công trong nhiều ứng dụng trong các lĩnh vực như
xử lý hình ảnh SAR [1], theo dõi đối tượng [2], [3], và
phân đoạn ngữ nghĩa [4], [5]. Những thành công này là do

Công trình này được hỗ trợ một phần bởi Quỹ Khoa học Tự nhiên Quốc gia
Trung Quốc theo các Grant số 62176200 và 62271374, Chương trình Nghiên
cứu Cơ bản Khoa học Tự nhiên của Shaanxi theo các Grant số 2022JC-45 và
2022JQ-616, Dự án 111, Quỹ Nghiên cứu Cơ bản và Ứng dụng Cơ bản
Guangdong theo Grant số 2021A1515110686, Dự án Nghiên cứu của Phòng
thí nghiệm SongShan theo Grant YYJC052022004, và Dự án Tài trợ Nghiên
cứu Tiến sĩ Sau đại học của Shaanxi theo Grant 2023BSHTBZZ30.
Ronghua Shang, Songling Zhu, Yinan Wu, Weitong Zhang,
Licheng Jiao thuộc Phòng thí nghiệm Trọng điểm Nhận thức Thông minh
và Hiểu biết Hình ảnh của Bộ Giáo dục, Trường Trí tuệ Nhân tạo, Đại học
Xidian, Xi'an, Tỉnh Shaanxi 710071, Trung Quốc (e-mail:
rhshang@mail.xidian.edu.cn, slzhu@stu.xidian.edu.cn, ynwu25@stu.xidian.
edu.cn, wtzhang_1@xidian.edu.cn, lchjiao@mail.xidian.edu.cn). Songhua Xu
thuộc Khoa Quản lý Sức khỏe & Viện Trí tuệ Nhân tạo Y tế, Bệnh viện Liên
kết Thứ hai của Đại học Giao thông Xi'an, Xi'an, Trung Quốc. (e-mail:
songhuaxu@mail.xjtu.edu.cn).

khả năng biểu diễn và học tập đặc trưng ngày càng tăng.
Tuy nhiên, khi hiệu suất tăng lên, gánh nặng lưu trữ và
tính toán của chúng cũng tăng theo. Ví dụ, AlexNet có 8
lớp mạng nơ-ron và 714M phép toán dấu phẩy động [6],
GoogLeNet có 22 lớp mạng nơ-ron và 1.5G phép toán
dấu phẩy động [7], trong khi VGG16 có 16 lớp mạng
nơ-ron và 15.5G phép toán dấu phẩy động [8]. Chúng
đòi hỏi nhiều tính toán, đặc biệt đối với các thiết bị nhúng
và thiết bị đầu cuối di động, gặp khó khăn trong việc có
được đủ tài nguyên tính toán [9]. Để giải quyết vấn đề
này, nhiều phương pháp nén mạng nơ-ron khác nhau đã
được đề xuất, như chưng cất kiến thức [10], [11], cắt tỉa
mạng [12], [13], và lượng tử hóa mô hình [14], [15]. Trong
số đó, cắt tỉa mạng đã thu hút sự chú ý rộng rãi từ các
nhà nghiên cứu do hiệu suất nén xuất sắc [16].

Các thuật toán cắt tỉa hiện tại chia thành hai loại chính.
Loại đầu tiên là cắt tỉa không có cấu trúc, thu được cấu trúc
mạng nơ-ron nén bằng cách phát hiện và cắt tỉa các trọng
số không quan trọng. Han et al. [9] cho rằng các trọng
số dưới một ngưỡng nhất định là không quan trọng và có
thể được cắt tỉa. Guo et al. [17] thiết kế một thuật toán
cắt tỉa với phương pháp động, cho phép khôi phục các
kết nối khi trọng số đã cắt tỉa được phát hiện là quan trọng.
Cắt tỉa không có cấu trúc hoạt động tốt, nhưng thường
đòi hỏi phần cứng đặc biệt để tăng tốc [18]. Loại kia là
cắt tỉa có cấu trúc, cắt tỉa các lớp mạng hoặc bộ lọc thay
vì các trọng số mạng. Trái ngược với cắt tỉa không có cấu
trúc, mạng đã cắt tỉa duy trì cấu trúc nhân tích chập thông
thường và có thể được tăng tốc cho huấn luyện và suy luận
sử dụng các thư viện học sâu tiêu chuẩn. He et al. [19]
phát triển một cắt tỉa bộ lọc mềm, cho phép các cấu trúc
đã cắt tỉa này được cập nhật trong quá trình huấn luyện
tiếp theo. Ayinde et al. [20] xác định các cấu trúc đặc trưng
mạng dư thừa bằng khoảng cách cosin tương đối. Yu
et al. [21] thực hiện cắt tỉa bằng tầm quan trọng được đo
cho mỗi nơ-ron trong lớp phản hồi cuối cùng. He et al.
[22] sử dụng trung vị hình học để tìm bộ lọc có thể thay
thế nhất. Lin et al. [23] thiết kế các cấu trúc thưa thớt
bằng cách tạo học đối kháng. Lin et al. [24] phát hiện
rằng các đặc trưng hạng thấp hơn chứa thông tin ít quan
trọng hơn và có ít tác động đến mạng. He et al. [25] thiết
kế một tỷ lệ nén tăng dần để dần dần tập trung thông tin
học được từ tập dữ liệu vào các bộ lọc còn lại. Zhang
et al. [26] cắt tỉa từ miền tần số. Chen et al. [27] thực
hiện cắt tỉa bằng thay đổi độ chính xác có điều kiện của
mỗi kênh dưới điều khiển cổng theo kênh. He et al. [28]
đưa ra một phương pháp có thể học và tối ưu hóa để chọn
tiêu chí cắt tỉa phù hợp cho các lớp mạng khác nhau. Li
et al. [29] đề xuất một thuật toán cắt tỉa dựa trên bộ lọc
arXiv:2303.16212v2  [cs.LG]  30 Dec 2023

--- TRANG 2 ---
2
xác định tầm quan trọng của một bộ lọc đối với mạng bằng
chuẩn của nó. Tuy nhiên, mối quan hệ giữa các cấu trúc
khác nhau trong mạng nơ-ron rất phức tạp [30], và việc
thiếu bất kỳ phần nào của cấu trúc mạng có thể tác động
đến hiệu suất của toàn bộ mạng. Do đó, dù là cắt tỉa có
cấu trúc hay không có cấu trúc, các biện pháp đo lường
tính dư thừa mạng dựa trên thông tin thống kê này có thể
không phản ánh chính xác hiệu suất mạng sau cắt tỉa [31].

Thuật toán tiến hóa là một thuật toán tối ưu lấy cảm hứng
từ sinh học dựa trên độ phù hợp cá thể có thể đo lường
chính xác hiệu suất của giải pháp và giải quyết các nhiệm
vụ tối ưu phức tạp [32]. Khả năng tối ưu mạnh mẽ của nó
đã thu hút sự chú ý trong các lĩnh vực khác nhau. Shang
et al. [33] thiết kế một thuật toán tìm kiếm kiến trúc mạng
phức tạp với thuật toán di truyền. Stodola et al. giải quyết
các vấn đề định tuyến xe nhiều kho với thuật toán đàn
kiến [34]. Với sự trợ giúp của thuật toán PSO, Huang
et al. [35] thiết kế một thuật toán tìm kiếm cấu trúc mạng
compact. Ngoài ra, đã có một số nỗ lực thành công trong
việc sử dụng thuật toán tiến hóa để tối ưu các vấn đề cắt
tỉa phức tạp trên mạng nơ-ron. Zhou et al. [36] đề xuất
một phương pháp nén mạng nơ-ron đa mục tiêu tiến hóa
(EMO) ECDNN, tìm các cấu trúc mạng cắt tỉa phù hợp
cho phân đoạn hình ảnh y sinh. Zhou et al. [37] đề xuất
một thuật toán đa mục tiêu tiến hóa được hướng dẫn bởi
điểm gối (KGEA), sử dụng thuật toán đa mục tiêu tiến
hóa để tìm cấu trúc cắt tỉa, có thể tạo ra sự cân bằng
giữa quy mô tham số và hiệu suất cắt tỉa. Tuy nhiên, không
gian cắt tỉa của mạng nơ-ron sâu rất phức tạp, khiến việc
tối ưu bằng thuật toán đa mục tiêu tiến hóa cực kỳ thách
thức. Zhou et al. [38] thiết kế một thuật toán cắt tỉa mạng
đa mục tiêu dựa trên khối mạng, cắt tỉa khối mạng chứa
nhiều lớp thay vì các lớp mạng. Mặc dù cách tiếp cận này
giảm không gian cắt tỉa của mạng phức tạp ở một mức
độ nào đó, không gian tối ưu vẫn còn thách thức. Cắt
tỉa dựa trên khối mạng không thể tối ưu tính dư thừa của
các bộ lọc trong khối, điều này hạn chế hiệu suất của thuật
toán. Ngoài ra, các mạng đã cắt tỉa tốn nhiều tính toán
và lưu trữ. Việc huấn luyện và xác minh hiệu suất của
chúng tiêu thụ một lượng lớn tài nguyên tính toán. Do đó,
để khai thác tốt hơn hiệu suất của thuật toán đa mục tiêu
tiến hóa, không gian tối ưu và tiêu thụ tài nguyên của
nhiệm vụ cắt tỉa mạng nên được giảm.

Chia-để-trị [39] là một cách hiệu quả cho các nhiệm vụ
phức tạp, phân tách một nhiệm vụ phức tạp thành nhiều
tiểu nhiệm vụ đơn giản hơn, từ đó giảm độ phức tạp của
toàn bộ nhiệm vụ. Cách tiếp cận này đã được sử dụng
trong nhiều lĩnh vực nghiên cứu. Gidiotis et al. [40] phân
tách nhiệm vụ tóm tắt khó khăn của toàn bộ tài liệu thành
các tiểu nhiệm vụ đơn giản hơn của nhiều phần nhỏ, cải
thiện hiệu suất tóm tắt. Xiong et al. [41] phát hiện rằng
độ khó của việc đếm trực quan tăng với mật độ đối tượng,
và giảm mật độ trong vùng nhận dạng bằng phương pháp
chia và trị có thể cải thiện hiệu suất đếm đối tượng. So
với nhiệm vụ tối ưu phức tạp, các thuật toán tập trung
vào các tiểu nhiệm vụ đơn giản hoạt động tốt hơn. Do đó,
cách tiếp cận chia-để-trị có thể phù hợp với vấn đề cắt
tỉa cấu trúc mạng đa mục tiêu phức tạp. Tuy nhiên, mạng

là một thể thống nhất được tạo thành từ nhiều phần kết
nối chặt chẽ với nhau, và sự thay đổi ở bất kỳ phần nào
có tác động không thể bỏ qua đến toàn thể. Nếu một mạng
con được tối ưu và huấn luyện riêng biệt, nó có thể không
hợp tác tốt với mạng con khác từ cùng mạng, ảnh hưởng
đến hiệu suất tổng thể. Ngoài ra, đó là một câu hỏi mở
về cách thiết kế một phương án cắt tỉa hoàn chỉnh sử dụng
các kết quả tối ưu đa mục tiêu này từ nhiều mạng con
được tối ưu độc lập. Do đó, việc áp dụng trực tiếp ý tưởng
chia-để-trị vào nhiệm vụ cắt tỉa trên cấu trúc mạng phức
tạp là không thực tế.

Lấy cảm hứng từ các câu hỏi nêu trên, bài báo này đề
xuất một khung cắt tỉa mạng phức tạp đa mục tiêu dựa
trên chia-để-trị và xếp hạng suy giảm hiệu suất toàn cầu
(EMO-DIR), nhằm giảm không gian tối ưu và tiêu thụ
tài nguyên của việc cắt tỉa mạng phức tạp trong khi làm
cho các nhiệm vụ cắt tỉa mạng con được tối ưu độc lập
hợp tác tốt để đạt được hiệu suất tổng thể tốt hơn. Thứ
nhất, một phương pháp cắt tỉa mạng EMO chia-để-trị
được đề xuất, phân tách nhiệm vụ cắt tỉa đa mục tiêu
phức tạp trên mạng hoàn chỉnh thành nhiệm vụ cắt tỉa
đơn giản trên nhiều mạng con. Độ phức tạp tối ưu của
mạng hoàn chỉnh là tích của độ phức tạp của nhiều mạng
con. Ngược lại, tổng độ phức tạp tối ưu của nhiều mạng
con là tổng độ phức tạp của chúng. Do đó, phương pháp
của chúng tôi hiệu quả về mặt tính toán. Ngoài ra, các
mạng con có ít tham số hơn và hội tụ nhanh hơn so với
cấu trúc mạng hoàn chỉnh. Vì vậy, việc huấn luyện chúng
tiêu thụ ít tài nguyên tính toán hơn. Thứ hai, một phương
pháp huấn luyện mạng con dựa trên ràng buộc chéo mạng
được thiết kế để cải thiện sự hợp tác giữa các mạng con
được tối ưu độc lập. Các phần khác nhau của mạng xử
lý các đặc trưng khác nhau, và các đặc trưng đầu ra từ
mạng con trước được sử dụng làm đặc trưng đầu vào cho
mạng con tiếp theo. Phương pháp huấn luyện mạng con
đề xuất đảm bảo rằng mạng con tiếp theo có thể xử lý
tốt các đặc trưng được tạo bởi mạng con trước bằng cách
ràng buộc các đặc trưng đầu ra từ mạng con trước và các
đặc trưng đầu vào của mạng con tiếp theo, làm cho các
mạng con được cắt tỉa độc lập hợp tác tốt và cải thiện
hiệu suất tổng thể của mạng đã cắt tỉa. Cuối cùng, bài
báo này đề xuất một phương pháp cắt tỉa kết hợp nhiều
mạng con dựa trên EMO, tính toán chỉ số suy giảm hiệu
suất toàn cầu dựa trên Mặt trận Pareto thu được từ nhiều
nhiệm vụ tối ưu mạng con. Chỉ số này phản ánh tác động
của phương án cắt tỉa mạng con đến hiệu suất của toàn
bộ mạng, từ đó giúp thuật toán thiết kế một phương án
cắt tỉa kết hợp. Các thí nghiệm mở rộng được thực hiện
trên các tập dữ liệu CIFAR10, CIFAR100, ImageNet-100
và ImageNet-1k, và kết quả thí nghiệm chứng minh tính
hiệu quả và hiệu suất của thuật toán đề xuất. Các đóng
góp như sau.

• Một phương pháp cắt tỉa mạng EMO chia-để-trị được
đề xuất. Nó phân tách nhiệm vụ cắt tỉa đa mục tiêu
trên mạng phức tạp thành các nhiệm vụ cắt tỉa đơn
giản trên nhiều mạng con. Phương pháp này giảm độ
khó tối ưu của thuật toán cắt tỉa đa mục tiêu và tiêu
thụ tài nguyên xác thực các cấu trúc cắt tỉa

--- TRANG 3 ---
3
trong quá trình tiến hóa.
• Một phương pháp huấn luyện mạng con dựa trên ràng
buộc chéo mạng được thiết kế. Nó ràng buộc các đặc
trưng đầu ra của mạng con trước và các đặc trưng đầu
vào của mạng con tiếp theo, để các đặc trưng đầu ra
của mạng con trước có thể được xử lý bởi mạng con
tiếp theo, từ đó cải thiện hiệu suất mạng tổng thể.
• Một phương pháp cắt tỉa kết hợp nhiều mạng con dựa
trên EMO được đề xuất. Nó tính toán chỉ số suy giảm
hiệu suất toàn cầu dựa trên các giải pháp không bị
chi phối từ thuật toán cắt tỉa đa mục tiêu tiến hóa trên
mỗi mạng con. Chỉ số suy giảm hiệu suất toàn cầu
phản ánh tác động của các phương án cắt tỉa khác
nhau của các mạng con đến hiệu suất của toàn bộ
mạng. Do đó, chỉ số này có thể giúp thuật toán thiết
kế một phương án cắt tỉa kết hợp.

Tiếp theo, bài báo này trước tiên trình bày chi tiết về
thuật toán đề xuất; sau đó, mô tả thiết lập thí nghiệm liên
quan, kết quả thí nghiệm và phân tích; cuối cùng, kết luận
và công việc tương lai được trình bày.

II. THUẬT TOÁN ĐỀ XUẤT
Các thuật toán cắt tỉa mạng dựa trên đa mục tiêu tiến
hóa tạo ra sự cân bằng giữa hiệu suất và chi phí tài nguyên
của mạng để tạo ra cấu trúc cắt tỉa mạng tốt hơn. Tuy
nhiên, bản chất dựa trên quần thể khiến các thuật toán
này gặp khó khăn với không gian tối ưu phức tạp và quá
trình xác thực cá thể tốn nhiều tài nguyên. Để giải quyết
vấn đề này, bài báo này đề xuất một khung cắt tỉa mạng
phức tạp đa mục tiêu dựa trên chia-để-trị và xếp hạng
suy giảm hiệu suất toàn cầu (EMO-DIR). Nó phân tách
nhiệm vụ cắt tỉa mạng phức tạp thành nhiều nhiệm vụ
cắt tỉa mạng con đơn giản, từ đó thu hẹp không gian tối
ưu cắt tỉa của thuật toán EMO và tiêu thụ tài nguyên xác
thực hiệu suất cá thể. Hình 1 mô tả cấu trúc tổng thể của
EMO-DIR.

Hình 1 cho thấy thuật toán đạt được cắt tỉa EMO phức
tạp trên mạng gốc bằng nhiều cắt tỉa đa mục tiêu trên các
mạng con. Đầu tiên, bài báo này thiết kế một phương pháp
cắt tỉa mạng EMO chia-để-trị, thực hiện cắt tỉa EMO độc
lập trên mỗi mạng con để hoàn thành toàn bộ quá trình
cắt tỉa. Nó xem xét số lượng tham số mạng con và lỗi dự
đoán làm hai đối tượng tối ưu. Trong quá trình huấn luyện
các mạng con, để cải thiện sự hợp tác giữa các mạng con
khác nhau, bài báo này đề xuất một phương pháp huấn
luyện mạng con dựa trên ràng buộc chéo mạng, ràng buộc
các đặc trưng giữa các mạng con liền kề và giúp mạng
con tiếp theo xử lý các đặc trưng đầu ra từ mạng con
trước. Cuối cùng, để tạo ra một phương án cắt tỉa toàn
thể với các giải pháp không bị chi phối được tạo bởi
cắt tỉa EMO trên các mạng con này, chúng tôi thiết kế
một phương pháp cắt tỉa kết hợp nhiều mạng con dựa
trên EMO. Với sự trợ giúp của xếp hạng suy giảm hiệu
suất toàn cầu, tất cả kết quả tối ưu mạng con được kết
hợp để tạo ra một phương án cắt tỉa hoàn chỉnh.

A. Mã hóa và Giải mã Cấu trúc Mạng
Thuật toán tiến hóa không thể tối ưu trực tiếp cấu trúc
mạng mà cần chuyển đổi mạng thành mã hóa cấu trúc.
Mã hóa được tối ưu bởi thuật toán tiến hóa cũng phải
được chuyển đổi thành các cấu trúc mạng đã cắt tỉa để
huấn luyện và suy luận. Ba cấu trúc mạng được tham gia
trong thí nghiệm: BasicBlock, cấu trúc dư Bottleneck, và
VGG Block. Hình 2 mô tả các mã hóa cấu trúc tương ứng
của bản gốc và đã cắt tỉa.

Các mã hóa này được đánh dấu bằng "[ ]", trong đó số
kênh đầu ra được sử dụng làm nội dung mã hóa của lớp
tích chập. "Cin:Cout#3×3" có nghĩa là số kênh đầu vào
từ nhân tích chập là Cin, số đầu ra là Cout, và kích thước
của nhân tích chập là 3×3.

[Hình 1. Cấu trúc tổng thể của EMO-DIR.]

--- TRANG 4 ---
4
(a) BasicBlock [ Cout] (b) BasicBlock đã cắt tỉa [ C1]
+Cin:Cout#3×3
Cout:Cout#3×3
Cin:Cout#1×1
+Cin:Cout#3×3
Cout:Cout#3×3
Cin:Cout#1×1
+Cin:C1#3×3
C1:Cout#3×3
Cin:Cout#1×1
+Cin:C1#3×3
C1:Cout#3×3
Cin:Cout#1×1

(d) Bottleneck đã cắt tỉa [ C1, C2] (c) Bottleneck [ Cout, Cout]
+Cin:Cout#1×1
Cout:Cout#3×3
Cout:Cout#1×1
Cin:Cout#1×1
+Cin:Cout#1×1
Cout:Cout#3×3
Cout:Cout#1×1
Cin:Cout#1×1
+Cin:C1#1×1
C1:C2#3×3
C2:Cout#1×1
Cin:Cout#1×1
+Cin:C1#1×1
C1:C2#3×3
C2:Cout#1×1
Cin:Cout#1×1

(f) VBlock đã cắt tỉa [ C1, C2] (e) VBlock [ Cout, Cout]
Batch Normalization ReLU Batch Normalization ReLU
Cin:Cout#1×1
Cout:Cout#3×3
Cout:Cout#1×1
Cin:Cout#1×1
Cout:Cout#3×3
Cout:Cout#1×1
Cin:C1#1×1
C1:C2#3×3
C2:Cout#1×1
Cin:C1#1×1
C1:C2#3×3
C2:Cout#1×1

Hình 2. Các mã hóa của cấu trúc mạng gốc và cấu trúc đã cắt tỉa của chúng (BasicBlock, cấu trúc dư Bottleneck và khối VGG VBlock).

Như thể hiện trong Hình 2, đối với cấu trúc dư, số kênh
đầu ra trong lớp cuối cùng của khối dư không thay đổi
trong quá trình cắt tỉa. Đối với cấu trúc VGG, chúng tôi
xem xét tất cả các lớp mạng trong mạng con như một
khối và giữ nguyên kênh đầu ra của lớp cuối cùng. Hình
2 (c) và (d) sử dụng ba lớp để trình bày rõ ràng, và một
cấu trúc khối có thể chứa nhiều hơn. Vì phương pháp này
giữ nguyên hình dạng của các đặc trưng đầu vào và đầu
ra, nó không yêu cầu bất kỳ điều chỉnh bổ sung nào khi
kết nối các cấu trúc mạng con đã cắt tỉa này thành một
mạng hoàn chỉnh, từ đó đơn giản hóa quá trình cắt tỉa.
Chỉ số kênh đầu ra trừ lớp cuối cùng được mã hóa khi
mã hóa các cấu trúc mạng này. Ví dụ, trong Hình 2(b),
cấu trúc cắt tỉa cho BasicBlock với hai lớp tích chập được
mã hóa là [C1]. Trong Hình 2(d), cấu trúc cắt tỉa cho
Bottleneck với ba lớp tích chập được mã hóa là [C1, C2].
Mã hóa là một chồng tuần tự của các cấu trúc mạng bên
trong. Ví dụ, đối với mã hóa mạng con dư [[C11, C12],
[C21, C22],···,[Cn1, Cn2]], cấu trúc bên trong là một cấu
trúc kết nối tuần tự của ba cấu trúc dư BasicBlock được
mã hóa là [C11, C12], [C21, C22] và [Cn1, Cn2]. Đối với
mã hóa mạng con VGG [C1, C2,···, Cn], cấu trúc bên
trong là n+1 lớp mạng kết nối tuần tự.

B. Phương pháp Cắt tỉa Mạng EMO Chia-để-trị
Phương pháp cắt tỉa mạng EMO chia-để-trị nhằm giải
quyết vấn đề cắt tỉa EMO cho các cấu trúc mạng phức
tạp sử dụng ý tưởng chia-để-trị. Để thuận tiện cho việc
mô tả, bài báo này sử dụng Phương trình (1) để định nghĩa
tập hợp có thứ tự của các mạng hoàn chỉnh.

Netall={l1, l2,···, lN} (1)

trong đó N có nghĩa là tổng số lớp mạng, và mỗi mạng
bao gồm nhiều lớp mạng có thứ tự.

Mỗi lớp mạng nơ-ron thực hiện các nhiệm vụ chuyển
đổi đặc trưng đơn giản, trong khi một nhóm lớp mạng
nơ-ron có thể thực hiện một nhiệm vụ xử lý đặc trưng
phức tạp hơn. Do đó, như thể hiện trong Phương trình
(2), một mạng hoàn chỉnh có thể được xem là một tập
hợp của nhiều mạng con xử lý đặc trưng.

Xout=F(Netall, Xin)
=F(lN, F(lN−1,···F(l1, Xin)))
=F(SubNet M, F(SubNet M−1,
···F(SubNet 1, Xin)))(2)

trong đó F(Net, X) được sử dụng để mô tả quá trình
xử lý đặc trưng của mạng với tập hợp có thứ tự Net và
các đặc trưng cần xử lý X. Xout là đầu ra cuối cùng của
mạng. Phương trình (2) cho thấy rằng cấu trúc mạng gốc
Netall có thể được chia thành nhiều mạng con {SubNet 1,
SubNet 2,···, SubNet M}, và mỗi cấu trúc mạng con hoàn
thành một phần của nhiệm vụ xử lý đặc trưng. M biểu
thị số lượng cấu trúc mạng con, tức là số lượng tiểu nhiệm
vụ mà toàn bộ nhiệm vụ xử lý đặc trưng được chia thành.
Tập hợp các mạng con bao gồm nhiều lớp mạng có thứ
tự không chồng lặp, như thể hiện trong Phương trình (3).

SubNet 1∪SubNet 2∪ ··· ∪ SubNet N=Netall
SubNet 1∩SubNet 2∩ ··· ∩ SubNet N=∅(3)

Từ Phương trình (3), mạng hoàn chỉnh Netall bao gồm
nhiều mạng con. Từ Phương trình (2), chức năng xử lý
đặc trưng của mạng hoàn chỉnh cũng có thể được thực
hiện bởi nhiều mạng con SubNet i. Do đó, một nhiệm
vụ cắt tỉa trên mạng hoàn chỉnh có thể được phân tách
thành nhiều nhiệm vụ cắt tỉa trên các mạng con. Phương
trình (4) cho thấy nhiệm vụ cắt tỉa đa mục tiêu trên mạng
hoàn chỉnh.

arg min
Net′all(P(Net′all), E(Net′all, X, Y ))
s.t. P (li′)<=P(li),for all li in Netall,for all li′ in Net′all(4)

Các mục tiêu tối ưu của nhiệm vụ cắt tỉa đa mục tiêu
là số lượng tham số P(Net′all) và lỗi dự đoán E(Net′all,
X, Y), trong đó X và Y có nghĩa là các tập dữ liệu và
nhãn cần xử lý. Thuật toán tối ưu có thể tìm thấy cấu
trúc mạng đã cắt tỉa Net′all bằng cách cắt tỉa mạng gốc
Netall. Net′all hoạt động tốt trên hai mục tiêu tối ưu này.
Không gian cắt tỉa của mạng gốc Netall rất lớn. Đối với
một mạng nơ-ron với N lớp mạng và lớp thứ i có ki nhân
tích chập, kích thước của không gian tối ưu cắt tỉa
O(Netall) được thể hiện trong Phương trình (5).

--- TRANG 5 ---
5
O(Netall) = ∏(i=1 to N) O(ki) (5)

Nếu mạng với N lớp được chia thành M mạng con,
nhiệm vụ cắt tỉa đa mục tiêu được biểu diễn bởi Phương
trình (4) có thể được chia thành các nhiệm vụ cắt tỉa của
M mạng con được thể hiện trong Phương trình (6).

arg min
Net′i(P(Net′i), E(Net′i, X, Y))
s.t. P (li′)<=P(li),for all li in Neti,for all li′ in Net′i
i∈[1, M] (6)

Kích thước của không gian cắt tỉa O′(Netall) được thể
hiện trong Phương trình (7) và nhỏ hơn đáng kể so với
không gian cắt tỉa O(Netall) từ mạng gốc.

O′(Netall) = Σ(j=1 to M) O(Netj)
= Σ(j=1 to M) ∏(i=1 to Nj) O(ki+N1+N2+···Nj−1)
<< ∏(i=1 to N) O(ki) = O(Netall)(7)

trong đó Nj biểu thị số lượng lớp mạng trong mạng con
thứ j. Do đó, việc chia mạng phức tạp gốc thành nhiều
mạng con đơn giản hơn giảm đáng kể không gian tối ưu
của thuật toán cắt tỉa mạng đa mục tiêu tiến hóa, từ đó
giảm độ khó tối ưu. Hơn nữa, Phương trình (2) mô tả
rằng việc xử lý đặc trưng của toàn bộ mạng có thể được
coi là một tập hợp xử lý mạng con có thứ tự. Do đó, nếu
mạng con đã cắt tỉa giữ lại khả năng xử lý đặc trưng của
mạng con gốc, hoặc nếu khả năng xử lý đặc trưng của
nó chỉ bị suy giảm nhẹ, tác động của cắt tỉa đến mạng
gốc cũng sẽ nhỏ.

Lấy cảm hứng từ điều này, chúng tôi thiết kế một phương
pháp cắt tỉa mạng EMO chia-để-trị. Cấu trúc chính được
thể hiện trong Hình 3.

[Hình 3. Phương pháp cắt tỉa mạng EMO chia-để-trị.]

Như thể hiện trong Hình 3, phương pháp cắt tỉa mạng
này đầu tiên chia toàn bộ mạng nơ-ron, sẽ được cắt tỉa,
thành nhiều mạng con không chồng lặp. Mỗi mạng con
bao gồm nhiều lớp mạng với khả năng xử lý đặc trưng
đơn giản. Sau đó, phương pháp này thực hiện một cắt
tỉa mạng đa mục tiêu tiến hóa độc lập cho mỗi mạng con.
Các mục tiêu tối ưu của tối ưu đa mục tiêu tiến hóa là
số lượng tham số và khả năng xử lý đặc trưng của mạng
con. Thuật toán EMO có thể cân bằng số lượng tham số
và hiệu suất của mạng con để có được tỷ lệ nén mạng
con đáng kể hơn với mất mát hiệu suất nhỏ. Cuối cùng,
thuật toán xây dựng một mạng đã cắt tỉa cuối cùng dựa
trên cấu trúc cắt tỉa đa mục tiêu tiến hóa thu được trên
mỗi mạng con.

Phương pháp này chuyển đổi cắt tỉa đa mục tiêu tiến
hóa từ mạng nơ-ron hoàn chỉnh sang nhiều mạng con.
Tuy nhiên, nếu không có sự trợ giúp khác, phương pháp
này không hoàn thành tốt nhiệm vụ cắt tỉa mạng nơ-ron.
Thứ nhất, khả năng xử lý đặc trưng của các mạng con có
thể thay đổi trong quá trình tối ưu độc lập. Những thay
đổi này có thể dẫn đến việc các đặc trưng chúng tạo ra
không được hiểu đúng bởi mạng con tiếp theo, từ đó làm
suy giảm hiệu suất tổng thể của mạng. Thứ hai, cắt tỉa
đa mục tiêu tiến hóa trong mỗi mạng con được thực hiện
độc lập. Kết quả tối ưu thu được chỉ có thể được sử dụng
để thiết lập phương án cắt tỉa cho mạng con đó chứ không
phải cho toàn bộ mạng. Để giải quyết hai vấn đề trên,
chúng tôi giới thiệu một phương pháp huấn luyện mạng
con dựa trên ràng buộc chéo mạng và một phương pháp
cắt tỉa kết hợp nhiều mạng con dựa trên EMO, sẽ được
chi tiết trong hai tiểu mục tiếp theo.

C. Phương pháp Huấn luyện Mạng con Dựa trên Ràng buộc
Chéo mạng

Nhiều mạng con được huấn luyện độc lập phá hủy khả
năng hợp tác giữa các mạng con từ mạng gốc, dẫn đến
việc mạng con tiếp theo không thể xử lý tốt các đặc trưng
được tạo bởi mạng con trước. Bài báo này đề xuất một
phương pháp huấn luyện mạng con dựa trên ràng buộc
chéo mạng, cải thiện sự hợp tác giữa các mạng con bằng
cách ràng buộc các đặc trưng đầu ra của mạng con trước
và các đặc trưng đầu vào của mạng con tiếp theo. Với
những ràng buộc này, mạng con tiếp theo có thể xử lý
tốt các đặc trưng được tạo bởi mạng con trước.

Ràng buộc là một ràng buộc đặc trưng cấp phần tử được
sử dụng để thu hẹp khoảng cách cấp phần tử giữa đặc
trưng được tạo bởi mạng con trước và đặc trưng mà mạng
con tiếp theo có thể xử lý. Vì đặc trưng đầu vào từ mạng
đã cắt tỉa SubNet′i+1 là đặc trưng đầu ra từ mạng gốc
SubNet i, việc thu hẹp khoảng cách giữa các đặc trưng
đầu ra của SubNet′i và SubNet i có thể thu hẹp khoảng
cách giữa các đặc trưng đầu vào của SubNet′i+1 và các
đặc trưng đầu ra của SubNet′i. Như thể hiện trong Phương
trình (8), bài báo này sử dụng chuẩn L2 để đo khoảng
cách giữa chúng.

Loss FC(SubNet i, SubNet′i) =
||F(SubNet 1+···+SubNet i, X)−F(SubNet′i,
F(SubNet 1+···+SubNet i−1, X))||2(8)

--- TRANG 6 ---
6
Mạng-con-2 Mạng-con-1 Mạng-con-4 Mạng-con-3
CE CE CE
Nhãn
FD-2 FD-3
FD-4
FD-1
FD-1
Lan truyền ngược Lan truyền ngược Lan truyền thuận Lan truyền thuận
FD-n
FD-n Bộ phát hiện đặc trưng FD-n Bộ phát hiện đặc trưng
CE Mất mát entropy chéo CE Mất mát entropy chéo
Ràng buộc đặc trưng FC
FC Ràng buộc đặc trưng FC

Lan truyền ngược
Lan truyền thuận
FD-n Bộ phát hiện đặc trưng
CE Mất mát entropy chéo
Ràng buộc đặc trưng FC
Mạng hoàn chỉnh đã huấn luyện

(a). Quá trình huấn luyện các bộ phát hiện đặc trưng.

Nhãn
CE CE CE CE
FD-2 FD-3 FD-4
FC FC FC FC
FC
Mạng-con-1 Mạng-con-1 Mạng-con-2 Mạng-con-2 Mạng-con-3 Mạng-con-3 Mạng-con-4 Mạng-con-4
Mạng-con-3
đã cắt tỉa
Mạng-con-4
đã cắt tỉa
Mạng-con-2
đã cắt tỉa
Mạng-con-1
đã cắt tỉa
FD-1
FD-1
Kế thừa trọng số Kế thừa trọng số Kế thừa trọng số Kế thừa trọng số Kế thừa trọng số Kế thừa trọng số Kế thừa trọng số Kế thừa trọng số
Không cập nhật trọng số

(b). Quá trình huấn luyện nhiều mạng con dưới ràng buộc đặc trưng.

Hình 4. Phương pháp huấn luyện mạng con dựa trên ràng buộc chéo mạng.

Đặc trưng đầu tiên được lấy từ các đặc trưng đầu ra của
mạng gốc tại SubNet i, có đầu vào là tập dữ liệu X. Đặc
trưng thứ hai được lấy từ đặc trưng đầu ra của mạng đã
cắt tỉa SubNet′i, có đặc trưng đầu vào từ mạng con gốc
SubNet i−1.

Ngoài ra, bộ phát hiện đặc trưng được huấn luyện với
mạng gốc cũng cung cấp một số ràng buộc đặc trưng,
được sử dụng để khuyến khích mạng con đã cắt tỉa thực
hiện xử lý đặc trưng tương tự như mạng gốc. Mạng con
không đưa ra tầm quan trọng bằng nhau cho mọi phần
tử trong đặc trưng từ mạng con trước. Trong các đặc
trưng, mối quan hệ phức tạp giữa các phần tử cũng quan
trọng. Do đó, bài báo này sử dụng một bộ phát hiện đặc
trưng để cung cấp một ràng buộc đặc trưng bổ sung về
mối quan hệ giữa các phần tử đặc trưng. Ràng buộc được
thực hiện thông qua một bộ phát hiện đặc trưng được huấn
luyện trước, tìm các mối quan hệ phần tử cụ thể trong
các đặc trưng. Ngoài ra, nó có thể cung cấp các thước
đo hiệu suất cho mạng con. Hình 4 mô tả phương pháp
đề xuất.

Hình 4(a) cho thấy quá trình huấn luyện các bộ phát
hiện đặc trưng, và bộ phát hiện đặc trưng đã huấn luyện
có thể xác định các mối quan hệ phần tử trong các đặc
trưng và tìm thấy sự thay đổi trong khả năng xử lý đặc
trưng của mạng con. Đầu vào của bộ phát hiện đặc trưng
là các đặc trưng trung gian được tạo bởi mạng con, và
đầu ra là phân loại dự đoán. Bài báo này sử dụng cùng
cấu trúc dư để xây dựng các bộ phát hiện đặc trưng. Vì
độ phân giải không gian và độ khó xử lý của các đặc
trưng khác nhau, các bộ phát hiện đặc trưng ở các vị trí
mạng khác nhau cũng khác nhau. Hình 5 mô tả các bộ
phát hiện đặc trưng được sử dụng trên mạng được chia
thành bốn mạng con. Các bộ phát hiện đặc trưng ở các
vị trí khác nhau chứa số lượng khối dư khác nhau. Càng
gần với lớp đầu ra từ mạng, số lượng khối dư càng nhỏ.

Các khối dư này có cùng cấu trúc, và tất cả đều giảm độ
phân giải không gian của các đặc trưng đầu vào xuống
một nửa. Mỗi bộ phát hiện đặc trưng được theo sau bởi
một lớp pooling và fully connected có cùng cấu trúc như
lớp được sử dụng trong mạng gốc. Ngoài ra, trong quá
trình huấn luyện, bài báo này chỉ cập nhật các bộ phát
hiện đặc trưng. Vì vậy, nó hội tụ nhanh hơn và không
gây ra nhiều gánh nặng tính toán.

ResBlock@2
ResBlock@2
ResBlock@2
ResBlock@2
ResBlock@2
ResBlock@2
PoolLayer
FullLayer
ResBlock@2
ResBlock@2
ResBlock@2
PoolLayer
FullLayer
(a). FD -1
ResBlock@2
ResBlock@2
ResBlock@2
PoolLayer
FullLayer
(a). FD -1
ResBlock@2
ResBlock@2
ResBlock@2
ResBlock@2
PoolLayer
FullLayer
ResBlock@2
ResBlock@2
PoolLayer
FullLayer
(b). FD -2
ResBlock@2
ResBlock@2
PoolLayer
FullLayer
(b). FD -2
PoolLayer
FullLayer
(d). FD -4
PoolLayer
FullLayer
(d). FD -4
ResBlock@2
ResBlock@2
PoolLayer
FullLayer
(c). FD -3
ResBlock@2
PoolLayer
FullLayer
(c). FD -3

Hình 5. Cấu trúc của các bộ phát hiện đặc trưng nằm ở các vị trí khác nhau.

Khi các quá trình huấn luyện của các bộ phát hiện đặc
trưng hoàn thành, việc huấn luyện nhiều mạng con có
thể tiếp tục. Quá trình này được thể hiện trong Hình 4(b).
Đầu tiên, các bộ phát hiện đặc trưng đã huấn luyện được
kết nối với các mạng con tương ứng, và trọng số của chúng
được cố định để các bộ phát hiện đặc trưng không thay
đổi trong quá trình huấn luyện và có được kết quả phát
hiện ổn định. Ngoài ra, các mạng con đã cắt tỉa ngẫu
nhiên kế thừa một số trọng số từ mạng hoàn chỉnh đã
huấn luyện để tăng tốc hội tụ mô hình. Sau đó, dữ liệu
được đưa vào mạng gốc để tạo ra các đặc trưng đầu vào
và đầu ra cho mỗi mạng con đã cắt tỉa. Cuối cùng, mạng
con đã cắt tỉa hoàn thành quá trình huấn luyện của nó.
Trong quá trình huấn luyện mạng nơ-ron, việc tải dữ
liệu huấn luyện từ đĩa

--- TRANG 7 ---
7
rất tốn thời gian. Để tiết kiệm thời gian huấn luyện của
các mạng con, bài báo này tạo ra các đặc trưng đầu vào
và đầu ra cho tất cả các mạng con trong một quá trình
tải dữ liệu, sau đó sử dụng các đặc trưng này để hoàn
thành lan truyền thuận và ngược của tất cả các mạng con.

Hàm mất mát cho việc huấn luyện mỗi mạng con bao
gồm hai thành phần, như thể hiện trong Phương trình (9).
Một phần là từ giá trị phần tử từ các đặc trưng, được đo
bằng chuẩn L2; phần kia là từ mối quan hệ giữa các phần
tử đặc trưng, được đo bằng entropy chéo.

Loss i=1/2*(||F′i−Fi||2+Loss CE(Ai, Y)) (9)

Phương trình (9) mô tả tổng mất mát của việc huấn luyện
mạng con thứ i. Fi và F′i biểu thị các đặc trưng đầu ra
được tạo bởi mạng con thứ i trong mạng gốc và đã cắt
tỉa. Ai biểu thị kết quả đầu ra của bộ phát hiện đặc trưng
thứ i, và Y biểu thị nhãn chân lý. Loss CE(·) biểu thị
hàm mất mát entropy chéo.

D. Phương pháp Cắt tỉa Kết hợp Nhiều Mạng con Dựa
trên EMO

Nhiều mạng con được chia từ mạng nơ-ron gốc có thể
được cắt tỉa độc lập với thuật toán tối ưu EMO. Tuy
nhiên, cấu trúc mạng nơ-ron đã cắt tỉa cuối cùng không
thể được xây dựng trực tiếp dựa trên kết quả cắt tỉa mạng
đa mục tiêu trên các mạng con này. Để giải quyết vấn
đề này, bài báo này đề xuất một phương pháp cắt tỉa
kết hợp nhiều mạng con dựa trên EMO, thiết kế một
phương án cắt tỉa kết hợp dựa trên kết quả cắt tỉa đa
mục tiêu trên nhiều mạng con. Hình 6 minh họa cấu trúc.

[Hình 6. Phương pháp cắt tỉa kết hợp nhiều mạng con dựa trên EMO.]

Đầu tiên, thuật toán tìm Mặt trận Pareto bao gồm nhiều
giải pháp không bị chi phối [42] từ cắt tỉa EMO. Những
giải pháp không bị chi phối này hoạt động tốt trong tất
cả các mục tiêu được tối ưu. Thuật toán đa mục tiêu tiến
hóa không tìm thấy bất kỳ giải pháp nào khác vượt trội
hơn chúng trên tất cả các hàm mục tiêu tối ưu trong quá
trình tối ưu. Sau đó, dựa trên các giải pháp từ Mặt trận
Pareto, bài báo này phát triển một phương pháp xếp hạng
suy giảm hiệu suất toàn cầu (GPIR) mô tả phương án
cắt tỉa nào nên được áp dụng cho mạng con nào có tác
động dự kiến ít nhất đến hiệu suất mạng.

Để có được GPIR, như thể hiện trong Phương trình (10),
các thay đổi trong số lượng tham số và lỗi dự đoán so
với mạng chưa cắt tỉa được tính toán đầu tiên cho mỗi
giải pháp.

∆Pi,j=Pi,j−Pi,baseline/Pi,baseline
∆Ei,j=Ei,j−Ei,baseline/Ei,baseline(10)

trong đó ∆Pi,j và ∆Ei,j biểu thị sự thay đổi trong số
lượng tham số và sự thay đổi trong lỗi dự đoán của giải
pháp không bị chi phối thứ j trên mạng con thứ i. Pi,baseline
và Ei,baseline là số lượng tham số và lỗi dự đoán của
cấu trúc chưa cắt tỉa trên mạng con thứ i. Tiếp theo, chỉ
số suy giảm hiệu suất toàn cầu (GPII) có thể được tính
toán từ ∆Pi,j và ∆Ei,j, như thể hiện trong Phương trình
(11).

Ii,j=∆Pi,j−min(∆Pi)/∆Ei,j−min(∆Ei) + 0.001(11)

GPII mô tả sự gia tăng trong số lượng tham số do mỗi
đơn vị tăng lỗi. Chỉ số suy giảm hiệu suất càng nhỏ,
chiến lược cắt tỉa càng tốt, và ngược lại. Đây là một thước
đo chi phí cắt tỉa mạng và cũng có thể được sử dụng để
so sánh kết quả cắt tỉa đa mục tiêu giữa các mạng con
khác nhau. Bài báo này sử dụng chỉ số suy giảm hiệu
suất để xếp hạng suy giảm hiệu suất toàn cầu do phương
án cắt tỉa trên các mạng con khác nhau để thiết kế phương
án cắt tỉa kết hợp.

GPIR giữa bốn mạng con được thể hiện trong Hình 6,
và tỷ lệ cắt tỉa mạng (PR) tương ứng có thể được thu
được từ kết quả xếp hạng. Tỷ lệ cắt tỉa cũng được gọi
là tỷ lệ nén, và bài báo này gọi nó là tỷ lệ cắt tỉa để thuận
tiện. Hình 6 chỉ ra rằng tỷ lệ cắt tỉa tăng khi chỉ số suy
giảm hiệu suất tăng. Điều này cũng chứng minh tính linh
hoạt của thuật toán đề xuất trong việc chọn tỷ lệ cắt tỉa.
Một khi các nhiệm vụ cắt tỉa đa mục tiêu được hoàn thành
trên tất cả các mạng con, nhiều phương án thiết kế tỷ
lệ cắt tỉa có thể được thu được. Người dùng có thể linh
hoạt thay đổi phương án cắt tỉa theo yêu cầu thực tế mà
không cần lặp lại thuật toán cắt tỉa. Đối với tỷ lệ cắt tỉa
đã cho, người dùng có thể tìm phương án cắt tỉa trên
mỗi mạng con dựa trên GPIR, từ đó xác định phương
án cắt tỉa toàn cầu trên mạng gốc.

Một quy trình chi tiết hơn của phương pháp cắt tỉa kết
hợp nhiều mạng con dựa trên đa mục tiêu tiến hóa được
thể hiện trong Thuật toán 1. Đầu tiên, phương pháp này
thực hiện cắt tỉa đa mục tiêu tiến hóa độc lập trên mỗi
mạng con và thu được một tập hợp các giải pháp không
bị chi phối trên mỗi nhiệm vụ cắt tỉa mạng con. Những
giải pháp không bị chi phối này từ tất cả các mạng con
được thu thập để tạo thành tập không bị chi phối Pall.
Sau đó, thuật toán sử dụng phương pháp thể hiện trong
Phương trình (11) để tính toán GPII cho tất cả các giải
pháp trong tập Pall. Tiếp theo, nó thực hiện xếp hạng
suy giảm hiệu suất toàn cầu từ nhỏ nhất đến lớn nhất
cho tất cả các giải pháp trong Pall dựa trên GPII. Sau
đó, thuật toán thu được phương án cắt tỉa hoàn chỉnh
Sall dựa trên Psort và tỷ lệ cắt tỉa được thiết lập trước P.

--- TRANG 8 ---
8
Thuật toán 1: Phương pháp cắt tỉa kết hợp nhiều mạng
con dựa trên EMO.
Đầu vào: Các mạng con Net 1, Net 2,···, Net M. Mạng
chưa cắt tỉa Netall. Tỷ lệ cắt tỉa P.
Đầu ra: Phương án cắt tỉa hoàn chỉnh Sall.
1 Thực hiện cắt tỉa đa mục tiêu tiến hóa trên tất cả
mạng con Net 1, Net 2,···, Net M độc lập;
2 Pall←lấy các quần thể trên Mặt trận Pareto của mỗi
tối ưu mạng con;
3 I←Tính toán GPII của mọi giải pháp trên Pall với
Phương trình (11);
4 Psort←Xếp hạng các giải pháp trong Pall theo I từ
nhỏ nhất đến lớn nhất (GPIR);
5 S1, S2, ..., S M←Khởi tạo tất cả phương án cắt tỉa
mạng con với mạng chưa cắt tỉa Netall;
6 while Pall is not empty set do
7    Pselect←tìm quần thể với GPII nhỏ nhất trong
Psort;
8    Neti←Tìm mạng con mà Pselect thuộc về;
9    Si←Thiết lập phương án cắt tỉa được sử dụng bởi
Pselect cho Neti;
10   Xây dựng cấu trúc mạng cắt tỉa hoàn chỉnh S với
S1, S2,···, SM;
11   Pcur←Tính toán tỷ lệ cắt tỉa trên số lượng tham số
của Netp;
12   if Pcur>=P then
13      Return phương án cắt tỉa hoàn chỉnh Sall.
14   end
15   Pall=Pall−Pselect ;
16 end
17 Return phương án cắt tỉa hoàn chỉnh Sall.

Đây là một quá trình lặp từ GPIR đến một phương án
cắt tỉa hoàn chỉnh. Thuật toán đầu tiên thiết lập các phương
án cắt tỉa trên tất cả các mạng con thành cấu trúc chưa
cắt tỉa. Các phương án cắt tỉa sau đó được cập nhật theo
cấu trúc được chọn trên GPIR từ nhỏ nhất đến lớn nhất.
Điều này cho phép cấu trúc cắt tỉa của mạng hoàn chỉnh
được cập nhật liên tục dựa trên GPIR. Phương án cắt
tỉa hoàn chỉnh mới với tỷ lệ cắt tỉa lớn hơn được thu
được từ một cấu trúc mạng con đã cắt tỉa mới được lấy
ra từ xếp hạng. Cấu trúc mạng đã cắt tỉa cuối cùng được
thu được theo tỷ lệ cắt tỉa được thiết lập trước. Ngoài ra,
nếu người dùng cần một phương án cắt tỉa mới với tỷ
lệ cắt tỉa khác, họ chỉ cần thực hiện các bước từ xếp hạng
suy giảm hiệu suất toàn cầu đến phương án cắt tỉa mạng
hoàn chỉnh cuối cùng từ đầu thay vì toàn bộ thuật toán.

III. THIẾT LẬP THÍ NGHIỆM VÀ PHÂN TÍCH KẾT QUẢ
Trong phần này, bài báo mô tả thiết lập thí nghiệm và
phân tích. Đầu tiên, các tập dữ liệu được sử dụng trong
bài báo này và tiêu chí đánh giá hiệu suất thuật toán được
trình bày. Sau đó, các thiết lập tham số thí nghiệm liên
quan đến thuật toán đề xuất được trình bày. Sau đó, những
kết quả thí nghiệm và phân tích này được cung cấp chi
tiết. Cuối cùng, các thí nghiệm phân tích hiệu suất mở
rộng được thực hiện để hiểu rõ hơn về thuật toán EMO-
DIR đề xuất.

A. Tập dữ liệu Chuẩn và Tiêu chí Đánh giá Hiệu suất
Bốn tập dữ liệu phân loại hình ảnh được sử dụng trong
bài báo này. Chúng là CIFAR10 [43], CIFAR100 [43],
và ImageNet-100 [44], và ImageNet-1K [45]. CIFAR10
và CIFAR100 chứa 50.000 mẫu huấn luyện và 10.000
mẫu kiểm tra với hình ảnh màu 32×32. Tập dữ liệu
CIFAR10 chứa 10 loại mẫu, trong khi tập dữ liệu CIFAR100
chứa 100 loại mẫu. Tập dữ liệu ImageNet-100/1K chứa
100/1000 loại hình ảnh màu, và những hình ảnh này có
kích thước khác nhau. Tập dữ liệu này chứa 127K/1.28M
mẫu huấn luyện và 5K/50K mẫu kiểm tra.

Để thuận tiện so sánh hiệu suất của thuật toán đề xuất
với các thuật toán cắt tỉa mạng khác, ba tiêu chí đánh
giá hiệu suất được sử dụng, cụ thể là lỗi dự đoán của
mạng trên tập kiểm tra, tỷ lệ cắt tỉa của các phép toán
dấu phẩy động, và tỷ lệ cắt tỉa của số lượng tham số.
Tỷ lệ cắt tỉa cho các phép toán dấu phẩy động và tỷ lệ
cắt tỉa cho số lượng tham số được đưa ra trong các phương
trình (12) và (13).

PFlops = 1−Flops (Model pruned )/Flops (Model unpruned )(12)
PParameters = 1−Param (Model pruned )/Param (Model unpruned )(13)

trong đó Flops (·) biểu thị hàm tính toán cho lượng phép
toán dấu phẩy động và Param (·) biểu thị hàm tính toán
cho số lượng tham số. Model unpruned biểu thị mô hình
mạng chưa cắt tỉa và Model pruned biểu thị mô hình
mạng đã cắt tỉa.

B. Thiết lập Tham số Thí nghiệm
Bài báo này sử dụng hai loại tham số. Một loại được
sử dụng cho thuật toán EMO. Thuật toán tiến hóa được
sử dụng là NSGA-II [46]. Các toán tử lai ghép và đột
biến là lai ghép nhị phân mô phỏng và toán tử đột biến
đa thức. Các thiết lập chi tiết hơn cho loại tham số này
được thể hiện trong Bảng I. Các thí nghiệm được thực
hiện trong bài báo này được thực hiện trên các mạng
ResNet [47] và VGG [48], bao gồm bốn cấu trúc mạng,
ResNet56, ResNet110, ResNet50, và VGG16. Để đơn
giản hóa việc chia các mạng con, các lớp mạng xử lý
các đặc trưng có cùng độ phân giải không gian được chia
vào cùng một mạng con. Xem xét rằng số lượng cấu trúc
mạng con được chia thành các mạng ResNet56 và ResNet110
khác với ResNet50 và VGG16, các thiết lập tham số của
chúng cũng khác nhau. Việc chia nhiều mạng con hơn
có thể giảm độ phức tạp tối ưu của thuật toán và đạt
đến không gian tìm kiếm kết hợp lớn hơn với cùng thiết
lập tham số. Do đó, các thí nghiệm với 4 mạng con thiết
lập kích thước quần thể và số lần lặp nhỏ hơn so với
những thí nghiệm với 3 mạng con.

BẢNG I
THIẾT LẬP THAM SỐ LIÊN QUAN ĐẾN THUẬT TOÁN TIẾN HÓA.
Cấu trúc Mạng ResNet56 ResNet110 ResNet50 VGG16
Số Mạng con 3 4
Kích thước Quần thể 40 20
Số Con non Mới 20 10
Số lần Lặp 7 5
Không gian Kết hợp 5,832,000 24,010,000

--- TRANG 9 ---
9
Loại kia được sử dụng cho việc huấn luyện mạng nơ-ron.
Bài báo này sử dụng các thiết lập tham số khác nhau cho
các tập dữ liệu khác nhau, và các thiết lập chi tiết được
thể hiện trong Bảng II.

BẢNG II
THIẾT LẬP THAM SỐ LIÊN QUAN ĐẾN HUẤN LUYỆN MẠNG.
Tập Dữ liệu CIFAR10 CIFAR100 ImageNet-100
Epochs mạng đầy đủ 300 240 100
Epochs mạng con 100 100 50
Optimizer SGD
LR Ban đầu 0.1 0.05
Kích thước Batch 64
Weight decay 0.0005 0.0001
LR scheduler Cosine MStep [150,180,210] MStep [30,60,90]

Mạng con chứa ít tham số hơn so với cấu trúc mạng
đầy đủ, và do đó nó hội tụ nhanh hơn. Trong thí nghiệm,
nó hội tụ tốt chỉ trong một nửa hoặc thậm chí một phần
ba epochs huấn luyện. Ngoài ra, tất cả các thí nghiệm
được thực hiện trong thư viện học sâu Pytorch [49].

C. Kết quả Thí nghiệm và Phân tích trên Các Tập dữ liệu
Chuẩn

Để xác minh hiệu suất của EMO-DIR trên các tập dữ
liệu khác nhau, các kiểm tra hiệu suất được thực hiện
trên bốn tập dữ liệu trong bài báo này. Phần tiếp theo
của tiểu mục này sẽ chi tiết các kết quả thí nghiệm và
phân tích tương ứng của các tập dữ liệu này.

1) Kết quả Thí nghiệm và Phân tích trên Tập dữ liệu
CIFAR10:

Hiệu suất của EMO-DIR được kiểm tra trên tập dữ liệu
phân loại hình ảnh cỡ trung CIFAR10. Các mạng nơ-ron
được sử dụng trong thí nghiệm là các mạng ResNet56,
ResNet110 và VGG16. Kết quả thí nghiệm được thể hiện
trong Bảng III, IV và V, cho thấy lỗi kiểm tra (Err), số
lượng phép toán dấu phẩy động (FLOPs), tỷ lệ cắt tỉa
của phép toán dấu phẩy động (PR-F), số lượng tham số
(Param), và tỷ lệ cắt tỉa của số lượng tham số (PR-P)
trên các mạng nơ-ron đã cắt tỉa thu được từ các thuật
toán cắt tỉa khác nhau.

BẢNG III
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ THUẬT TOÁN SO SÁNH
TRÊN CIFAR10 CHO RESNET56.
Phương pháp Err (%) FLOPs PR-F (%) Param PR-P (%)
L1-Net [29] 6.94 90.9M 27.6 0.73M 14.1
CCP-AC [50] 6.58 59.2M 52.8 - -
SFR [19] 6.65 59.4M 52.7 - -
CD [20] 6.88 90.7M 27.9 0.65M 23.5
NISP [21] 6.95 70.5M 43.8 0.48M 43.5
FPGM [22] 6.51 59.4M 52.6 - -
GAL [23] 7.02 78.0M 37.6 0.75M 11.8
HRank [24] 6.83 62.7M 50 0.49M 42.4
ASFP [25] 6.65 59.0M 52.6 - -
LRMF [26] 6.71 59.4M 52.6 - -
Niu et al. [31] 6.52 63.4M 49.5 0.47M 44.7
EMO-DIR 6.29 49.5M 60.6 0.37M 57.0

Bảng III mô tả kết quả cắt tỉa của EMO-DIR và thuật
toán so sánh trên ResNet56. Cột đầu tiên của bảng trình
bày các thuật toán cắt tỉa được sử dụng, và cột thứ hai
trình bày lỗi dự đoán của mạng đã cắt tỉa thu được bởi
thuật toán tương ứng. Cột thứ ba và thứ tư trình bày số
lượng phép toán dấu phẩy động của mạng đã cắt tỉa và
tỷ lệ cắt tỉa tương ứng. Cột thứ năm và thứ sáu cho thấy
số lượng tham số và tỷ lệ cắt tỉa tương ứng của mạng
đã cắt tỉa. Kết quả thí nghiệm cho thấy EMO-DIR hoạt
động tốt hơn trong nhiệm vụ cắt tỉa này. Thuật toán cắt
tỉa được đề xuất bởi Niu et al. giảm 49.5% số lượng
phép toán dấu phẩy động và 44.7% số lượng tham số
với lỗi 6.52%. Ngược lại, thuật toán đề xuất giảm tỷ lệ
cắt tỉa của số lượng phép toán dấu phẩy động và số lượng
tham số lần lượt là 60.6% và 57.0% với lỗi 6.29%. Điều
này chỉ ra tính hiệu quả của EMO-DIR.

BẢNG IV
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ THUẬT TOÁN SO SÁNH
TRÊN CIFAR10 CHO RESNET110.
Phương pháp Err (%) FLOPs PR-F (%) Param PR-P (%)
L1-Net [29] 6.45 213M 15.8 1.68M 2.3
SFR [19] 6.14 150M 40.7 - -
CD [20] 6.73 154M 39.1 1.13M 34.3
NISP [21] 6.61 143M 43.5 0.98M 43.1
FPGM [22] 6.32 121M 52.2 - -
GAL [23] 7.45 130M 48.5 0.95M 44.8
HRank [24] 6.64 105.7M 58.2 0.70M 59.2
CAC [27] 6.46 123.5M 51.15 0.82M 52.31
ASFP [25] 6.63 121M 52.3 - -
LRMF [26] 6.39 94.0M 62.8 - -
Niu et al. [31] 6.22 126M 50.2 0.78M 54.7
EMO-DIR 6.04 72.2M 71.5 0.55M 68.0

Bảng IV cho thấy hiệu suất cắt tỉa của thuật toán đề
xuất và thuật toán so sánh trên ResNet110, có cùng cấu
trúc như Bảng III. ResNet110 có hơn gấp đôi số lượng
tham số và phép toán dấu phẩy động so với ResNet56,
làm cho nhiệm vụ cắt tỉa này khó khăn hơn. So sánh
Bảng III với Bảng IV, chúng ta có thể thấy rằng mạng
đã cắt tỉa thu được trên ResNet110 chứa quy mô tham
số lớn hơn và nhiều số lượng phép toán dấu phẩy động
hơn dưới các lỗi tương tự. Ví dụ, ASFP thu được các
mạng cắt tỉa với lỗi 6.65% và 6.63% trên hai mạng này
tương ứng, trong khi mạng cắt tỉa trên ResNet110 có gấp
đôi số lượng tham số so với mạng cắt tỉa trên ResNet56.
Tuy nhiên, thuật toán đề xuất vẫn hoạt động tốt cho nhiệm
vụ cắt tỉa này. Thuật toán cắt tỉa tiên tiến nhất được đề
xuất bởi Niu et al. [31] đạt được tỷ lệ cắt tỉa 50.2% và
54.7% cho phép toán dấu phẩy động và tham số dưới
lỗi 6.22%. Thuật toán đề xuất đạt được tỷ lệ cắt tỉa
71.5% và 68.0% cho phép toán dấu phẩy động và tham
số với ít lỗi hơn. Điều này chỉ ra tính hiệu quả và hiệu
suất của EMO-DIR trong các nhiệm vụ cắt tỉa phức tạp.

Bài báo này cũng kiểm tra hiệu suất cắt tỉa của thuật
toán đề xuất trên cấu trúc mạng VGG, được sử dụng để
kiểm tra hiệu suất tổng quát của thuật toán đề xuất trên
các cấu trúc mạng khác nhau. Kết quả thí nghiệm được
thể hiện trong Bảng V, có cùng cấu trúc như Bảng III.
Cấu trúc mạng được sử dụng là VGG16.

--- TRANG 10 ---
10
BẢNG V
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ THUẬT TOÁN SO SÁNH
TRÊN CIFAR10 CHO VGG16.
Phương pháp Err (%) FLOPs PR-F (%) Param PR-P (%)
L1-Net [29] 6.60 206M 34.2 5.4M 64.0
CD [20] 6.33 186M 40.5 3.23M 78.1
FPGM [22] 6.46 200M 35.9 - -
GAL [23] 9.22 172M 45.2 2.67M 82.2
Niu et al. [31] 6.27 138M 56.0 2.31M 84.6
EMO-DIR 6.24 96M 69.4 2.86M 80.6

Từ kết quả thí nghiệm, so với thuật toán cắt tỉa tiên tiến
nhất được đề xuất bởi Niu et al., thuật toán đề xuất thu
được tỷ lệ cắt tỉa FLOPs cao hơn với lỗi tương tự và
cắt tỉa tham số. FLOPs của họ là 138M, trong khi thuật
toán đề xuất là 96M.

2) Kết quả Thí nghiệm và Phân tích trên Tập dữ liệu
CIFAR100:

Bài báo này cũng kiểm tra EMO-DIR trên tập dữ liệu
CIFAR100, có cùng số lượng mẫu huấn luyện và kiểm
tra như CIFAR10, trong khi CIFAR100 có nhiều gấp
mười lần loại so với CIFAR10. Vì vậy việc phân loại
tập dữ liệu này thách thức hơn. Tiểu mục này thực hiện
các thí nghiệm cắt tỉa trên ResNet56 và ResNet110, và
Bảng VI và VII mô tả kết quả cắt tỉa của EMO-DIR và
các thuật toán so sánh.

BẢNG VI
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ THUẬT TOÁN SO SÁNH
TRÊN CIFAR100 CHO RESNET56.
Phương pháp Err (%) FLOPs PR-F (%) Param PR-P (%)
LCCL [51] 31.63 76.3M 39.3 - -
SFP [19] 31.21 59.4M 52.6 - -
FPGM [22] 30.34 59.4M 52.6 - -
TAS [52] 27.75 61.2M 51.3 - -
LFPC [28] 29.17 60.8M 51.6 - -
CAC [27] 30.22 61.4M 51.11 0.46M 45.51
EMO-DIR 27.54 52.73M 58.07 0.39M 54.45

Bảng VI có cùng cấu trúc như Bảng III. Kết quả thí
nghiệm chứng minh rằng EMO-DIR vẫn hoạt động tốt
trên tập dữ liệu CIFAR100. Thuật toán cắt tỉa mạng tiên
tiến nhất TAS thu được tỷ lệ cắt tỉa 51.3% cho số lượng
tham số dưới lỗi 27.75%. Ngược lại, thuật toán đề xuất
đạt được lỗi 27.62%, và tỷ lệ cắt tỉa phép toán dấu phẩy
động của nó cao hơn TAS 6.47 điểm. Điều này chỉ ra
tính hiệu quả của EMO-DIR trên tập dữ liệu CIFAR100.

BẢNG VII
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ THUẬT TOÁN SO SÁNH
TRÊN CIFAR100 CHO RESNET110.
Phương pháp Err (%) FLOPs PR-F (%) Param PR-P (%)
Niu et. al [31] 25.1 184M 27.5 1.29M 25.1
LCCL [51] 29.22 173M 31.3 - -
SFP [19] 28.72 121M 52.3 - -
FPGM [22] 27.45 121M 52.3 - -
TAS [52] 26.84 120M 52.6 - -
CAC [27] 28.19 123.5M 51.18 0.93M 45.77
EMO-DIR 24.96 108.6M 57.12 0.83M 52.09

Bảng VII có cùng cấu trúc như Bảng III. Kết quả thí
nghiệm chứng minh rằng EMO-DIR vẫn hoạt động tốt
trong nhiệm vụ cắt tỉa của ResNet110 phức tạp. Đối với
thuật toán cắt tỉa tiên tiến TAS, thuật toán đề xuất thu
được lỗi thấp hơn với tỷ lệ cắt tỉa phép toán dấu phẩy
động tương tự, và lỗi của thuật toán đề xuất thấp hơn
TAS 1.88 điểm. Ngoài ra, thuật toán đề xuất thu được
tỷ lệ cắt tỉa cao hơn với lỗi tương tự so với thuật toán
được đề xuất bởi Niu et al. Tỷ lệ cắt tỉa phép toán dấu
phẩy động và tham số của nó gấp hơn hai lần so với thuật
toán được đề xuất bởi Niu et al. Điều này chỉ ra tính
hiệu quả và hiệu suất của EMO-DIR.

3) Kết quả Thí nghiệm và Phân tích trên Tập dữ liệu
ImageNet-100 và ImageNet-1K:

Bài báo này cũng thực hiện các thí nghiệm cắt tỉa đa
mục tiêu tiến hóa trên tập dữ liệu ImageNet-100. Tập
dữ liệu này có nhiều mẫu dữ liệu hơn, mỗi mẫu có độ
phân giải không gian cao hơn. Nhiệm vụ cắt tỉa trên tập
dữ liệu này phức tạp hơn. Sau đó, cấu trúc mạng đã cắt
tỉa được chuyển sang tập dữ liệu lớn hơn, ImageNet-1K,
được sử dụng để kiểm tra hiệu suất tổng quát của cấu
trúc đã cắt tỉa từ thuật toán đề xuất trên tập dữ liệu lớn
hơn. Chúng tôi chỉ sửa đổi số lớp đầu ra của lớp fully
connected cuối cùng để phù hợp với tập dữ liệu mới.
Bảng VIII ghi lại kết quả thí nghiệm tương ứng, trong
đó cấu trúc mạng được sử dụng trong thí nghiệm này
là ResNet50.

BẢNG VIII
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ THUẬT TOÁN SO SÁNH
TRÊN IMAGE NET-100/1K CHO RESNET50.
ImageNet-100
Phương pháp Err Top1/Top5 FLOPs PR-F (%) Param PR-P (%)
Baseline 15.70 / 3.88 4.09G 0.00 25.56M 0.00
EMO-DIR 15.90 / 3.90 2.10G 48.74 12.94M 45.43
ImageNet-1K
Phương pháp Err Top1/Top5 FLOPs PR-F (%) Param PR-P (%)
He et al. [53] 27.70 / 9.20 2.73G 33.3 - -
GAL-0.5 [23] 28.05 / 9.06 2.33G 43.0 21.20M 16.9
SSS-26 [54] 28.18 / 9.21 2.33G 43.0 15.60M 38.8
EMO-DIR 27.31 /8.85 2.10G 48.7 14.78M 42.2

Bảng VIII chứng minh rằng thuật toán EMO-DIR đề
xuất vẫn hoạt động tốt trên tập dữ liệu ImageNet-100.
Nó đạt được tỷ lệ cắt tỉa 48.74% cho phép toán dấu phẩy
động và 45.43% cho số lượng tham số, với sự giảm 0.20
và 0.02 điểm trong hiệu suất Top-1 và Top-5. Điều này
chỉ ra tính hiệu quả và hiệu suất của EMO-DIR trong
nhiệm vụ cắt tỉa mô hình cho các tập dữ liệu quy mô
lớn. Trong các thí nghiệm kiểm tra hiệu suất tổng quát
của cấu trúc đã cắt tỉa từ ImageNet-100 trên ImageNet-
1K, mạng đã cắt tỉa thu được bởi thuật toán đề xuất vượt
trội hơn ba thuật toán cắt tỉa khác. Thuật toán đề xuất
thu được tỷ lệ cắt tỉa cao hơn cho phép toán dấu phẩy
động và số lượng tham số với mất mát hiệu suất Top-1
và Top-5 thấp hơn. Điều này cho thấy rằng cấu trúc mạng
được cắt tỉa bởi thuật toán EMO-DIR đề xuất có thể hoạt
động tốt trên tập dữ liệu tương tự.

--- TRANG 11 ---
11
D. Phân tích Hiệu suất của Thuật toán Đề xuất
Từ các thí nghiệm trên, EMO-DIR hoạt động tốt trên
nhiều tập dữ liệu. Trong phần này, chúng tôi thực hiện
thêm các thí nghiệm để phân tích sâu hơn hiệu suất của
EMO-DIR.

1) So sánh Hiệu suất Giữa Tối ưu Toàn thể và Chia-để-trị:
Ý tưởng chia-để-trị là chìa khóa cho thuật toán đề xuất,
phân tách nhiệm vụ cắt tỉa đa mục tiêu tiến hóa phức
tạp trên toàn bộ mạng thành các nhiệm vụ cắt tỉa đa mục
tiêu tiến hóa đơn giản trên nhiều mạng con nhỏ hơn.
Một mặt, ý tưởng này có thể giảm độ phức tạp tối ưu
của thuật toán đa mục tiêu tiến hóa. Mặt khác, nó có
thể giảm độ phức tạp tính toán của việc xác minh hiệu
suất mạng. Để hiểu rõ hơn về phương pháp cắt tỉa mạng
đa mục tiêu tiến hóa chia-để-trị đề xuất, bài báo này thiết
kế một thuật toán tối ưu toàn thể EMO-W và thực hiện
các thí nghiệm phân tích tương ứng. EMO-W sử dụng
ý tưởng tối ưu toàn thể thay vì chia-để-trị trong thuật
toán EMO-DIR, mã hóa và tối ưu toàn bộ mạng như
một mạng con. Để cho phép mạng hội tụ đầy đủ, nó sử
dụng epochs huấn luyện đầy đủ khi xác minh hiệu suất
của mạng đã cắt tỉa. Phần còn lại của các thiết lập giống
như EMO-W. Mạng được sử dụng là ResNet56; tập dữ
liệu là CIFAR100. Bảng IX mô tả kết quả thí nghiệm.
Nó so sánh lỗi dự đoán, số lượng phép toán dấu phẩy
động, tỷ lệ cắt tỉa của phép toán dấu phẩy động, số lượng
tham số, tỷ lệ cắt tỉa của tham số, và thời gian chạy từ
hai phương pháp này.

BẢNG IX
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ EMO-W TRÊN CIFAR100
CHO RESNET56.
Phương pháp Error (%) FLOPs PR (%) Param PR (%) GPU Day
EMO-W 27.44 65.81M 47.66 0.46M 46.63 4.9
EMO-DIR 27.54 52.73M 58.07 0.39M 54.45 2.3

Bảng IX cho thấy EMO-DIR thu được hiệu suất cắt
tỉa tốt hơn. Mạng cắt tỉa được thiết kế bởi EMO-DIR
thu được tỷ lệ cắt tỉa cao hơn trên phép toán dấu phẩy
động và số lượng tham số với hiệu suất tương tự. Tỷ lệ
cắt tỉa trên phép toán dấu phẩy động cao hơn EMO-W
10.41 điểm, và số lượng tham số cao hơn EMO-W 7.82
điểm. Ngoài ra, EMO-DIR tiêu thụ thời gian chạy thấp
hơn, và thời gian sử dụng thấp hơn một nửa so với EMO-
W, nhờ vào tốc độ hội tụ nhanh của mạng con.

Để phân tích sâu hơn về hội tụ mạng dưới hai phương
pháp, quá trình huấn luyện mạng dưới hai phương pháp
cũng được so sánh trong Hình 7. Các mạng là các cấu
trúc mạng chưa cắt tỉa. So với mạng đã cắt tỉa, độ phức
tạp của cấu trúc mạng chưa cắt tỉa cao hơn, điều này
có lợi hơn cho việc so sánh hội tụ của cấu trúc mạng
dưới hai phương pháp. Trong thí nghiệm này, mạng hoàn
chỉnh và mạng con được huấn luyện ở các epochs huấn
luyện khác nhau, và độ chính xác hội tụ của chúng được
ghi lại.

[Hình 7. Sự hội tụ của các cấu trúc mạng trong EMO-DIR và EMO-W với các epochs huấn luyện khác nhau.]

Hình 7 cho thấy mạng toàn thể Full-Net hội tụ chậm
hơn so với mạng con Sub-Net-1, Sub-Net-2, và Sub-
Net-3, và Full-Net yêu cầu epoch huấn luyện dài hơn
để hội tụ đến độ chính xác ổn định. Trong thí nghiệm,
hiệu suất Full-Net tiếp tục tăng khi epoch huấn luyện
tăng và chỉ ổn định khi vượt quá 250 epoch. Ngược lại,
độ chính xác của ba mạng con khác ổn định khi epoch
huấn luyện của chúng vượt quá 75. Epoch huấn luyện
để hội tụ đến độ chính xác ổn định ít hơn một phần ba
so với cấu trúc mạng toàn thể. Ngoài ra, ba mạng con
này hội tụ ở các độ chính xác khác nhau. Mạng con gần
với đầu vào mạng hơn có độ chính xác thấp hơn, và
mạng con gần với đầu ra hơn có độ chính xác cao hơn.
Điều này là do các mạng con khác nhau tập trung vào
các cấp độ trích xuất đặc trưng khác nhau. Càng gần
với đầu ra của mạng, các đặc trưng được tạo bởi mạng
con càng tiên tiến, và việc một bộ phát hiện đặc trưng
đơn giản trích xuất lớp đúng càng ít phức tạp.

Từ các thí nghiệm trên, đáng chú ý rằng ý tưởng dựa
trên chia-để-trị có thể giảm độ khó của thuật toán cắt
tỉa đa mục tiêu tiến hóa trong các mạng phức tạp. Một
mặt, ý tưởng này giảm không gian tối ưu của thuật toán,
giảm độ khó của nó. Mặt khác, nó giảm số lượng tham
số của mạng cần xác minh, tăng tốc hội tụ của mạng
và giảm độ phức tạp tính toán của thuật toán. Điều này
cho phép thuật toán đề xuất thu được cắt tỉa mạng tốt
hơn với độ phức tạp tính toán thấp hơn.

2) Tác động của Ràng buộc Chéo mạng đến Hợp tác giữa
các Mạng con:

Phương pháp huấn luyện mạng con đề xuất dựa trên
phương pháp ràng buộc chéo mạng có thể ràng buộc
đặc trưng đầu ra của mạng con trước và đặc trưng đầu
vào của mạng con tiếp theo để tăng cường mối quan hệ
giữa các mạng con được tối ưu độc lập, cải thiện hiệu
suất tổng thể của mạng được tối ưu. Để xác minh tác
động của phương pháp này đến EMO-DIR, một thuật
toán EMO-DIR-nc được thiết kế không sử dụng ràng
buộc chéo mạng. Nó loại bỏ thành phần ràng buộc đặc
trưng trong Phương trình (9) và

--- TRANG 12 ---
12
chỉ huấn luyện các mạng con với mất mát entropy chéo.
Tập dữ liệu được sử dụng là CIFAR100, mạng là ResNet56,
và Bảng X mô tả kết quả thí nghiệm.

BẢNG X
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ EMO-DIR- NC CHO
RESNET56 TRÊN CIFAR100.
Phương pháp Error (%) FLOPs PR (%) Param PR (%)
EMO-DIR-nc 27.43 54.74M 56.47 0.44M 48.50
EMO-DIR 27.54 52.73M 58.07 0.39M 54.45

Kết quả thí nghiệm cho thấy rằng ràng buộc đặc trưng
chéo mạng cải thiện hiệu suất của thuật toán đề xuất.
Dưới hiệu suất tương tự, thuật toán đề xuất cải thiện tỷ
lệ cắt tỉa trên tham số khoảng 6 điểm và tỷ lệ cắt tỉa
trên phép toán dấu phẩy động khoảng 1.6 điểm so với
phương pháp không có ràng buộc đặc trưng chéo mạng.
Những kết quả này chứng minh hiệu suất xuất sắc của
phương pháp ràng buộc đặc trưng chéo mạng đề xuất.

Ngoài ra, để phân tích sâu hơn về tác động của ràng
buộc đặc trưng chéo mạng đến mối quan hệ giữa các
mạng con đã cắt tỉa, các đo lường hiệu suất tương ứng
cũng được thực hiện trên tất cả các cấu trúc mạng đã
cắt tỉa thu được từ xếp hạng suy giảm hiệu suất toàn
cầu trong cả hai thuật toán. Các đo lường sử dụng trọng
số của mạng con thu được trong quá trình tối ưu tiến
hóa mà không cần cập nhật bổ sung. Nếu các mạng con
được huấn luyện độc lập này có sự hợp tác tốt, mạng
hoàn chỉnh hoạt động tốt trên nhiệm vụ mục tiêu. Hơn
nữa, vì các cấu trúc cắt tỉa mạng con tham gia trong xếp
hạng hiệu suất toàn cầu đều là các giải pháp không bị
chi phối trên mỗi nhiệm vụ cắt tỉa mạng con, cấu trúc
cắt tỉa mạng được xây dựng bởi xếp hạng suy giảm hiệu
suất toàn cầu cũng là một tập hợp các giải pháp không
bị chi phối nếu sự hợp tác giữa các mạng con mạnh mẽ.
Vì cấu trúc mạng chỉ được thay đổi một mạng con tại
một thời điểm khi xây dựng cấu trúc mạng với chỉ số
suy giảm hiệu suất toàn cầu, và cả cấu trúc gốc và cấu
trúc được điều chỉnh đều là các giải pháp không bị chi
phối trên cùng nhiệm vụ cắt tỉa mạng con, cấu trúc mạng
trước và sau các quá trình cắt tỉa vẫn còn trên tập hợp
các giải pháp không bị chi phối. Do đó, nếu sự hợp tác
giữa các cấu trúc mạng con được tối ưu độc lập mạnh
mẽ, các cấu trúc con thu được trong quá trình tối ưu vẫn
có thể hợp tác tốt mà không cần cập nhật trọng số. Ngay
cả khi xem xét sự can thiệp ngẫu nhiên của việc xác
minh hiệu suất mạng, cấu trúc mạng được xây dựng bởi
xếp hạng suy giảm hiệu suất toàn cầu vẫn gần như là
một tập hợp các giải pháp không bị chi phối khi sử dụng
trọng số thu được trong quá trình tiến hóa. Vì lý do này,
bài báo này thực hiện các thí nghiệm phân tích hiệu suất
tương ứng sử dụng tất cả các cấu trúc mạng được xây
dựng bởi xếp hạng suy giảm hiệu suất toàn cầu trong
Bảng X. Tỷ lệ lỗi và tỷ lệ tham số còn lại cho tất cả
các cấu trúc mạng được thể hiện trong Hình 8. Trọng
số cho tất cả các cấu trúc mạng trong thí nghiệm được
thu được từ việc huấn luyện trong quá trình tối ưu đa
mục tiêu tiến hóa mà không có bất kỳ cập nhật nào.

[Hình 8. Tỷ lệ cắt tỉa mạng và tỷ lệ tham số còn lại các cấu trúc mạng thu được bởi EMO-DIR và EMO-DIR-nc thông qua GPIR.]

Các thí nghiệm cho thấy rằng cấu trúc mạng được xây
dựng bởi thuật toán đề xuất được phân phối gần như
Mặt trận Pareto. Ngược lại, thuật toán EMO-DIR-nc,
loại bỏ ràng buộc chéo mạng, xây dựng cấu trúc mạng
với phân phối rời rạc hơn chứa nhiều giải pháp bị chi
phối hơn. Hơn nữa, thuật toán EMO-DIR cũng hoạt động
tốt hơn ở cùng tỷ lệ cắt tỉa, điều này cho thấy rằng ràng
buộc chéo mạng tăng cường mối quan hệ giữa các mạng
con và cải thiện hiệu suất tổng thể của mạng bao gồm
các mạng con được tối ưu độc lập.

3) Mối quan hệ Giữa Hiệu suất Mạng con và Thay đổi
Đặc trưng:

Các bộ phát hiện đặc trưng có thể tính toán độ chính
xác phân loại, đo lường khả năng xử lý đặc trưng của
các mạng con. Tuy nhiên, sự thay đổi giữa các đặc trưng
được tạo bởi mạng con cắt tỉa và mạng con chưa cắt
tỉa cũng có thể đo lường sự sụt giảm khả năng xử lý
đặc trưng. Để giải quyết vấn đề này, một thuật toán cắt
tỉa đa mục tiêu tiến hóa dựa trên thay đổi đặc trưng,
EMO-DIR- L2, được thiết kế, sử dụng chuẩn L2 giữa
các đặc trưng được tạo bởi mạng con cắt tỉa và mạng
con chưa cắt tỉa làm thước đo sụt giảm hiệu suất. Các
thiết lập thí nghiệm còn lại giống như EMO-DIR. Bảng
XI ghi lại kết quả thí nghiệm.

BẢNG XI
KẾT QUẢ CẮT TỈA CỦA EMO-DIR VÀ EMO-DIR- L2 CHO
RESNET56 TRÊN CIFAR100.
Phương pháp Error (%) FLOPs PR (%) Param PR (%)
EMO-DIR- L2 27.58 60.78M 51.67 0.40M 53.08
EMO-DIR 27.54 52.73M 58.07 0.39M 54.45

Cấu trúc mạng được sử dụng là ResNet56; tập dữ liệu
là CIFAR100. Kết quả thí nghiệm chứng minh rằng EMO-
DIR tốt hơn phương pháp sử dụng thay đổi giữa các
đặc trưng làm thước đo hiệu suất mạng con. Với tỷ lệ
cắt tỉa tham số và lỗi tương tự, thuật toán đề xuất có
tỷ lệ cắt tỉa cho phép toán dấu phẩy động cao hơn EMO-
DIR- L2 6.4 điểm. Sự thay đổi giữa các đặc trưng, trong
khi phản ánh sự sụt giảm khả năng xử lý đặc trưng của
mạng con đã cắt tỉa so với mạng con chưa cắt tỉa, không
giống với sự sụt giảm hiệu suất thực tế. Các đặc trưng
không đơn thuần là tập hợp các phần tử mà còn là các
mối quan hệ phức tạp giữa các phần tử. Chuẩn L2 có
thể đo lường chính xác sự thay đổi trong các phần tử
đặc trưng, nhưng sự thay đổi trong các mối quan hệ phức
tạp giữa các phần tử đặc trưng khó đo lường chính xác.
Bộ phát hiện đặc trưng được thiết kế cho mạng con chưa
cắt tỉa có thể phát hiện và xử lý các đặc trưng được tạo
bởi mạng con và chuyển đổi thông tin có giá trị được
phát hiện thành độ chính xác phân loại. Do đó, bộ phát
hiện đặc trưng cung cấp một thước đo tốt hơn về khả
năng xử lý đặc trưng của mạng con.

Ngoài ra, bài báo này cũng so sánh sự thay đổi trong
các phần tử đặc trưng được tạo bởi mạng con đã cắt
tỉa với độ chính xác dự đoán được tạo bởi bộ phát hiện
đặc trưng. Sự thay đổi của phần tử đặc trưng (mất mát
L2) và độ chính xác được chuẩn hóa về [0, 1] để so sánh
rõ ràng. Chúng đều là hàm của cấu trúc cắt tỉa mạng
và thay đổi khi phương án cắt tỉa thay đổi. Hình 9 mô
tả mối quan hệ giữa mất mát được chuẩn hóa và độ
chính xác được chuẩn hóa cho tất cả các mạng con được
tạo trong quá trình tiến hóa. Ba mạng con trong hình
này đến từ tối ưu đa mục tiêu tiến hóa độc lập của ba
mạng con được chia bởi cùng một mạng.

[Hình 9. Mối quan hệ giữa các thay đổi đặc trưng do mạng con đã cắt tỉa mang lại và độ chính xác dự đoán của bộ phát hiện đặc trưng tương ứng.]

Kết quả thí nghiệm cho thấy mối tương quan âm giữa
thay đổi đặc trưng và độ chính xác. Điều này giải thích
tại sao EMO-DIR sử dụng độ chính xác và EMO-DIR-
L2 sử dụng thay đổi đặc trưng hoạt động tốt trong nhiệm
vụ cắt tỉa mạng đa mục tiêu tiến hóa. Tuy nhiên, việc
phóng to cục bộ trong Hình 9 cho thấy rằng thay đổi
đặc trưng không thể phản ánh tốt sự thay đổi độ chính
xác. Sự giảm trong thay đổi đặc trưng có thể dẫn đến
sự giảm độ chính xác. Do đó, một bộ phát hiện đặc trưng
được huấn luyện trước có thể hướng dẫn tốt hơn việc
cắt tỉa đa mục tiêu tiến hóa trên các mạng con.

IV. KẾT LUẬN
Các thuật toán nén mạng EMO phải đối mặt với không
gian tối ưu phức tạp và việc xác minh mạng nén tốn
nhiều tài nguyên khi xử lý nhiệm vụ nén trên các cấu
trúc mạng phức tạp, điều này hạn chế ứng dụng của nó
trong lĩnh vực này. Để giải quyết vấn đề này, bài báo
này đề xuất một khung cắt tỉa mạng phức tạp đa mục
tiêu dựa trên chia-để-trị và xếp hạng suy giảm hiệu suất
toàn cầu để giảm độ phức tạp không gian và tiêu thụ
tài nguyên của các thuật toán cắt tỉa dựa trên EMO. Thứ
nhất, một phương pháp cắt tỉa mạng EMO chia-để-trị
được thiết kế. Phương pháp này có thể giảm độ khó tối
ưu của các thuật toán cắt tỉa đa mục tiêu và tiêu thụ
tài nguyên xác minh cấu trúc cắt tỉa. Trong nhiệm vụ
cắt tỉa trên ResNet56 tại CIFAR100, so với phương pháp
cắt tỉa mạng toàn thể, phương pháp đề xuất này đạt được
cải thiện 10.41 điểm trong tỷ lệ cắt tỉa phép toán dấu
phẩy động, cải thiện 7.82 điểm trong tỷ lệ cắt tỉa tham
số và chỉ tiêu thụ khoảng một nửa thời gian chạy dưới
hiệu suất tương tự. Bài báo này sau đó thiết kế một phương
pháp huấn luyện mạng con dựa trên ràng buộc chéo
mạng. Nó cho phép các mạng con được cắt tỉa độc lập
hợp tác tốt hơn bằng cách ràng buộc các đặc trưng đầu
ra của mạng con trước và các đặc trưng đầu vào của
mạng con tiếp theo, cải thiện hiệu suất tổng thể của mạng
đã cắt tỉa. Trong phân tích thí nghiệm trên ResNet56
tại CIFAR100, so với phương pháp không có ràng buộc
đặc trưng, thuật toán đề xuất mang lại cải thiện khoảng
6 điểm trong tỷ lệ cắt tỉa tham số và cải thiện 1.6 điểm
trong tỷ lệ cắt tỉa phép toán dấu phẩy động với hiệu
suất tương tự. Cuối cùng, bài báo này thiết kế một phương
pháp cắt tỉa kết hợp nhiều mạng con dựa trên EMO.
Nó kết hợp kết quả cắt tỉa đa mục tiêu trên nhiều mạng
con để thiết kế một phương án cắt tỉa kết hợp. Tính hiệu
quả và hiệu suất của EMO-DIR được xác thực trên ba
tập dữ liệu có kích thước khác nhau.

Bài báo này áp dụng ý tưởng chia-để-trị vào cắt tỉa
đa mục tiêu tiến hóa. Có nhiều khía cạnh để cải thiện.
Ví dụ, làm thế nào để giảm thêm tiêu thụ tài nguyên của
thuật toán và cải thiện hiệu suất của thuật toán EMO.
Chúng tôi sẽ tiếp tục nghiên cứu trong lĩnh vực này trong
công việc tương lai.

TÀI LIỆU THAM KHẢO
[1] R. Shang, J. Ren, S. Zhu, W. Zhang, J. Feng, Y. Li, và L. Jiao, "Hy-
perspectral Image Classification Based on Pyramid Coordinate Attention
and Weighted Self-Distillation," IEEE Transactions on Geoscience and
Remote Sensing, vol. 60, pp. 1-16, 2022.
[2] X. Wang, Z. Chen, J. Tang, B. Luo, Y. Wang, Y. Tian, và F. Wu,
"Dynamic Attention Guided Multi-Trajectory Analysis for Single Ob-
ject Tracking," IEEE Transactions on Circuits and Systems for Video
Technology, vol. 31, no. 12, pp. 4895-4908, Dec. 2021.
[3] Y. Wu, L. Jiao, F. Liu, Z. Pi, X. Liu, L. Li, và S. Yang, "CSLT:
Contourlet-Based Siamese Learning Tracker for Dim and Small Targets
in Satellite Videos," IEEE Transactions on Geoscience and Remote
Sensing, vol. 61, pp. 1-13, 2023.
[4] Z. Li, Y. Sun, L. Zhang, và J. Tang, "CTNet: Context-Based Tandem
Network for Semantic Segmentation," IEEE Transactions on Pattern
Analysis and Machine Intelligence, vol. 44, no. 12, pp. 9904-9917, 2022.
[5] L. Li, T. Zhou, W. Wang, J. Li, và Y. Yang, "Deep Hierarchical
Semantic Segmentation," Proceedings of the IEEE/CVF Conference on
Computer Vision and Pattern Recognition, pp. 1246-1257, 2022.
[6] A. Krizhevsky, I. Sutskever, và G. E. Hinton, "Imagenet classification
with deep convolutional neural networks," Advances in neural informa-
tion processing systems, vol. 25, pp. 1097-1105, 2012.
[7] C. Szegedy, W. Liu, Y. Jia, P. Sermanet, S. Reed, D. Anguelov, D. Erhan,
V. Vanhoucke, và A. Rabinovich, "Going deeper with convolutions,"
Proceedings of the IEEE conference on computer vision and pattern
recognition, pp. 1-9, 2015.
[8] K. Simonyan và A. Zisserman, "Very deep convolutional networks for
large-scale image recognition," arXiv preprint arXiv:1409.1556, 2014.
[9] S. Han, J. Pool, J. Tran, và W. Dally, "Learning both Weights
and Connections for Efficient Neural Network," Advances in Neural
Information Processing Systems, vol. 28, 2015.
[10] G. Hinton, O. Vinyals, và J. Dean, "Distilling the knowledge in a neural
network," arXiv preprint arXiv:1503.02531, 2015.

--- TRANG 13 ---
13
[11] K. Zhang, C. Zhang, S. Li, D. Zeng, và S. Ge, "Student Network
Learning via Evolutionary Knowledge Distillation," IEEE Transactions
on Circuits and Systems for Video Technology, vol. 32, no. 4, pp. 2251-
2263, Apr. 2022.
[12] L. Yang, S. Gu, C. Shen, X. Zhao, và Q. Hu, "Skeleton Neural
Networks via Low-Rank Guided Filter Pruning," IEEE Transactions on
Circuits and Systems for Video Technology, vol. 33, no. 12, pp. 7197-
7211, Dec. 2023.
[13] K.-Y. Feng, X. Fei, M. Gong, A. K. Qin, H. Li, và Y. Wu, "An
Automatically Layer-Wise Searching Strategy for Channel Pruning
Based on Task-Driven Sparsity Optimization," IEEE Transactions on
Circuits and Systems for Video Technology, vol. 32, no. 9, pp. 5790-
5802, Sep. 2022.
[14] M. Lin, R. Ji, Z. Xu, B. Zhang, F. Chao, C.-W. Lin, và L. Shao,
"SiMaN: Sign-to-Magnitude Network Binarization," IEEE Transactions
on Pattern Analysis and Machine Intelligence, pp. 1-12, 2022.
[15] Y. Cai, Z. Yao, Z. Dong, A. Gholami, M. W. Mahoney, và K. Keutzer,
"ZeroQ: A Novel Zero Shot Quantization Framework," 2020 IEEE/CVF
Conference on Computer Vision and Pattern Recognition (CVPR), pp.
13 166-13 175, 2020.
[16] S. Xu, A. Huang, L. Chen, và B. Zhang, "Convolutional Neural
Network Pruning: A Survey," 2020 39th Chinese Control Conference
(CCC), pp. 7458-7463, 2020.
[17] Y. Guo, A. Yao, và Y. Chen, "Dynamic Network Surgery for Efficient
DNNs," Advances in Neural Information Processing Systems, vol. 29,
2016.
[18] M. Lin, L. Cao, S. Li, Q. Ye, Y. Tian, J. Liu, Q. Tian, và R. Ji, "Filter
Sketch for Network Pruning," IEEE Transactions on Neural Networks
and Learning Systems, pp. 1-10, 2021.
[19] Y. He, G. Kang, X. Dong, Y. Fu, và Y. Yang, "Soft filter pruning for
accelerating deep convolutional neural networks," Proceedings of the
27th International Joint Conference on Artificial Intelligence, pp. 2234-
2240, 2018.
[20] B. O. Ayinde và J. M. Zurada, "Building Efficient ConvNets using
Redundant Feature Pruning," International Conference on Learning
Representations, 2018.
[21] R. Yu, A. Li, C.-F. Chen, J.-H. Lai, V. I. Morariu, X. Han, M. Gao,
C.-Y. Lin, và L. S. Davis, "NISP: Pruning Networks Using Neuron
Importance Score Propagation," Proceedings of the IEEE Conference
on Computer Vision and Pattern Recognition, pp. 9194-9203, 2018.
[22] Y. He, P. Liu, Z. Wang, Z. Hu, và Y. Yang, "Filter pruning via
geometric median for deep convolutional neural networks acceleration,"
Proceedings of the IEEE Conference on Computer Vision and Pattern
Recognition, pp. 4340-4349, 2019.
[23] S. Lin, R. Ji, C. Yan, B. Zhang, L. Cao, Q. Ye, F. Huang, và D. Do-
ermann, "Towards Optimal Structured CNN Pruning via Generative
Adversarial Learning," Proceedings of the IEEE/CVF Conference on
Computer Vision and Pattern Recognition, pp. 2790-2799, 2019.
[24] M. Lin, R. Ji, Y. Wang, Y. Zhang, B. Zhang, Y. Tian, và L. Shao,
"HRank: Filter Pruning using High-Rank Feature Map," Proceedings of
the IEEE/CVF Conference on Computer Vision and Pattern Recognition
(CVPR), pp. 1529-1538, 2020.
[25] Y. He, X. Dong, G. Kang, Y. Fu, C. Yan, và Y. Yang, "Asymptotic
Soft Filter Pruning for Deep Convolutional Neural Networks," IEEE
Transactions on Cybernetics, vol. 50, no. 8, pp. 3594-3604, 2020.
[26] X. Zhang, W. Xie, Y. Li, J. Lei, và Q. Du, "Filter Pruning via Learned
Representation Median in the Frequency Domain," IEEE Transactions
on Cybernetics, pp. 1-11, 2021.
[27] Z. Chen, T.-B. Xu, C. Du, C.-L. Liu, và H. He, "Dynamical Channel
Pruning by Conditional Accuracy Change for Deep Neural Networks,"
IEEE Transactions on Neural Networks and Learning Systems, vol. 32,
no. 2, pp. 799-813, 2021.
[28] Y. He, Y. Ding, P. Liu, L. Zhu, H. Zhang, và Y. Yang, "Learning Filter
Pruning Criteria for Deep Convolutional Neural Networks Acceleration,"
IEEE/CVF Conference on Computer Vision and Pattern Recognition
(CVPR), 2020.
[29] H. Li, A. Kadav, I. Durdanovic, H. Samet, và H. P. Graf, "Pruning
Filters for Efficient ConvNets," International Conference on Learning
Representations, pp. 1-13, 2017.
[30] J. Yosinski, J. Clune, Y. Bengio, và H. Lipson, "How transferable
are features in deep neural networks?" Advances in Neural Information
Processing Systems, vol. 27, 2014.
[31] S. Niu, K. Gao, P. Ma, X. Gao, H. Zhao, J. Dong, Y. Chen, và
D. Shen, "Exploiting Sparse Self-Representation and Particle Swarm
Optimization for CNN Compression," IEEE Transactions on Neural
Networks and Learning Systems, pp. 1-13, 2022.

[32] H. Zhao, C. Zhang, B. Xue, M. Zhang, và B. Zhang, "A Two-
Stage Differential Evolutionary Algorithm for Deep Ensemble Model
Generation," IEEE Transactions on Evolutionary Computation, pp. 1-1,
2022.
[33] R. Shang, S. Zhu, J. Ren, H. Liu, và L. Jiao, "Evolutionary neural
architecture search based on evaluation correction and functional units,"
Knowledge-Based Systems, vol. 251, p. 109206, 2022.
[34] P. Stodola và J. Nohel, "Adaptive Ant Colony Optimization with
Node Clustering for the Multi-Depot Vehicle Routing Problem," IEEE
Transactions on Evolutionary Computation, pp. 1-1, 2022.
[35] J. Huang, B. Xue, Y. Sun, M. Zhang, và G. G. Yen, "Particle
Swarm Optimization for Compact Neural Architecture Search for Image
Classification," IEEE Transactions on Evolutionary Computation, pp. 1-
1, 2022.
[36] Y. Zhou, G. G. Yen, và Z. Yi, "Evolutionary Compression of Deep
Neural Networks for Biomedical Image Segmentation," IEEE Transac-
tions on Neural Networks and Learning Systems, vol. 31, no. 8, pp.
2916-2929, 2020.
[37] Y. Zhou, G. G. Yen, và Z. Yi, "A Knee-Guided Evolutionary Algo-
rithm for Compressing Deep Neural Networks," IEEE Transactions on
Cybernetics, vol. 51, no. 3, pp. 1626-1638, 2021.
[38] Y. Zhou, G. G. Yen, và Z. Yi, "Evolutionary Shallowing Deep Neural
Networks at Block Levels," IEEE Transactions on Neural Networks and
Learning Systems, pp. 1-13, 2021.
[39] J. L. Bentley, "Multidimensional divide-and-conquer," Communications
of the ACM, vol. 23, no. 4, pp. 214-229, 1980.
[40] A. Gidiotis và G. Tsoumakas, "A Divide-and-Conquer Approach to the
Summarization of Long Documents," IEEE/ACM Transactions on Audio,
Speech, and Language Processing, vol. 28, pp. 3029-3040, 2020.
[41] H. Xiong, H. Lu, C. Liu, L. Liu, Z. Cao, và C. Shen, "From Open Set
to Closed Set: Counting Objects by Spatial Divide-and-Conquer," pp.
8362-8371, 2019.
[42] K. Deb, "Multi-objective Optimisation Using Evolutionary Algorithms:
An Introduction," Multi-objective Evolutionary Optimisation for Product
Design and Manufacturing, pp. 3-34, 2011.
[43] A. Krizhevsky và H. Geoffrey, "Learning multiple layers of features
from tiny images," 2009.
[44] Y.-H. H. Tsai, T. Li, W. Liu, P. Liao, R. Salakhutdinov, và L.-P.
Morency, "Learning Weakly-supervised Contrastive Representations,"
International Conference on Learning Representations, 2022.
[45] J. Deng, W. Dong, R. Socher, L.-J. Li, K. Li, và L. Fei-Fei, "ImageNet:
A large-scale hierarchical image database," 2009 IEEE Conference on
Computer Vision and Pattern Recognition, pp. 248-255, Jun. 2009.
[46] K. Deb, A. Pratap, S. Agarwal, và T. Meyarivan, "A fast and elitist
multiobjective genetic algorithm: NSGA-II," IEEE Transactions on
Evolutionary Computation, vol. 6, no. 2, pp. 182-197, 2002.
[47] K. He, X. Zhang, S. Ren, và J. Sun, "Deep Residual Learning for
Image Recognition," Proceedings of the IEEE Conference on Computer
Vision and Pattern Recognition, pp. 770-778, 2016.
[48] K. Simonyan và A. Zisserman, "Very deep convolutional networks for
large-scale image recognition," International Conference on Learning
Representations, pp. 1-14, 2015.
[49] A. Paszke, S. Gross, F. Massa, A. Lerer, J. Bradbury, G. Chanan,
T. Killeen, Z. Lin, N. Gimelshein, L. Antiga, A. Desmaison, A. Kopf,
E. Yang, Z. DeVito, M. Raison, A. Tejani, S. Chilamkurthy, B. Steiner,
L. Fang, J. Bai, và S. Chintala, "PyTorch: An Imperative Style, High-
Performance Deep Learning Library," Advances in Neural Information
Processing Systems, vol. 32, 2019.
[50] H. Peng, J. Wu, S. Chen, và J. Huang, "Collaborative Channel Pruning
for Deep Networks," Proceedings of the 36th International Conference
on Machine Learning, pp. 5113-5122, 2019.
[51] X. Dong, J. Huang, Y. Yang, và S. Yan, "More is less: A more
complicated network with less inference complexity," Proceedings of
the IEEE Conference on Computer Vision and Pattern Recognition, pp.
5840-5848, 2017.
[52] X. Dong và Y. Yang, "Network Pruning via Transformable Architecture
Search," Advances in Neural Information Processing Systems, vol. 32,
pp. 760-771, 2019.
[53] Y. He, X. Zhang, và J. Sun, "Channel Pruning for Accelerating
Very Deep Neural Networks," Proceedings of the IEEE International
Conference on Computer Vision, pp. 1389-1397, 2017.
[54] Z. Huang và N. Wang, "Data-Driven Sparse Structure Selection for
Deep Neural Networks," Proceedings of the European Conference on
Computer Vision ECCV, pp. 304-320, 2018.

--- TRANG 14 ---
14
Ronghua Shang (SM' 22) nhận bằng Cử nhân
khoa học thông tin và tính toán và bằng Tiến sĩ
về nhận dạng mẫu và hệ thống thông minh từ Đại
học Xidian vào năm 2003 và 2008 tương ứng. Hiện
tại bà là giáo sư tại Đại học Xidian. Các lĩnh vực
nghiên cứu hiện tại của bà bao gồm các vấn đề tối
ưu, tính toán tiến hóa, xử lý hình ảnh và khai thác
dữ liệu.

Songling Zhu nhận bằng Cử nhân kỹ thuật tại
Khoa Điện lực từ Đại học Tài nguyên Nước và
Điện lực Bắc Trung Quốc, Henan, Trung Quốc.
Hiện tại anh đang theo học bằng Tiến sĩ tại Trường
Trí tuệ Nhân tạo từ Đại học Xidian, Xi'an, Trung
Quốc. Các lĩnh vực nghiên cứu hiện tại của anh
bao gồm học sâu, học sâu tiến hóa, chưng cất kiến
thức, cắt tỉa mô hình, nén mô hình.

Yinan Wu nhận bằng Cử nhân khoa học thông tin
và tính toán từ Đại học Bách khoa Tây Bắc, Xi'an,
Trung Quốc, vào năm 2016. Hiện tại cô đang theo
học bằng Tiến sĩ tại Trường Trí tuệ Nhân tạo và
Phòng thí nghiệm Trọng điểm Nhận thức Thông
minh và Hiểu biết Hình ảnh, Bộ Giáo dục Trung
Quốc, Đại học Xidian, Xi'an, Trung Quốc. Các
lĩnh vực nghiên cứu của cô bao gồm xử lý và phân
tích hình ảnh/tín hiệu của học sâu trong Quan sát
Trái đất.

Weitong Zhang (M'21) nhận bằng Cử nhân kỹ
thuật Điện tử và Thông tin từ Đại học Khoa học
và Công nghệ Changchun, Changchun, Trung Quốc,
vào năm 2013, bằng Thạc sĩ về Kỹ thuật Điện tử
và Truyền thông, và bằng Tiến sĩ về khoa học và
công nghệ Điện tử từ Đại học Xidian, Xi'an, Trung
Quốc, vào năm 2017 và 2021. Hiện tại cô là giảng
viên tại Đại học Xidian. Các lĩnh vực nghiên cứu
hiện tại của cô bao gồm mạng phức tạp và học máy.

Licheng Jiao (SM'89-F'17) nhận bằng Cử nhân
từ Đại học Giao thông Shanghai, Shanghai, Trung
Quốc, vào năm 1982, bằng Thạc sĩ và Tiến sĩ từ
Đại học Giao thông Xian, Xian, Trung Quốc, vào
năm 1984 và 1990 tương ứng. Từ năm 1990 đến
1991, ông là nghiên cứu sinh sau tiến sĩ tại Phòng
thí nghiệm Trọng điểm Quốc gia về Xử lý Tín hiệu
Radar, Đại học Xidian, Xian, Trung Quốc. Từ năm
1992, Tiến sĩ Jiao đã là Giáo sư tại Trường Kỹ
thuật Điện tử của Đại học Xidian. Hiện tại, ông
là Giám đốc của Phòng thí nghiệm Trọng điểm
Nhận thức Thông minh và Hiểu biết Hình ảnh của Bộ Giáo dục Trung Quốc
tại Đại học Xidian, Xian, Trung Quốc. Tiến sĩ Jiao là fellow của IEEE, thành
viên Ban chấp hành IEEE Xian Section và Chủ tịch Ủy ban Giải thưởng và
Công nhận, phó chủ tịch hội đồng Hiệp hội Trí tuệ Nhân tạo Trung Quốc,
ủy viên Viện Điện tử Trung Quốc, thành viên ủy ban Ủy ban Mạng Nơ-ron
Trung Quốc, và chuyên gia của Ủy ban Học vị Học thuật của Hội đồng Nhà
nước. Các lĩnh vực nghiên cứu của ông bao gồm xử lý hình ảnh, tính toán
tự nhiên, học máy, và xử lý thông tin thông minh. Ông đã dẫn dắt 40 dự án
nghiên cứu khoa học lớn, và xuất bản hơn 20 chuyên khảo và hàng trăm bài
báo trong các tạp chí và hội nghị quốc tế.

Songhua Xu là một nhà khoa học máy tính. Ông
nhận bằng Thạc sĩ, M.Phil., và Tiến sĩ từ Đại học
Yale, New Haven, CT, Hoa Kỳ, tất cả đều về khoa
học máy tính. Các lĩnh vực nghiên cứu của ông bao
gồm tin học chăm sóc sức khỏe, truy xuất thông
tin, quản lý và khám phá kiến thức, web thông minh
và phương tiện truyền thông xã hội, phân tích trực
quan, thiết kế giao diện người dùng, và đa phương
tiện.
