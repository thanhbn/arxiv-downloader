# 2310.17796.pdf
# Chuyển đổi từ PDF sang TXT
# Đường dẫn nguồn: /home/admin88/arxiv-downloader/rag/2310.17796.pdf
# Kích thước tệp: 4822316 bytes

===============================================
NỘI DUNG TỆP PDF
===============================================

--- TRANG 1 ---
ControlLLM: Tăng cường Mô hình Ngôn ngữ với Công cụ bằng cách Tìm kiếm trên Đồ thị
Zhaoyang Liu∗1,2Zeqiang Lai∗2Zhangwei Gao2Erfei Cui2Ziheng Li3
Xizhou Zhu2,3Lewei Lu4Qifeng Chen1 Yu Qiao2Jifeng Dai2,3Wenhai Wang2 
1Đại học Khoa học và Công nghệ Hồng Kông
2OpenGVLab, Phòng thí nghiệm AI Thượng Hải3Đại học Thanh Hoa4SenseTime
https://github.com/OpenGVLab/ControlLLM

Tóm tắt
Chúng tôi trình bày ControlLLM, một khung mới cho phép các mô hình ngôn ngữ lớn (LLM) sử dụng các công cụ đa phương thức để giải quyết các nhiệm vụ phức tạp trong thế giới thực. Mặc dù hiệu suất đáng kể của các LLM, chúng vẫn gặp khó khăn với việc gọi công cụ do các yêu cầu người dùng mơ hồ, việc lựa chọn và tham số hóa công cụ không chính xác, và lập lịch công cụ không hiệu quả. Để vượt qua những thách thức này, khung của chúng tôi bao gồm ba thành phần chính: (1) một bộ phân tách nhiệm vụ chia nhỏ một nhiệm vụ phức tạp thành các nhiệm vụ con rõ ràng với đầu vào và đầu ra được xác định rõ; (2) một mô hình Thoughts-on-Graph (ToG) tìm kiếm đường dẫn giải pháp tối ưu trên một đồ thị công cụ được xây dựng trước, xác định các mối quan hệ tham số và phụ thuộc giữa các công cụ khác nhau; và (3) một máy thực thi với hộp công cụ phong phú giải thích đường dẫn giải pháp và chạy các công cụ hiệu quả trên các thiết bị tính toán khác nhau. Chúng tôi đánh giá khung của mình trên các nhiệm vụ đa dạng liên quan đến xử lý hình ảnh, âm thanh và video, chứng minh độ chính xác, hiệu quả và tính linh hoạt vượt trội so với các phương pháp hiện có.

1. Giới thiệu
Các mô hình ngôn ngữ quy mô lớn, như ChatGPT [24] và dòng LLaMA [36, 37], đã chứng minh khả năng ấn tượng trong việc hiểu và tạo ra ngôn ngữ tự nhiên. Ngoài khả năng xuất sắc trong các nhiệm vụ ngôn ngữ, những mô hình này đã được mở rộng nhanh chóng để tương tác, lập kế hoạch và suy luận, thúc đẩy sự tiến bộ của các nghiên cứu trong tương tác đa phương thức [1, 16, 17, 21, 38, 39, 51].

Một trong những ví dụ nổi lên của tương tác đa phương thức là các mô hình ngôn ngữ tăng cường công cụ [20, 31, 32, 43, 45], cố gắng nâng cao khả năng của các mô hình ngôn ngữ để bao gồm các phương thức đa dạng ngoài văn bản như hình ảnh, video, âm thanh, v.v. Những mô hình này sử dụng LLM làm bộ điều khiển chính và tích hợp các công cụ với chức năng đa dạng như plugin, giải quyết một loạt các nhiệm vụ đa phương thức.

Tuy nhiên, những thách thức trong lĩnh vực này vẫn tồn tại, bao gồm phân tách nhiệm vụ, lập kế hoạch nhiệm vụ và lập lịch công cụ hiệu quả.

Với những thách thức này trong tâm trí, các phương pháp trước đây [20, 29, 32, 34, 43, 45, 46] đã nỗ lực phát triển các LLM tăng cường công cụ. Họ sử dụng LLM với yêu cầu đầu vào-đầu ra, CoT [41] hoặc ToT [47] để thực hiện lập kế hoạch nhiệm vụ. Những phương pháp này có thể giải quyết vấn đề bằng cách chia chúng thành một chuỗi hoặc cây các nhiệm vụ con. Về mặt lý thuyết, miễn là LLM có khả năng tổng quát hóa mạnh, những phương pháp này cũng có thể giải quyết các nhiệm vụ phức tạp. Tuy nhiên, trong thực tế, chúng tôi thấy rằng những phương pháp này thường gặp phải vấn đề gọi công cụ không chính xác khi xử lý các trường hợp phức tạp. Điều này là do các giải pháp cho các nhiệm vụ phức tạp thường chứa việc gọi công cụ với cấu trúc tô-pô phức tạp. Những phương pháp này không đủ để tạo thành một mạng tư duy phức tạp và do đó thất bại trong việc giải quyết các nhiệm vụ phức tạp. Do đó, cần phải tìm ra một mô hình mới vượt ra ngoài các dạng chuỗi hoặc cây, có thể tạo ra các giải pháp với cấu trúc tô-pô phức tạp để giải quyết các vấn đề phức tạp hơn (xem Hình 1 và Hình 2).

Vì mục đích này, chúng tôi giới thiệu ControlLLM, một khung mới hỗ trợ các mô hình ngôn ngữ lớn trong việc điều khiển chính xác và hiệu quả các công cụ đa phương thức và xác định các giải pháp toàn diện cho các nhiệm vụ phức tạp trong thế giới thực liên quan đến đầu vào đa phương thức. Cùng với nhiều cải tiến so với các công trình trước đây, khung của chúng tôi đặc biệt nhấn mạnh vào ba khía cạnh sau:

Phân tách Nhiệm vụ. Một bộ phân tách nhiệm vụ được giới thiệu để phân tích yêu cầu người dùng và chia nhỏ thành một số nhiệm vụ con, mỗi nhiệm vụ có các thuộc tính được xác định rõ như mô tả nhiệm vụ, miền nhiệm vụ, đối số và đầu ra trả về. Bằng cách phân tách các nhiệm vụ phức tạp thành các nhiệm vụ con có thể quản lý được, bộ phân tách nhiệm vụ tăng cường đáng kể khả năng của hệ thống trong việc xử lý các yêu cầu người dùng phức tạp, mở đường cho việc lập kế hoạch nhiệm vụ và thực thi giải pháp tiếp theo.

--- TRANG 2 ---
[Hình 1 mô tả so sánh các mô hình khác nhau cho lập kế hoạch nhiệm vụ]

Lập Kế hoạch Nhiệm vụ. Phần này xử lý việc lựa chọn công cụ và gán đối số công cụ. Chúng tôi đề xuất một mô hình thoughts-on-graph (ToG) duyệt qua một đồ thị công cụ tô-pô để tìm kiếm giải pháp. Các nút của đồ thị là các công cụ được kết nối dựa trên các phụ thuộc và mối quan hệ của chúng. ToG điều phối các công cụ được chọn và kiểm soát luồng tài nguyên giữa chúng để tạo thành các giải pháp có thể. ToG có thể tìm giải pháp tối ưu cho mỗi nhiệm vụ con bằng cách áp dụng các chiến lược tìm kiếm đa dạng trên đồ thị. Do định nghĩa cụ thể trong nhiệm vụ con và các phụ thuộc công cụ rõ ràng trong đồ thị công cụ, ToG có thể tìm kiếm hiệu quả tất cả các đường dẫn giải pháp khả thi trong các trường hợp mà giải pháp tối ưu được chọn không đáp ứng sở thích của người dùng.

Thực thi Giải pháp. Chúng tôi thiết kế một máy thực thi có thể thực thi giải pháp được tạo ra bởi ToG và tạo ra các phản hồi có thông tin và được định dạng tốt. Máy có quyền truy cập vào một hộp công cụ đa năng bao gồm các công cụ khác nhau từ các nguồn khác nhau, như API được triển khai cục bộ hoặc dịch vụ đám mây. Máy cũng có thể song song hóa việc thực thi công cụ theo tô-pô của đường dẫn giải pháp để giảm độ trễ và cung cấp phản hồi trong quá trình thực thi.

ControlLLM của chúng tôi mang lại một số lợi thế. (1) Nó có thể xử lý chính xác các nhiệm vụ phức tạp trong thế giới thực liên quan đến đầu vào và đầu ra đa phương thức, trong khi các phương pháp trước đây [4, 19, 20, 32, 43, 45] thường thất bại do khả năng lập kế hoạch nhiệm vụ của chúng; (2) Nó có thể vượt qua giới hạn token của LLM trong lập kế hoạch nhiệm vụ. Bởi vì phương pháp của chúng tôi tìm kiếm đường dẫn giải pháp tối ưu trên đồ thị công cụ, thay vì yêu cầu LLM tạo ra giải pháp cho nhiệm vụ; (3) Nó có thể dễ dàng mở rộng hộp công cụ. Vì tất cả các giải pháp nằm trong đồ thị công cụ, khi các công cụ thay đổi, chúng tôi chỉ cần xây dựng lại đồ thị mà không cần đào tạo lại LLM hoặc cập nhật các yêu cầu trong ngữ cảnh.

Để đánh giá hiệu quả của ControlLLM trong các nhiệm vụ có độ phức tạp khác nhau, chúng tôi xây dựng một chuẩn với một loạt các chỉ số được thiết kế riêng. Cụ thể, chúng tôi sử dụng tỷ lệ bao gồm công cụ không liên quan và tỷ lệ bao gồm công cụ cần thiết để đo lường việc lựa chọn công cụ. Chúng tôi sử dụng tỷ lệ ảo giác tài nguyên và tỷ lệ nhất quán loại tài nguyên để đánh giá việc gán đối số. Chúng tôi cũng chia tập kiểm tra thành ba mức độ khó dựa trên số lượng API liên quan: dễ (<2 API), trung bình (2 hoặc 3 API), và khó (>3 API). Chúng tôi đã tiến hành các thí nghiệm khác nhau, cả định lượng và định tính, để so sánh phương pháp của chúng tôi với các phương pháp hiện có. Kết quả cho thấy ControlLLM đạt được tỷ lệ thành công cao hơn trong việc gọi công cụ, đặc biệt là đối với các hướng dẫn phức tạp.

Tóm lại, những đóng góp chính như sau:
(1) Chúng tôi đề xuất ControlLLM, một khung cho phép LLM sử dụng các công cụ khác nhau trên các phương thức khác nhau để giải quyết các nhiệm vụ phức tạp trong thế giới thực. Với một hộp công cụ mạnh mẽ, ControlLLM có thể dễ dàng được mở rộng cho các nhiệm vụ với ngôn ngữ tự nhiên, hình ảnh, âm thanh, video, hoặc bất kỳ sự kết hợp nào của chúng.

(2) Chúng tôi thiết kế ba thành phần được thiết kế riêng trong ControlLLM: Phân tách nhiệm vụ, chia nhỏ yêu cầu người dùng thành các nhiệm vụ con với đầu vào và đầu ra được xác định rõ; Mô hình ToG cho lập kế hoạch nhiệm vụ, tìm kiếm đường dẫn giải pháp tối ưu trên một đồ thị mô tả các phụ thuộc công cụ; Và một máy thực thi với hộp công cụ mạnh mẽ, lập lịch và thực thi đường dẫn giải pháp một cách hiệu quả.

(3) Chúng tôi xây dựng một chuẩn để đánh giá hiệu quả của ControlLLM trên các nhiệm vụ với các mức độ phức tạp khác nhau. Kết quả thí nghiệm chứng minh những cải thiện đáng kể trong việc sử dụng công cụ. Đáng chú ý, ControlLLM đạt được tỷ lệ thành công 93% trong chỉ số đánh giá giải pháp tổng thể trên các nhiệm vụ thách thức, trong khi phương pháp cơ sở tốt nhất chỉ đạt 59%.

2. Công trình Liên quan
Lập kế hoạch, Suy luận và Ra quyết định. Đây là một tầm nhìn lâu dài để trao quyền cho các tác nhân tự chủ với khả năng lập kế hoạch, suy luận và ra quyết định [15, 33, 42]. Mặc dù có sự phát triển tiến bộ, nhưng những tiến bộ gần đây trong các mô hình ngôn ngữ lớn (LLM) [3, 5, 25, 36, 50] đã có một bước đột phá trong việc giải quyết những vấn đề này trên các yêu cầu người dùng rộng rãi. Tuy nhiên, được chỉ ra rằng LLM vẫn gặp khó khăn trong việc xử lý các nhiệm vụ nặng về kiến thức và phức tạp [30]. Để vượt qua những vấn đề này, Chain of Thoughts (CoT) [41] được giới thiệu như một kỹ thuật yêu cầu đơn giản để kích thích khả năng suy luận phức tạp của LLM. Theo hướng công việc này, CoT với tính nhất quán tự thân [40], Tree of Thoughts (ToT) [41], và các kỹ thuật khác [6, 12, 55], đã được đề xuất để cải thiện thêm khả năng suy luận. Cũng có một số công trình [2, 48] giới thiệu các kỹ thuật được gọi là Graph-of-Thought (GoT). Tất cả chúng đều chia sẻ một hiểu biết chung dựa vào LLM để tạo ra suy nghĩ cho việc giải quyết các vấn đề NLP phức tạp. Ngược lại, ToG của chúng tôi nhằm trao cho mô hình ngôn ngữ khả năng sử dụng công cụ cho một hệ thống đối thoại đa phương thức. Hơn nữa, ToG xây dựng một đồ thị công cụ trước mà không cần LLM và sử dụng thuật toán tìm kiếm để tạo thành một mạng tư duy phức tạp cho lập kế hoạch nhiệm vụ.

LLM Tăng cường Công cụ. Lấy cảm hứng từ khả năng lập kế hoạch và ra quyết định đang phát triển được quan sát trong các hệ thống Mô hình Ngôn ngữ Lớn (LLM), một làn sóng nghiên cứu mới bắt đầu tăng cường LLM với các công cụ bên ngoài để truy cập thông tin cập nhật, giảm ảo giác, tương tác đa phương thức, v.v. Các ví dụ nổi bật bao gồm ReAct [46], VisProg [10], Visual ChatGPT [43], HuggingGPT [32], InternGPT [20], AutoGPT1, và Transformers Agent2. Một đặc điểm khác biệt của hướng nghiên cứu này là sự phụ thuộc vào khả năng học trong ngữ cảnh zero-shot hoặc few-shot [8] vốn có trong LLM [3]. Những khả năng này cho phép phân tách nhiệm vụ, lựa chọn công cụ và hoàn thành tham số mà không cần tinh chỉnh rõ ràng. Tuy nhiên, do những hạn chế vốn có của LLM, các vấn đề như ảo giác và thách thức trong việc phân tách và suy luận hiệu quả có thể phát sinh với tần suất đáng kể. Hơn nữa, cũng có các phương pháp tinh chỉnh hướng dẫn [11, 26, 27, 29, 31, 45]. Trong khi giảm thiểu các vấn đề trên sau khi được tinh chỉnh trên kho văn bản liên quan đến công cụ, những phương pháp này vẫn bị hạn chế trong việc mở rộng bộ công cụ, tức là cần đào tạo bổ sung để thêm công cụ. Trong số những phương pháp này, ToolLLM [29] đề xuất cây quyết định dựa trên tìm kiếm theo chiều sâu để tăng cường khả năng lập kế hoạch của LLM. Tuy nhiên, nó vẫn có những hạn chế tương tự như ToT, như được thể hiện trong Hình 1.

LLM Đa phương thức. Phát triển LLM vốn có khả năng đa phương thức là một cách tiếp cận khác để mở rộng ranh giới sử dụng của LLM cho các tình huống thế giới thực phức tạp hơn [7, 13, 18, 19, 22, 23, 28, 44]. Ví dụ, BLIP-2 [17], LLava [18], và Mini-GPT4 [54] liên kết các bộ mã hóa hình ảnh đông lạnh và LLM để cho phép hiểu và tạo ra ngôn ngữ-thị giác. Tương tự, VisionLLM [39] và LISA [14] trao quyền cho LLM với khả năng nhận thức thị giác như phát hiện và phân đoạn đối tượng. GILL [13], DreamLLM [9], và Mini-GPT5 [53] mở rộng LLM cho việc tạo ra hình ảnh và văn bản xen kẽ bằng cách tối ưu hóa chung LLM với mô hình Stable Diffusion sẵn có. Kosmos2 [28], Ferret [49], GPT4RoI [52], v.v., thiết kế các bộ mã hóa hình ảnh nhận biết vùng khác nhau để tăng cường LLM với khả năng nền tảng và tham chiếu. Tuy nhiên, những phương pháp này chỉ có thể bao phủ một phạm vi hạn chế các phương thức hoặc nhiệm vụ và thường yêu cầu nỗ lực lớn trong việc tinh chỉnh mô hình.

3. ControlLLM
Sự phổ biến của LLM đã thúc đẩy chưa từng có sự phát triển của tương tác người-máy. Việc trao quyền cho LLM với khả năng tương tác với các phương thức khác nhau thông qua công cụ là khả thi. Để đáp ứng, chúng tôi trình bày một khung sáng tạo, cụ thể là ControlLLM, được đặc trưng bởi tính linh hoạt và hiệu suất cao. Như được mô tả trong Hình 2, khung của chúng tôi bao gồm ba giai đoạn tuần tự, tức là phân tách nhiệm vụ, lập kế hoạch nhiệm vụ và thực thi giải pháp. Tiếp theo, chúng tôi sẽ minh họa thiết kế của từng giai đoạn một cách chi tiết.

3.1. Phân tách Nhiệm vụ
ControlLLM bắt đầu với phân tách nhiệm vụ - một giai đoạn để phân tách yêu cầu người dùng r thành một danh sách các nhiệm vụ con song song. Chúng tôi ở đây có thể sử dụng một mô hình ngôn ngữ M, ví dụ, ChatGPT hoặc LLaMA được tinh chỉnh hướng dẫn, để tự động phân tách yêu cầu người dùng như sau:

{s0, ..., si, ..., sn} = M(r), (1)

trong đó si là nhiệm vụ con thứ i, n là số lượng tất cả các nhiệm vụ con. Chúng tôi sẽ trình bày chi tiết về các lựa chọn khác nhau của mô hình ngôn ngữ M trong Phần 3.4 và thảo luận về tác động của chúng trong Phần 4.5.

Kết quả của phân tách nhiệm vụ là định dạng JSON, và giao thức đầu ra được trình bày trong Bảng 5.

Phân tách nhiệm vụ khác với lập kế hoạch nhiệm vụ. Nó chỉ chia nhỏ yêu cầu của người dùng thành một số nhiệm vụ con song song và tóm tắt các tài nguyên đầu vào cho mỗi nhiệm vụ con từ yêu cầu người dùng. Nó không cần biết sử dụng công cụ nào hoặc cách sử dụng chúng. Mục tiêu của giai đoạn này là đạt được ba mục đích. Thứ nhất, nó chia yêu cầu người dùng thành các đơn vị nhỏ hơn và dễ quản lý hơn, tức là các nhiệm vụ con, do đó tăng tốc lập kế hoạch nhiệm vụ. Thứ hai, nó tìm cách xác định miền nhiệm vụ có liên quan nhất và phù hợp nhất cho vấn đề đã cho, do đó thu hẹp thêm phạm vi lập kế hoạch nhiệm vụ. Thứ ba, nó cố gắng suy luận các loại tài nguyên đầu vào và đầu ra từ ngữ cảnh, xác định các nút bắt đầu và kết thúc cho ToG để tìm kiếm trong giai đoạn tiếp theo.

3.2. Lập Kế hoạch Nhiệm vụ với Thoughts-on-Graph
Giai đoạn này là chìa khóa của toàn bộ hệ thống. Dựa trên kết quả của phân tách nhiệm vụ, chúng tôi thiết kế một mô hình Thoughts-on-Graph (ToG) để tìm giải pháp trên đồ thị một cách heuristic.

3.2.1 Xây dựng Đồ thị Công cụ
Trong giai đoạn này, chúng tôi bắt tay vào xây dựng một Đồ thị Công cụ G bằng cách đơn giản sử dụng ma trận kề, phục vụ như một hướng dẫn cơ bản để phân tích và tối ưu hóa các tương tác giữa các công cụ. Động lực của chúng tôi được thúc đẩy bởi việc quan sát một cấu trúc tô-pô có thể nhận biết vốn tồn tại giữa đầu vào và đầu ra của các công cụ đa dạng, như được chứng minh trong Hình 2. Hiểu biết hấp dẫn này thúc đẩy chúng tôi tạo ra một đồ thị công cụ toàn diện bao bọc mối quan hệ vốn có giữa các công cụ.

Có hai loại nút tức là Nút tài nguyên và Nút công cụ, trong đồ thị. Nút tài nguyên có thể được định nghĩa chính thức như một tuple: ⟨type⟩, trong đó type đại diện cho loại cụ thể của tài nguyên, như hình ảnh, mặt nạ, video, v.v. Nút công cụ có thể được biểu diễn như một tuple ba: ⟨desc, args, ret⟩. Trường desc bao gồm mô tả của công cụ, làm rõ mục đích, phương pháp và ứng dụng dự định của nó. Trường args đại diện cho một danh sách các nút tài nguyên mà công cụ chấp nhận, do đó đưa ra các điều kiện tiên quyết để sử dụng công cụ này. Cuối cùng, trường ret chỉ định nút tài nguyên mà công cụ trả về. Chúng tôi trình bày chi tiết về các định nghĩa của các loại tài nguyên và công cụ trong tài liệu bổ sung (Phần 10).

Định nghĩa Cạnh. Các cạnh trong đồ thị công cụ kết nối phức tạp các nút, làm nổi bật mối quan hệ giữa các công cụ khác nhau. Chúng tôi định nghĩa hai loại cạnh trong đồ thị.

(1) Cạnh công cụ-tài nguyên được thiết lập từ công cụ đến loại tài nguyên trả về của nó. Điều này có nghĩa là công cụ có khả năng tạo ra tài nguyên của loại tương ứng. Về mặt toán học, một cạnh công cụ-tài nguyên được biểu diễn như:

G(Tj, Ri) = (
true, nếu Ri bằng với ret của Tj
false, ngược lại, (2)

--- TRANG 5 ---
Thuật toán 1 Mã giả Python của tìm kiếm giải pháp theo chiều sâu trong Thoughts-on-Graph
Đầu vào:
t: nhiệm vụ con thu được bởi Phương trình 1
g: đồ thị công cụ G được xây dựng trong Phần 3.2.1
r: tài nguyên có sẵn, được khởi tạo với subtask["args"]
s: công cụ được ghi lại trong quá trình tìm kiếm
Đầu ra:
solutions: tất cả các giải pháp có thể cho nhiệm vụ con t

1: function DFS_SEARCH(t, g, r, s)
2:   if len(s) > m:
3:     return []
#Tìm tất cả ứng cử viên công cụ, được giải thích trong Phần 3.2.2
4:   available_tools = F(t, g, r)
5:   solutions = []
6:   for tool in available_tools:
7:     s.append(tool)
8:     r.append(tool["returns"])
9:     if tool["returns"] == t["returns"]:
10:      solutions.append(s.copy())
11:    results = DFS_SEARCH(t, g, r, s)
12:    solutions.extend(results)
13:    r.remove(tool["returns"])
14:    s.remove(tool)
15:  return solutions ▷Return
16: end function

trong đó Tj là nút công cụ thứ j, Ri là nút tài nguyên thứ i, "true" biểu thị hai nút được kết nối, và "false" biểu thị hai nút bị ngắt kết nối.

(2) Cạnh tài nguyên-công cụ biểu thị nút tài nguyên có thể được chấp nhận như đối số đầu vào cho công cụ liền kề của nó. Kết nối này chỉ ra cách tài nguyên chảy đến công cụ. Cạnh tài nguyên-công cụ được định nghĩa toán học như:

G(Ri, Tj) = (
true, nếu Ri thuộc về args của Tj
false, ngược lại. (3)

Thông qua việc thiết lập đồ thị này, chúng tôi có thể sử dụng các chiến lược tìm kiếm đa dạng để đưa ra quyết định có thông tin về việc lựa chọn công cụ và gán tài nguyên đầu vào.

3.2.2 Tìm kiếm trên Đồ thị
Như được mô tả trong Thuật toán 1, ToG của chúng tôi được xây dựng dựa trên thuật toán tìm kiếm theo chiều sâu (DFS) trong đó hàm lựa chọn công cụ F được sử dụng để lấy mẫu các nút công cụ trên đồ thị công cụ. Thuật toán bắt đầu từ các nút tài nguyên đầu vào và khám phá tất cả các đường dẫn có thể đến nút đầu ra trong khi theo dõi các tài nguyên và công cụ trung gian dọc theo đường. Thuật toán dừng khi nó đạt đến nút đầu ra mong đợi hoặc khi nó vượt quá giới hạn độ dài tối đa m (m=10 theo mặc định). Cuối cùng, thuật toán trả về tất cả các giải pháp được tìm kiếm như một danh sách các chuỗi công cụ. Mỗi bước từ nút tài nguyên đến nút công cụ đại diện cho một quá trình tư duy, vì nó liên quan đến một quyết định xác định có sử dụng công cụ này hay không và cách gán các đối số đầu vào của nó từ các tài nguyên có sẵn.

Để tìm sự cân bằng giữa độ phức tạp thời gian và không gian, chúng tôi phát triển một mô-đun đánh giá công cụ trong đó mô hình ngôn ngữ được tận dụng để chấm điểm các công cụ trong mỗi bước tìm kiếm và sau đó lọc ra một số công cụ không liên quan. Để biết chi tiết, vui lòng tham khảo Phần 6.2 trong tài liệu bổ sung. Với mô-đun đánh giá này, chúng tôi thiết kế bốn chiến lược tìm kiếm cho hàm F để xác định nút công cụ nào trong miền nhiệm vụ để truy cập trong số tất cả các nút liền kề khi tìm kiếm trên đồ thị:

Chiến lược Tham lam. Chiến lược này chọn nút công cụ có điểm số cao nhất ở mỗi bước, trong đó điểm số chỉ ra mức độ liên quan của công cụ đối với nhiệm vụ. Điểm số cao hơn chỉ ra rằng công cụ hữu ích hơn cho việc giải quyết nhiệm vụ. Tìm kiếm tham lam nhanh và đơn giản, nhưng có thể không tìm được giải pháp tối ưu hoặc thậm chí không tìm được giải pháp nào cả.

Chiến lược Beam. Nó chỉ giữ k công cụ tốt nhất theo điểm đánh giá của chúng. Tìm kiếm beam có thể mở rộng không gian tìm kiếm nhưng giảm hiệu quả tìm kiếm một chút.

Chiến lược Thích ứng. Đây là một biến thể của tìm kiếm beam trong đó nó điều chỉnh động kích thước beam bằng cách chọn các công cụ có điểm số cao hơn một ngưỡng cố định, đây là sự cân bằng giữa khám phá và khai thác. Nó có thể mở rộng không gian tìm kiếm khi có nhiều lựa chọn có sẵn và thu hẹp khi có ít lựa chọn tự tin.

Chiến lược Toàn diện. Chiến lược này khám phá tất cả các đường dẫn có thể từ nút bắt đầu đến nút kết thúc. Tìm kiếm toàn diện được đảm bảo tìm được giải pháp tối ưu nếu tồn tại, nhưng có thể rất chậm và tiêu tốn nhiều tài nguyên tính toán trong quá trình tìm kiếm.

Tác động của các chiến lược tìm kiếm khác nhau được nghiên cứu trong Phần 4.5. Bằng cách khởi tạo một cuộc duyệt hệ thống của đồ thị công cụ, bắt đầu từ các nút "args" và đỉnh điểm tại nút "return", một danh sách đa dạng các giải pháp có thể hình dung được tổng hợp một cách tỉ mỉ. Quá trình này, giống như một cuộc động não hoặc sơ đồ tư duy, đại diện cho phổ các giải pháp tiềm năng.

3.2.3 Xử lý hậu Giải pháp
Sau khi ToG tìm kiếm các giải pháp, chúng tôi thiết kế chuyên gia giải pháp và chuyên gia tài nguyên để xử lý hậu các giải pháp, cả hai đều được xây dựng dựa trên mô hình ngôn ngữ M. Cụ thể, chuyên gia giải pháp để chọn giải pháp tối ưu trong số tất cả các ứng cử viên giải pháp và chuyên gia tài nguyên để suy luận các đối số còn lại cho công cụ, tương ứng. Chi tiết tổng thể được hiển thị trong tài liệu bổ sung (Phần 6.3 và 6.4).

3.3. Thực thi Giải pháp
Khi các giải pháp nhiệm vụ được hoàn thành, chúng được chuyển đến máy thực thi để thu được kết quả, như được hiển thị trong Hình 2. Trong giai đoạn này, máy thực thi ban đầu phân tích các giải pháp thành một chuỗi Hành động. Mỗi hành động được liên kết với các dịch vụ công cụ cụ thể, có thể được thực hiện thông qua bảng ánh xạ thủ công hoặc một bộ lập lịch tự động dựa trên một số chiến lược. Khác với các công trình trước đây [20, 43, 45] áp dụng ánh xạ công cụ tĩnh, thiết kế của chúng tôi trao quyền cho hệ thống với tính linh hoạt để lập lịch các công cụ đa dạng dựa trên sở thích của người dùng.

Các hành động được phân tích được tự động thực thi bằng cách lập lịch hành động đến các điểm cuối cục bộ, từ xa hoặc lai. Nhiều nhiệm vụ con độc lập sẽ được thực thi song song để cải thiện hiệu quả. Bên cạnh đó, chúng tôi duy trì một bộ nhớ trạng thái lưu trữ tất cả các kết quả trung gian, bao gồm giá trị và loại của chúng. Điều này cho phép sửa chữa tự động thời gian chạy cho các tham số hành động.

Tạo Phản hồi. Với tất cả các kết quả thực thi trong tay, chúng tôi có thể phản hồi các yêu cầu người dùng. Các kết quả chưa được xử lý có thể thiếu tính toàn diện và rõ ràng, có thể khiến người dùng khó hiểu. Vì mục đích này, chúng tôi giới thiệu một mô-đun để tổng hợp tất cả các kết quả thực thi và tạo ra các phản hồi thân thiện với người dùng. Điều này đạt được bằng cách yêu cầu LLM, như ChatGPT, với yêu cầu người dùng, danh sách hành động và kết quả thực thi và yêu cầu chúng tóm tắt câu trả lời một cách thông minh. Yêu cầu có thể được tìm thấy trong tài liệu bổ sung (Bảng 10).

3.4. Các Lựa chọn của Mô hình Ngôn ngữ
Một lựa chọn khả thi nhưng trực tiếp là sử dụng các mô hình ngôn ngữ lớn sẵn có (LLM) như ChatGPT hoặc Llama 2 [37], được đào tạo trước trên kho văn bản quy mô lớn và có thể xử lý các nhiệm vụ NLP khác nhau. Những LLM này sẵn có. Chúng tôi thiết kế một loạt các yêu cầu tinh vi như được hiển thị trong Phần 6 cho phân tách nhiệm vụ, đánh giá công cụ, chuyên gia giải pháp và chuyên gia tài nguyên. Chúng tôi gọi biến thể này là ControlLLM-ChatGPT. Theo cách này, chúng tôi tránh đào tạo một mô hình ngôn ngữ từ đầu. Tuy nhiên, chúng có thể dẫn đến hiệu suất thấp vì chúng không được đào tạo cho yêu cầu của chúng tôi.

Lựa chọn thay thế của M, được gọi là ControlLLM-LLaMA, là tinh chỉnh một mô hình ngôn ngữ (ví dụ, LLaMA [36]) bằng cách sử dụng phương pháp tự hướng dẫn [40]. Chi tiết hơn về việc tối ưu hóa M có thể được tham khảo trong Phần 7 trong tài liệu bổ sung. Lợi thế của biến thể này là nó có thể đạt được hiệu suất cao bằng cách thích ứng với dữ liệu và nhiệm vụ. Tuy nhiên, nó yêu cầu nhiều GPU để đào tạo mô hình và có thể gặp phải vấn đề overfitting.

Về những lựa chọn này, điều quan trọng là cân nhắc cẩn thận sự cân bằng giữa các LLM sẵn có với khả năng zero-shot và tiềm năng tinh chỉnh mô hình để đạt được hiệu suất vượt trội với chi phí tài nguyên tính toán. Do đó, chúng tôi sẽ thảo luận thêm về tác động của các mô hình ngôn ngữ M khác nhau trong Phần 4.4 và khám phá các cài đặt tối ưu cho khung của chúng tôi.

4. Thí nghiệm
4.1. Chuẩn
Chúng tôi xây dựng một chuẩn được sử dụng để đánh giá khung đề xuất của chúng tôi so với các phương pháp tiên tiến khác. Để so sánh công bằng, chúng tôi chỉ đánh giá và kiểm tra trên giao của bộ công cụ từ các phương pháp khác nhau [20, 32, 43, 45], tất cả đều chia sẻ bộ công cụ tương tự.

Chuẩn bao gồm một tập hợp các nhiệm vụ yêu cầu các công cụ khác nhau để giải quyết các vấn đề phức tạp một cách hợp tác. Nó được thiết kế để bao phủ các miền nhiệm vụ khác nhau, như trả lời câu hỏi, tạo hình ảnh, chỉnh sửa hình ảnh, nhận thức hình ảnh, trả lời câu hỏi thị giác, v.v. Trong chuẩn này, các nhiệm vụ liên quan đến hơn 20 công cụ trên các phương thức khác nhau.

Chuẩn này bao gồm khoảng 100 hướng dẫn được phân loại thành ba mức độ khó: dễ (<2 API), trung bình (2 hoặc 3 API), và khó (>3 API). Chúng tôi sử dụng hướng dẫn kiểm tra với các mức độ khác nhau để xác thực tỉ mỉ khả năng của các phương pháp khác nhau. Chúng tôi tin rằng chuẩn này có thể cung cấp một so sánh toàn diện về khả năng kiểm soát công cụ của các phương pháp khác nhau. Trong Bảng 12, chúng tôi trưng bày một số mẫu hướng dẫn từ chuẩn của chúng tôi. Đáng chú ý là không có mối quan hệ tuyệt đối giữa độ khó và độ dài của hướng dẫn.

4.2. Giao thức Đánh giá
Đánh giá hiệu quả của LLM tăng cường công cụ vẫn là một nhiệm vụ thách thức. Những thách thức bắt nguồn từ một số yếu tố, bao gồm sự mơ hồ vốn có trong ngôn ngữ tự nhiên, sự vắng mặt của các chuẩn chung, và các giải pháp được định dạng để đánh giá hệ thống các phương pháp khác nhau. Do đó, các phương pháp hiện có [20, 32, 43, 45] cung cấp các nghiên cứu trường hợp rộng rãi để xác thực hiệu suất.

Chúng tôi thấy các API của công cụ trong các phương pháp khác nhau hơi không nhất quán. Khó để chú thích tất cả các giải pháp khả thi cho mỗi phương pháp. Do đó, chúng tôi áp dụng một giao thức đánh giá thông qua cách tiếp cận bỏ phiếu nhiều người với ba chuyên gia chú thích. Giao thức chia nhỏ đánh giá thành ba khía cạnh chính: lựa chọn công cụ, gán đối số và đánh giá giải pháp tổng thể. Xin lưu ý rằng giao thức đánh giá độc lập với khả năng của công cụ. Khi các công cụ và đối số đầu vào của chúng đúng, chúng tôi không tính đến trường hợp đầu ra không đáp ứng kỳ vọng của người dùng do hạn chế của công cụ.

Chỉ số cho Lựa chọn Công cụ: A) Tỷ lệ Bao gồm Công cụ Không liên quan (viết tắt IR): Chỉ số này đo lường hiệu suất của phương pháp trong việc loại trừ các công cụ không liên quan. Nó đo lường tỷ lệ của các giải pháp dự đoán chứa các công cụ không liên quan. IR cao hơn chỉ ra rằng phương pháp có xu hướng bao gồm nhiều công cụ không cần thiết hơn, có thể cản trở lập kế hoạch nhiệm vụ hiệu quả; B) Tỷ lệ Bao gồm Công cụ Cần thiết (viết tắt NR): Chỉ số này đánh giá việc bao gồm các công cụ cần thiết trong giải pháp dự đoán nhưng không xem xét liệu các đối số của công cụ có đúng hay không. Nếu NR cao, nó chỉ ra phương pháp có khả năng mạnh trong lựa chọn công cụ.

Chỉ số cho Gán Đối số: A) Tỷ lệ Ảo giác Tài nguyên (viết tắt HR): Chỉ số này tiết lộ mức độ ảo giác trong phản hồi của phương pháp khi suy luận các đối số cho công cụ. Nó đo lường liệu tất cả các đối số của công cụ được sử dụng trong giải pháp dự đoán có tồn tại vật lý hay không. HR thấp hơn cho thấy rằng phương pháp ít có xu hướng tạo ra nội dung ảo giác hơn. B) Tỷ lệ Nhất quán Loại Tài nguyên (viết tắt CR): Chỉ số này kiểm tra liệu các loại tài nguyên đầu vào trong giải pháp dự đoán có khớp với những loại của công cụ tương ứng hay không. Nó đánh giá khả năng của phương pháp trong việc đảm bảo tính nhất quán của các loại đầu vào của công cụ.

Đánh giá Giải pháp (viết tắt SE) đo lường tỷ lệ thành công của tất cả các giải pháp được tạo ra trên chuẩn của chúng tôi. Nó chỉ xem xét liệu giải pháp đầu ra có thể giải quyết hiệu quả vấn đề của người dùng hay không, bất kể nó có chứa công cụ không liên quan hay không. Điểm số cao hơn trong đánh giá giải pháp chỉ ra khả năng lập kế hoạch nhiệm vụ mạnh hơn.

Tóm lại, những chỉ số trực quan này cùng nhau cung cấp một đánh giá toàn diện về LLM tăng cường công cụ. Các định nghĩa chính thức của những chỉ số này có thể tham khảo Phần 11.

4.3. So sánh Tính năng
Bảng 1 trình bày một so sánh tính năng toàn diện giữa các phương pháp khác nhau [20, 32, 43, 45], làm nổi bật những lợi thế riêng biệt của ControlLLM trong cảnh quan tương tác đa phương thức. Đáng chú ý, "Multi-Solution" biểu thị khả năng của phương pháp cung cấp nhiều giải pháp khả thi, trao cho người dùng nhiều lựa chọn hơn. "Pointing Device" biểu thị hỗ trợ cho các thiết bị trỏ như chuột, để tăng cường trải nghiệm người dùng. "Resource Type Awareness" chỉ ra khả năng của phương pháp phân biệt loại tài nguyên trong ngữ cảnh, đảm bảo phản hồi nhận biết ngữ cảnh hơn. Tóm lại, ControlLLM nổi lên như lựa chọn nổi bật, xuất sắc trong các tính năng khác nhau. Nó cung cấp một bộ công cụ toàn diện trong các miền hình ảnh, video và âm thanh. Hơn nữa, sự hỗ trợ của nó cho nhận biết loại tài nguyên, nhiều giải pháp và đầu vào trỏ chứng minh tính thích ứng và khả năng mở rộng của nó, khiến nó trở thành khung rất linh hoạt cho các tình huống tương tác đa phương thức đa dạng.

4.4. So sánh Định lượng
Trong phần này, chúng tôi đưa ra một phân tích toàn diện về ControlLLM để so sánh với các phương pháp tiên tiến, như được tóm tắt trong Bảng 2. Chúng tôi cung cấp ba triển khai trong tài liệu bổ sung cho phương pháp của chúng tôi: a) ControlLLM-ChatGPT tận dụng ChatGPT-3.5 làm mô hình ngôn ngữ M; b) ControlLLM-LLaMA tinh chỉnh LLaMA-7B làm mô hình ngôn ngữ M; c) ControlLLM-Mix được coi là cài đặt mặc định của chúng tôi, tinh chỉnh LLaMA-7B làm bộ phân tách nhiệm vụ trong giai đoạn đầu tiên trong khi các mô-đun còn lại sử dụng ChatGPT để hoàn thành các nhiệm vụ. ControlLLM-Mix kết hợp những lợi thế của hai biến thể khác và được viết tắt là ControlLLM trong các phần sau.

Đánh giá của chúng tôi dựa trên một tập hợp các chỉ số đánh giá hiệu quả của lập kế hoạch nhiệm vụ. ControlLLM xuất sắc trong một số khía cạnh chính. Đáng chú ý, nó đạt được Tỷ lệ Bao gồm Công cụ Không liên quan (IR) thấp nhất cũng như Tỷ lệ Bao gồm Công cụ Cần thiết cao nhất, chỉ ra khả năng của nó trong lập kế hoạch nhiệm vụ hiệu quả nhưng hiệu quả. Hơn nữa, ControlLLM chứng minh hiệu suất vượt trội trong gán đối số, với Tỷ lệ Ảo giác Đối số (HR) thấp nhất là 0.02 và Tỷ lệ Nhất quán Loại Đối số (CR) cao nhất là 0.98. Những kết quả này nhấn mạnh khả năng của nó tạo ra các đối số chính xác và nhất quán, giải quyết một thách thức trong LLM tăng cường công cụ. Trong đánh giá giải pháp, ControlLLM duy trì vị trí dẫn đầu với điểm số 0.93, chỉ ra hiệu quả của nó trong việc giải quyết yêu cầu người dùng. Tóm lại, ControlLLM thể hiện hiệu suất đáng chú ý trong tất cả các chỉ số đề xuất, vượt trội rõ ràng so với các phương pháp tiên tiến trong lĩnh vực này.

4.5. Nghiên cứu Khử bỏ
Bảng 3 điều tra tác động của các chiến lược tìm kiếm khác nhau trong Thoughts-on-Graph của chúng tôi. Chúng tôi quan sát thấy rằng chiến lược tìm kiếm toàn diện vượt trội hơn các chiến lược khác trong hầu hết các chỉ số, nhưng chiến lược này tốn thời gian. Mặt khác, chiến lược tìm kiếm tham lam đạt hiệu suất thấp nhất. Bởi vì nó không thể tìm kiếm đường dẫn khả thi dựa trên công cụ có điểm số cao do đánh giá công cụ không chính xác. Do đó, nó thường thất bại trong việc tìm giải pháp, đặc biệt là trong các trường hợp phức tạp. Ngoài ra, chiến lược thích ứng đạt được sự cân bằng giữa các chỉ số hiệu suất và độ phức tạp thời gian, mang lại kết quả cạnh tranh trong hầu hết các khía cạnh. Để cân bằng giữa thời gian và độ chính xác, chúng tôi do đó chọn chiến lược thích ứng làm cài đặt mặc định.

Trong Bảng 4, chúng tôi tiến hành các nghiên cứu khử bỏ để đánh giá tác động của các LLM khác nhau đối với lập kế hoạch nhiệm vụ cho ControlLLM-Mix. Chúng tôi thấy các mô hình ngôn ngữ đóng vai trò quyết định trong lựa chọn công cụ. Mô hình ngôn ngữ càng mạnh, điểm đánh giá giải pháp càng cao. Hơn nữa, chúng tôi điều tra tác động của việc tích hợp kiến thức trước vào mô tả nhiệm vụ con. Phương pháp không có kiến thức trước thường sử dụng trực tiếp yêu cầu của người dùng làm mô tả nhiệm vụ con và không đưa ra bất kỳ gợi ý hoặc đề xuất nào về việc lựa chọn công cụ trong mô tả nhiệm vụ con. Ngược lại, trong biến thể với kiến thức trước, chúng tôi thêm kiến thức trước vào mô tả nhiệm vụ con. Kiến thức trước thực sự cải thiện tỷ lệ bao gồm công cụ cần thiết (NR) và giảm cơ hội chọn các công cụ không liên quan (IR) khi sử dụng cùng một mô hình ngôn ngữ lớn.

4.6. Phân tích Định tính
Hình 3 cho thấy hai trường hợp đơn giản để minh họa khả năng của ControlLLM trong lập kế hoạch nhiệm vụ. Trái với HuggingGPT [32], chúng tôi thấy phương pháp của chúng tôi có thể tạo ra các giải pháp đa dạng hơn để đáp ứng kỳ vọng của người dùng, nhờ vào mô hình Thoughts-on-Graph. Trong Phần 12, chúng tôi cung cấp các nghiên cứu trường hợp rộng rãi trên các phương thức khác nhau để xác thực trải nghiệm người dùng cho phương pháp của chúng tôi trong thực tế.

5. Kết luận
Trong bài báo này, chúng tôi đề xuất ControlLLM, một khung tương tác đa phương thức có thể điều khiển chính xác việc sử dụng công cụ trên các miền khác nhau, bao gồm văn bản, hình ảnh, âm thanh, video, v.v. Khung đề xuất bao gồm ba giai đoạn chính: (1) phân tách nhiệm vụ để cụ thể hóa mục tiêu của nhiệm vụ, (2) một mô hình Thoughts-on-Graph (ToG) để tìm kiếm đường dẫn giải pháp tối ưu trên đồ thị công cụ được xây dựng, (3) và một máy thực thi với hộp công cụ đa năng để thực thi giải pháp một cách hiệu quả. Chúng tôi tiến hành các thí nghiệm rộng rãi và chứng minh rằng ControlLLM của chúng tôi đạt được hiệu suất vượt trội về lựa chọn công cụ, gán đối số và hiệu quả giải pháp tổng thể so với các phương pháp hiện có.

Tuy nhiên, công trình này vẫn có một số hạn chế. Vì mục tiêu của công trình này là cải thiện độ chính xác của việc sử dụng công cụ, ngay cả khi giải pháp khả thi về mặt lý thuyết, chúng tôi không thể đảm bảo rằng đầu ra từ các công cụ luôn đúng. Mặt khác, do sự mơ hồ vốn có trong ngôn ngữ tự nhiên, khó đảm bảo rằng giải pháp tối ưu được chọn phù hợp với mục tiêu của người dùng. Trong trường hợp này, chúng tôi chỉ có thể cung cấp nhiều giải pháp thay thế được tìm kiếm bởi ToG cho người dùng lựa chọn nếu giải pháp tối ưu thất bại.

[Phần còn lại của tài liệu bao gồm các tham khảo và tài liệu bổ sung với nhiều bảng và hình ảnh chi tiết về việc triển khai, đánh giá và các nghiên cứu trường hợp của hệ thống ControlLLM]
