D Lời nhắc cho Các chiến lược Tổng quát cho Nhiệm vụ
D.1 Lời nhắc cho Bảng 2 và 4
Chúng tôi liệt kê các lời nhắc cho chuỗi suy nghĩ tổng quát cho nhiệm vụ (CoT), việc triển khai chương trình-của-suy nghĩ (PoT) của chúng tôi và các chiến lược chương trình nhúng ngôn ngữ tự nhiên (NLEP) được đề xuất trong các đoạn mã sau. Chúng chia sẻ cùng hai ví dụ NLEP (một cho lập luận ngôn ngữ tự nhiên và một cho lập luận toán học) nhưng với các hình thức bước lập luận trung gian khác nhau (ví dụ: mã, văn bản, v.v.) để đánh giá hiệu suất trung bình của các chiến lược khác nhau.

Lời nhắc cho chuỗi suy nghĩ tổng quát cho nhiệm vụ (CoT) trong Bảng 2 và 4. Các chuỗi lập luận ngôn ngữ tự nhiên trung gian chi tiết được tạo ra bằng cách nhắc GPT-4 với đầu vào và đầu ra mục tiêu.

'''
Trả lời vấn đề dựa trên hướng dẫn và đầu vào đã cho.
### Hướng dẫn: Xác định cái nào khác biệt.
### Đầu vào: Twitter, Instagram, Telegram
### Trả lời:
Hãy suy nghĩ từng bước.
1. Bắt đầu bằng việc hiểu hướng dẫn nhiệm vụ. Nhiệm vụ là xác định cái nào khác biệt từ danh sách đã cho.
2. Nhìn vào đầu vào. Đầu vào bao gồm ba mục: Twitter, Instagram, và Telegram.
3. Xác định những mục này là gì. Twitter và Instagram là các nền tảng truyền thông xã hội, trong khi Telegram là một ứng dụng nhắn tin.
4. So sánh các mục để tìm cái khác biệt. Twitter và Instagram chủ yếu được sử dụng để chia sẻ thông tin, hình ảnh và video. Mặt khác, Telegram chủ yếu được sử dụng cho nhắn tin tức thời và dịch vụ voice-over-IP.
5. Xác định cái khác biệt dựa trên sự so sánh. Trong trường hợp này, Telegram là cái khác biệt vì nó phục vụ một chức năng chính khác so với Twitter và Instagram.
6. Hình thành đầu ra mục tiêu. Đầu ra mục tiêu nên nêu rõ ràng rằng Telegram là cái khác biệt và cung cấp lý do tại sao. Lý do là Twitter và Instagram là các nền tảng truyền thông xã hội chủ yếu để chia sẻ thông tin, hình ảnh và video trong khi Telegram là dịch vụ nhắn tin tức thời và voice-over-IP dựa trên đám mây.
Câu trả lời đúng là Telegram.

### Hướng dẫn: Sử dụng dữ liệu đã cho để tính trung vị.
### Đầu vào: [2, 3, 7, 8, 10]
### Trả lời:
Hãy suy nghĩ từng bước.
1. Bắt đầu bằng việc hiểu nhiệm vụ, đó là tính trung vị của một tập dữ liệu đã cho. Trung vị là giá trị giữa trong danh sách số đã sắp xếp theo thứ tự tăng dần hoặc giảm dần.
2. Nhìn vào đầu vào đã cho, đó là danh sách các số: [2, 3, 7, 8, 10].
3. Chú ý rằng danh sách đã được sắp xếp theo thứ tự tăng dần. Nếu không, bước đầu tiên sẽ là sắp xếp nó.
4. Hiểu rằng để tìm trung vị, chúng ta cần tìm giá trị giữa. Nếu danh sách có số lượng quan sát lẻ, trung vị là số giữa. Nếu danh sách có số lượng quan sát chẵn, trung vị là trung bình của hai số giữa.
5. Đếm số lượng giá trị trong danh sách. Có 5 giá trị, đó là số lẻ, vì vậy trung vị sẽ là giá trị giữa.
6. Xác định giá trị giữa. Vì có 5 giá trị, giá trị giữa là giá trị thứ 3 khi đếm từ hai đầu.
7. Tìm giá trị thứ 3 trong danh sách, đó là 7.
8. Kết luận rằng trung vị của tập dữ liệu đã cho là 7.
Câu trả lời đúng là 7.
'''

[Tiếp tục với các phần còn lại của tài liệu...]

E Chi tiết Triển khai cho Các chiến lược Cụ thể cho Nhiệm vụ
Chúng tôi mô tả chi tiết lời nhắc chuỗi suy nghĩ (CoT) và chương trình-của-suy nghĩ (PoT) few-shot trong cài đặt cụ thể cho nhiệm vụ trong Bảng 2 và 4:

• Theo dõi Vật thể Xáo trộn (7). Chúng tôi sử dụng cùng các ví dụ 3-shot như được sử dụng bởi nghiên cứu trước đây cho cả CoT và PoT cụ thể cho nhiệm vụ. Ba ví dụ liên quan đến Theo dõi Vật thể Xáo trộn (3) và các mô hình cần học từ các trình diễn và tổng quát hóa cho các trường hợp thử nghiệm bảy vật thể. Sự khác biệt giữa CoT và PoT nằm ở định dạng của lập luận trung gian: CoT áp dụng ngôn ngữ tự nhiên như chuỗi lập luận trong khi chúng tôi chuyển đổi quá trình suy nghĩ thành mã Python ngắn gọn cho PoT.

• Ngôn ngữ Dyck. Chúng tôi trích dẫn kết quả của CoT từ LATM (Cai et al., 2023) và chuyển đổi các bước lập luận của các ví dụ 3-shot được sử dụng bởi nghiên cứu chuỗi suy nghĩ trước đây thành mã Python cho PoT. Để đánh giá khả năng tổng quát hóa của lời nhắc chương trình-của-suy nghĩ, chúng tôi cố gắng tránh trực tiếp đưa ra chương trình Python có thể áp dụng chung có thể được sử dụng cho tất cả các trường hợp thử nghiệm.

• Sắp xếp Từ. Chúng tôi trích dẫn kết quả của CoT từ LATM (Cai et al., 2023) và chuyển đổi các bước lập luận của các ví dụ 3-shot được sử dụng bởi nghiên cứu chuỗi suy nghĩ trước đây thành mã Python cho PoT. Vì nhiệm vụ có thể được giải quyết hiệu quả chỉ bằng vài dòng mã, tức là đọc đầu vào đã cho và sử dụng hàm sorted(), ví dụ:

```python
# Mã Python, trả về ans
words = ['oven', 'costume', 'counterpart']
ans = "".join(sorted(words))
```

nó có thể được coi là công cụ có thể áp dụng chung đã được đưa ra trong lời nhắc đầu vào.

• Định lý Số dư Trung Quốc. Chúng tôi trích dẫn kết quả của CoT từ LATM (Cai et al., 2023). Chúng tôi xây dựng các ví dụ trong ngữ cảnh (3-shot) với ba trường hợp thành công đầu tiên của PoT tổng quát cho nhiệm vụ khi chúng tôi xây dựng chuỗi lập luận Python từ các chương trình được tạo ra của PoT tổng quát cho nhiệm vụ với GPT-4. Thực sự, đối với nhiệm vụ phức tạp này, chương trình được cung cấp trong trình diễn cũng có thể được coi là một công cụ có thể áp dụng chung. Đó là lý do chính tại sao PoT cụ thể cho nhiệm vụ có thể đạt được độ chính xác 100% trên tiêu chuẩn này.

• Lập lịch Cuộc họp. Chúng tôi trích dẫn kết quả của CoT từ LATM (Cai et al., 2023). Chúng tôi xây dựng các ví dụ trong ngữ cảnh (3-shot) với ba trường hợp thành công đầu tiên của PoT tổng quát cho nhiệm vụ khi chúng tôi xây dựng chuỗi lập luận Python từ các chương trình được tạo ra của PoT tổng quát cho nhiệm vụ với GPT-4. Tuy nhiên, không giống như việc đưa ra công cụ giải quyết vấn đề "ground-truth" cho Định lý Số dư Trung Quốc, chuỗi lập luận Python được cung cấp chỉ có thể đưa ra câu trả lời chính xác cho từng câu hỏi trình diễn cụ thể nhưng không thể được áp dụng trực tiếp cho tất cả các kịch bản do tính phức tạp của vấn đề. Chúng tôi hy vọng so sánh thiết lập này với Định lý Số dư Trung Quốc và đánh giá hiệu suất của PoT cụ thể cho nhiệm vụ trên các nhiệm vụ phức tạp thông qua các trình diễn học trong ngữ cảnh khác nhau.

• GSM-Hard. Chúng tôi sử dụng cùng các ví dụ 8-shot như được sử dụng bởi nghiên cứu trước đây trên tập dữ liệu GSM8K cho CoT GSM-Hard. Đối với PoT, chúng tôi áp dụng các ví dụ 9-shot trên tập dữ liệu GSM8K từ chương trình-của-suy nghĩ (Chen et al., 2022) chứa mã Python ngắn gọn như chuỗi lập luận.

• StrategyQA. Chúng tôi loại bỏ 1 ví dụ xuất hiện trong tập phát triển từ trình diễn 6-shot của nghiên cứu trước đây (Lyu et al., 2023) cho CoT. Vì PoT không được thiết kế và áp dụng cho nhiệm vụ trả lời câu hỏi ngôn ngữ tự nhiên, chúng tôi không tái tạo kết quả PoT cụ thể cho nhiệm vụ trên tiêu chuẩn StrategyQA.

F Lời nhắc Đánh giá cho VicunaQA
Chúng tôi có hai chỉ số cho VicunaQA. Chỉ số đầu tiên đánh giá mức độ chi tiết và thiên vị đối với các phản hồi dài được tạo ra bởi GPT-4, trong khi chỉ số khác không yêu cầu chi tiết.

F.1 Lời nhắc đánh giá yêu cầu chi tiết.
```
prompt = f'''[Câu hỏi]\n{ques_str}
[Bắt đầu Câu trả lời của Trợ lý 1]\n{gpt4_res}
\n[Kết thúc Câu trả lời của Trợ lý 1]
[Bắt đầu Câu trả lời của Trợ lý 2]\n{target_res}
\n[Kết thúc Câu trả lời của Trợ lý 2]
[Hệ thống]
Chúng tôi muốn yêu cầu phản hồi của bạn về hiệu suất của hai trợ lý AI trong việc phản hồi câu hỏi của người dùng được hiển thị ở trên.\nVui lòng đánh giá tính hữu ích, mức độ liên quan, độ chính xác, mức độ chi tiết của phản hồi của họ. Mỗi trợ lý nhận được một điểm số tổng thể trên thang điểm từ 1 đến 10, trong đó điểm số cao hơn cho thấy hiệu suất tổng thể tốt hơn.\nVui lòng đầu tiên đưa ra một dòng duy nhất chỉ chứa hai giá trị cho biết điểm số của Trợ lý 1 và 2 tương ứng. Hai điểm số được phân tách bởi một khoảng trắng. Trong dòng tiếp theo, vui lòng cung cấp giải thích toàn diện về đánh giá của bạn, tránh bất kỳ sự thiên vị tiềm ẩn nào và đảm bảo rằng thứ tự mà các phản hồi được trình bày không ảnh hưởng đến phán đoán của bạn.'''
```

F.2 Lời nhắc đánh giá không yêu cầu chi tiết.
```
prompt = f'''[Câu hỏi]\n{ques_str}
[Bắt đầu Câu trả lời của Trợ lý 1]\n{gpt4_res}
\n[Kết thúc Câu trả lời của Trợ lý 1]
[Bắt đầu Câu trả lời của Trợ lý 2]\n{target_res}
\n[Kết thúc Câu trả lời của Trợ lý 2]
[Hệ thống]
Chúng tôi muốn yêu cầu phản hồi của bạn về hiệu suất của hai trợ lý AI trong việc phản hồi câu hỏi của người dùng được hiển thị ở trên.\nVui lòng đánh giá mức độ liên quan và độ chính xác của phản hồi của họ. Mỗi trợ lý nhận được một điểm số tổng thể trên thang điểm từ 1 đến 10, trong đó điểm số cao hơn cho thấy hiệu suất tổng thể tốt hơn.\nVui lòng đầu tiên đưa ra một dòng duy nhất chỉ chứa hai giá trị cho biết điểm số của Trợ lý 1 và 2 tương ứng. Hai điểm số được phân tách bởi một khoảng trắng. Trong dòng tiếp theo, vui lòng cung cấp giải thích toàn diện về đánh giá của bạn, tránh bất kỳ sự thiên vị tiềm ẩn nào và đảm bảo rằng thứ tự mà các phản hồi được trình bày không ảnh hưởng đến phán đoán của bạn. Đừng thiên vị về câu trả lời dài hơn hay ngắn hơn.'''
```

F.3 Tính toán Thiên vị Độ dài
Giả sử chúng ta có N trường hợp đánh giá, mỗi trường hợp nhận được 2 phản hồi ứng viên. Một người chấm điểm GPT-4 quyết định người chiến thắng giữa các ứng viên. a đại diện cho số lượng trường hợp mà phản hồi ứng viên có nhiều token hơn thắng. Thiên vị độ dài được tính bằng:

lb = |a/N - 0.5| * 2 (1)
