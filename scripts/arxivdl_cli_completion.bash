#!/bin/bash
# Bash completion for arxivdl_cli.py
# Generated by setup_autocompletion.py

_arxivdl_cli_completion() {
    local cur prev words cword
    _init_completion || return

    # Main commands
    local commands="download convert translate organize analyze inventory setup workflow"

    # Special options
    local options="--help --samples --list --interactive"

    # Handle option completion for any position
    if [[ "$cur" == --* ]]; then
        local cmd_options=""
        case "${words[1]}" in
            download)
                ;;
            convert)
                cmd_options="--all --both --collection --convert --help --rename"
                ;;
            translate)
                cmd_options="--add-to-queue --backup --claude-path --clean-only --clean-stale --clear --execute --force --list --max-age --move-vi --output --queue-file --recursive --requeue --root-dir --score --threshold --verbose --workers --zip-txt"
                ;;
            organize)
                cmd_options="--base-dir --collections --exclude --execute --log-file --log-level --verbose"
                ;;
            analyze)
                cmd_options="--directory --output-file --verbose"
                ;;
            inventory)
                cmd_options="--collection --collections --format --output-file --summary --verbose"
                ;;
            setup)
                cmd_options="--full --install --quick --uninstall --verbose"
                ;;
        esac
        COMPREPLY=($(compgen -W "$cmd_options" -- "$cur"))
        return 0
    fi

    case $cword in
        1)
            # Complete main commands and options
            COMPREPLY=($(compgen -W "$commands $options" -- "$cur"))
            return 0
            ;;
        2)
            # Complete subcommands based on main command
            case $prev in
                download)
                    COMPREPLY=($(compgen -W "single batch crawler" -- "$cur"))
                    return 0
                    ;;
                convert)
                    COMPREPLY=($(compgen -W "main" -- "$cur"))
                    return 0
                    ;;
                translate)
                    COMPREPLY=($(compgen -W "claude openai check queue cleanup stalled test" -- "$cur"))
                    return 0
                    ;;
                organize)
                    COMPREPLY=($(compgen -W "enhanced basic simple" -- "$cur"))
                    return 0
                    ;;
                analyze)
                    COMPREPLY=($(compgen -W "duplicates translations monitor status" -- "$cur"))
                    return 0
                    ;;
                inventory)
                    COMPREPLY=($(compgen -W "all expected quick" -- "$cur"))
                    return 0
                    ;;
                setup)
                    COMPREPLY=($(compgen -W "init env simple test direnv completion" -- "$cur"))
                    return 0
                    ;;
            esac
            ;;
        3)
            # Complete options for subcommands
            case "${words[1]}-${words[2]}" in
                convert-main)
                    COMPREPLY=($(compgen -W "--convert --rename --both --collection --all --help" -- "$cur"))
                    return 0
                    ;;
                translate-claude)
                    COMPREPLY=($(compgen -W "--workers --claude-path --queue-file --verbose --clean-only --clean-stale" -- "$cur"))
                    return 0
                    ;;
                translate-check)
                    COMPREPLY=($(compgen -W "--threshold --output --root-dir --move-vi --zip-txt --add-to-queue" -- "$cur"))
                    return 0
                    ;;
                translate-queue)
                    COMPREPLY=($(compgen -W "--queue-file --recursive --force --list --clear" -- "$cur"))
                    return 0
                    ;;
                translate-cleanup)
                    COMPREPLY=($(compgen -W "--threshold --backup --requeue --execute --verbose" -- "$cur"))
                    return 0
                    ;;
                translate-stalled)
                    COMPREPLY=($(compgen -W "--execute --max-age --score" -- "$cur"))
                    return 0
                    ;;
                organize-enhanced)
                    COMPREPLY=($(compgen -W "--execute --base-dir --collections --exclude --log-level --log-file --verbose" -- "$cur"))
                    return 0
                    ;;
                analyze-duplicates)
                    COMPREPLY=($(compgen -W "--verbose --output-file --directory" -- "$cur"))
                    return 0
                    ;;
                inventory-all)
                    COMPREPLY=($(compgen -W "--verbose --output-file --collections --format" -- "$cur"))
                    return 0
                    ;;
                inventory-expected)
                    COMPREPLY=($(compgen -W "--collection --collections --format" -- "$cur"))
                    return 0
                    ;;
                inventory-quick)
                    COMPREPLY=($(compgen -W "--summary" -- "$cur"))
                    return 0
                    ;;
                setup-init)
                    COMPREPLY=($(compgen -W "--quick --full" -- "$cur"))
                    return 0
                    ;;
                setup-test)
                    COMPREPLY=($(compgen -W "--verbose" -- "$cur"))
                    return 0
                    ;;
                setup-completion)
                    COMPREPLY=($(compgen -W "--install --uninstall" -- "$cur"))
                    return 0
                    ;;
            esac
            ;;
        *)
            # Complete files for remaining arguments
            case ${words[1]} in
                download)
                    # Complete .txt files for download command
                    COMPREPLY=($(compgen -f -X '!*.txt' -- "$cur"))
                    ;;
                convert)
                    # Complete .pdf files for convert command
                    COMPREPLY=($(compgen -f -X '!*.pdf' -- "$cur"))
                    ;;
                translate)
                    # Complete .txt files for translate command
                    COMPREPLY=($(compgen -f -X '!*.txt' -- "$cur"))
                    ;;
                *)
                    # Default file completion
                    COMPREPLY=($(compgen -f -- "$cur"))
                    ;;
            esac
            ;;
    esac
}

# Register completion function
complete -F _arxivdl_cli_completion arxivdl_cli.py
complete -F _arxivdl_cli_completion python3 arxivdl_cli.py
