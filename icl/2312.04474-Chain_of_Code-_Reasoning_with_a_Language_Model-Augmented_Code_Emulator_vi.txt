CoC rất phù hợp cho các tác vụ đòi hỏi cả lý luận ngữ nghĩa và thuật toán ngoài lý luận ngôn ngữ, như robot học. Lợi thế độc đáo của CoC trong robot học là nó tương tác liền mạch với các API nhận thức và điều khiển robot thông qua mã python như chạy bộ phát hiện đối tượng hoặc gọi các kỹ năng robot được tham số hóa, trong khi thực hiện các tác vụ con ngữ nghĩa theo cách "nội tuyến" (ví dụ, phân loại rác nào có thể ủ phân trước khi nhặt chúng). Khi được trang bị các API robot cần thiết, và một ví dụ duy nhất trong lời nhắc để dạy LM định dạng, CoC có thể giải quyết bảy tác vụ điều khiển robot khác nhau trong thế giới thực, thể hiện khái quát hóa cho các đối tượng, ngôn ngữ và lĩnh vực tác vụ mới. Xem Phần A.6 để biết thêm chi tiết.

4. Nghiên cứu Liên quan

Lý luận Mô hình Ngôn ngữ Khả năng và ứng dụng của mô hình ngôn ngữ đã có tiến bộ đáng kể, do hiệu suất tổng thể của chúng (Chowdhery et al., 2022; Touvron et al., 2023; Radford et al., 2019; Gemini Team, 2023) và khả năng nổi lên (Wei et al., 2022a), như nhắc few-shot (Brown et al., 2020) và lý luận trừu tượng (Wei et al., 2022b). Có lẽ liên quan nhất đến nghiên cứu này, một số nghiên cứu đã tận dụng nhắc để cải thiện lý luận (Dohan et al., 2022): Chuỗi Suy nghĩ (Wei et al., 2022b) đề xuất chia nhỏ một tác vụ thành các bước lý luận trung gian, least-to-most (Zhou et al., 2022a) đề xuất một loạt các vấn đề ngày càng đơn giản hơn, và ScratchPad (Nye et al., 2021) đề xuất duy trì dấu vết của các kết quả trung gian để diễn giải mã (điều này đầu tiên chứng minh khả năng mô phỏng mã của LM cần thiết cho LMulator của chúng tôi). Theo hướng này, "hãy suy nghĩ từng bước" (Kojima et al., 2022) sử dụng một vài từ khóa chính để khơi gợi những phân tích như vậy (những từ sau đó được tinh chỉnh thành "Hít thở sâu và làm việc trên vấn đề này từng bước" trong (Yang et al., 2023)). Ngoài những điều này, các cách tiếp cận khác cấu trúc những giải pháp từng bước như vậy thành cấu trúc đồ thị (Yao et al., 2023; Besta et al., 2023), kế hoạch (Wang et al., 2023b; Ning et al., 2023), hoặc lấy mẫu dựa trên hỗn hợp chuyên gia (Wang et al., 2022; Zhou et al., 2022b). CoC xây dựng trên trực giác của những nghiên cứu này, với quan sát rằng mã là một cách tiếp cận chính thức, có cấu trúc để chia nhỏ một vấn đề thành các bước con với nhiều lợi thế ngoài chỉ ngôn ngữ tự nhiên.

Sử dụng Công cụ Mô hình Ngôn ngữ Nhiều nghiên cứu gần đây đã đề xuất các kỹ thuật để mô hình ngôn ngữ sử dụng công cụ để phản hồi các truy vấn (Mialon et al., 2023). Những công cụ này thường được cung cấp cho mô hình ngôn ngữ thông qua nhắc (Cobbe et al., 2021; Khot et al., 2022; Chowdhery et al., 2022; Drori et al., 2022; Yao et al., 2022), cho phép các công cụ như máy tính cho các vấn đề toán học, trình thông dịch mã, cơ sở dữ liệu, hoặc nhiều hơn. Những công cụ này cũng có thể cung cấp phản hồi về các phương thức mới (Surís et al., 2023; Zeng et al., 2022). Để mở rộng phạm vi công cụ có sẵn, những người khác đã sử dụng cơ sở dữ liệu công cụ bên ngoài hoặc mô hình ngôn ngữ được tinh chỉnh (Schick et al., 2023; Qin et al., 2023; Parisi et al., 2022; Paranjape et al., 2023). Vì giao diện công cụ khác nhau, phản hồi từ công cụ cũng có thể cải thiện hiệu suất (Gou et al., 2023; Zhou et al., 2023). Trong nghiên cứu này, chúng tôi tận dụng khả năng biểu thị và tính tổng quát của mã đầy đủ cũng như cấu trúc của nó, bằng cách xử lý nó vừa như một công cụ và như một khung.

Tổng hợp Chương trình Mô hình Ngôn ngữ Khả năng của mô hình ngôn ngữ để lập trình được biết đến rộng rãi và chúng đã được áp dụng làm trợ lý lập trình (Chen et al., 2021) và được chứng minh là có khả năng lập trình viên độc lập (Austin et al., 2021; Li et al., 2022; Nijkamp et al., 2022). Khả năng này đã được áp dụng cho nhiều tác vụ khác nhau ngoài chỉ ngôn ngữ, tận dụng khả năng của chúng để lý luận thông qua mã trong các cài đặt mới, như robot học (Liang et al., 2023; Singh et al., 2023), tác nhân thể hiện (Wang et al., 2023a), hoặc thị giác (Surís et al., 2023). Những người khác đã đặc biệt làm như vậy cho lý luận, như Chương trình Suy nghĩ (Chen et al., 2022) và Mô hình Ngôn ngữ Hỗ trợ Chương trình (Gao et al., 2023), tạo ra mã để giải quyết các vấn đề lý luận số học. Ở đây, chúng tôi tập trung vào sự tương tác giữa việc viết mã, chạy mã, và mô hình ngôn ngữ mô phỏng mã, do đó cho phép các chế độ mới của ứng dụng mã mô hình ngôn ngữ, như lý luận ngữ nghĩa.

5. Kết luận, Hạn chế, và Nghiên cứu Tương lai

Chúng tôi đã đề xuất Chuỗi Mã, một cách tiếp cận lý luận với mô hình ngôn ngữ thông qua việc viết mã, và thực thi mã hoặc với trình thông dịch hoặc với mô hình ngôn ngữ mô phỏng việc thực thi (được gọi ở đây là LMulator) nếu mã không thể thực thi. Như vậy, CoC có thể tận dụng cả cấu trúc biểu cảm của mã và các công cụ mạnh mẽ có sẵn cho nó. Ngoài ra, bằng cách mô phỏng việc thực thi mã không thể thực thi, CoC có thể áp dụng cho các vấn đề danh nghĩa ngoài phạm vi của mã (ví dụ, các vấn đề lý luận ngữ nghĩa). Chúng tôi đã chứng minh rằng cách tiếp cận này vượt trội hơn các đường cơ sở, và đối với một số tác vụ thậm chí là những người đánh giá tốt nhất, trong một loạt các vấn đề lý luận ngôn ngữ và số học thách thức.

Nghiên cứu này không phải không có hạn chế. Đầu tiên, việc tạo ra và thực thi trong hai bước cũng như đan xen việc thực thi mã và ngôn ngữ đòi hỏi độ dài ngữ cảnh và thời gian tính toán bổ sung. Thứ hai, mặc dù chúng tôi không thấy mất mát hiệu suất nào cho các tác vụ ngữ nghĩa tổng thể, có một vài tác vụ trong đó mã không giúp ích, ví dụ, tác vụ Ruin Names, yêu cầu xem liệu một chỉnh sửa cho tên có hài hước không. Cuối cùng, việc triển khai của chúng tôi để đan xen LM và mã khá đơn giản, theo dõi trạng thái chương trình trong các chuỗi và phân tích các chuỗi thành các kiểu dữ liệu tích hợp sẵn của Python (ví dụ, dict, tuple). Như phương pháp của chúng tôi hiện tại, LM không thể sửa đổi các đối tượng Python tùy chỉnh trong khi mô phỏng việc thực thi mã. Tuy nhiên, về lý thuyết, điều này có thể thực hiện được miễn là mỗi đối tượng Python này có phương thức tuần tự hóa và giải tuần tự hóa, ví dụ, sử dụng các kỹ thuật như Protocol Buffers.

Có nhiều hướng cho nghiên cứu tương lai với CoC. Đầu tiên, chúng tôi tin rằng một trình thông dịch mã và ngôn ngữ thống nhất kết hợp tốt kiến thức thông thường của mô hình ngôn ngữ với khả năng phân tích, cấu trúc, và tính diễn giải của mã. Công nghệ như vậy có thể cho phép ứng dụng mã và lý luận giống mã cho các lĩnh vực vấn đề mới, ngoài lý luận đơn giản. Thứ hai, chúng tôi quan tâm đến việc điều tra mức độ mà việc tinh chỉnh mô hình ngôn ngữ để trở thành LMulator có thể có lợi cho lý luận mã ngữ nghĩa. Thứ ba, chúng tôi thấy bằng chứng rằng lý luận thông qua nhiều con đường mang lại cải thiện, đây là một bước tiến hứa hẹn. Cuối cùng, chúng tôi tin rằng sự tích hợp này với mã cho phép truy cập vào các phương thức bên ngoài, như thị giác hoặc cơ sở dữ liệu, và đại diện cho một con đường thú vị cho các ứng dụng mới (ví dụ, robot học, thực tế tăng cường).

Tuyên bố Tác động

Bài báo này trình bày nghiên cứu có mục tiêu thúc đẩy lĩnh vực Học máy. Có nhiều hậu quả xã hội tiềm năng của công trình của chúng tôi, hầu hết trong số đó liên quan đến việc sử dụng mô hình ngôn ngữ lớn (LLM). Một khía cạnh của Chuỗi Mã đáng thảo luận thêm là CoC thực thi đầu ra của LLM sử dụng trình thông dịch Python như thể chúng luôn là mã lành tính. Tuy nhiên, nếu được triển khai trong thực tế, Chuỗi Mã sẽ cần cài đặt các biện pháp bảo vệ bổ sung chống lại mã có thể có hại từ LLM có thể được nhắc một cách ác ý, trước khi chạy mã.

Tài liệu tham khảo

[Danh sách tài liệu tham khảo đầy đủ được giữ nguyên như trong bản gốc]

A. Phụ lục

A.1. Kết quả định lượng trên các tác vụ lý luận ngôn ngữ

[Nội dung phụ lục được tiếp tục với các bảng, hình và kết quả chi tiết như trong bản gốc]
