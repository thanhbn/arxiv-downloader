A.6.2 Điều hướng đến một món đồ nội thất hoặc thiết bị . . . . . . . . . . . . . . . . 20
A.6.3 Nhặt một đối tượng trên hoặc trong một món đồ nội thất hoặc thiết bị . . . . . . . . . 21
A.6.4 Đặt một đối tượng lên hoặc vào một món đồ nội thất hoặc thiết bị . . . . . . . . . . 21
A.6.5 Xếp các đối tượng . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
A.6.6 Tháo các đối tượng . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 22
A.6.7 Mở một món đồ nội thất hoặc thiết bị . . . . . . . . . . . . . . . . . . . . . . 23
A.6.8 Đóng một món đồ nội thất hoặc thiết bị . . . . . . . . . . . . . . . . . . . . . 23
A.6.9 Bật một thiết bị nhỏ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
A.6.10 Tắt một thiết bị nhỏ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
A.6.11 Cắt một đối tượng . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
A.6.12 Đun nóng thức ăn bằng lò vi sóng . . . . . . . . . . . . . . . . . . . . . . . 25
A.6.13 Đun nóng thức ăn bằng chảo . . . . . . . . . . . . . . . . . . . . . . . . . . 26
A.6.14 Chuyển thức ăn từ thùng chứa nhỏ này sang thùng chứa nhỏ khác . . . . . . . . 27
A.6.15 Đặt một đối tượng lên hoặc vào một thùng chứa nhỏ như bát và đĩa . . . . . . 27
A.6.16 Nhặt một đối tượng trên hoặc trong một thùng chứa nhỏ như bát và đĩa . . . . . 28
A.6.17 Mở một thùng chứa nhỏ như hộp cơm có nắp đậy . . . . . . . . . . . . . . . 29
A.6.18 Đóng một thùng chứa nhỏ như hộp cơm có nắp đậy . . . . . . . . . . . . . . 30
A.6.19 Nghiền thức ăn bằng máy xay . . . . . . . . . . . . . . . . . . . . . . . . . 30
A.6.20 Rửa một đối tượng . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
A.6.21 Lau một bề mặt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31
A.6.22 Hút bụi thảm . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
A.6.23 Làm trống máy hút bụi . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
A.6.24 Ví dụ về các mô hình hành động PDDL được xây dựng bởi GPT-3.5-Turbo . . . . . 33
A.6.25 Tập hợp vị từ ban đầu được trích xuất bởi GPT-4 . . . . . . . . . . . . . . . . 34
A.7 Gia đình: Sửa các mô hình PDDL . . . . . . . . . . . . . . . . . . . . . . . . . . 35
A.7.1 Đun nóng thức ăn bằng chảo . . . . . . . . . . . . . . . . . . . . . . . . . . 35

--- TRANG 16 ---
A.7.2 Cắt một đối tượng . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37
A.7.3 GPT-3.5-Turbo cố gắng sửa mô hình hành động của "cắt một đối tượng" . . . 38
A.8 Logistics: Xây dựng các mô hình PDDL . . . . . . . . . . . . . . . . . . . . . . . . 39
A.8.1 Tải một gói hàng vào xe tải . . . . . . . . . . . . . . . . . . . . . . . . . . 39
A.8.2 Dỡ một gói hàng từ xe tải . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
A.8.3 Tải một gói hàng lên máy bay . . . . . . . . . . . . . . . . . . . . . . . . . 40
A.8.4 Dỡ một gói hàng từ máy bay . . . . . . . . . . . . . . . . . . . . . . . . . . 40
A.8.5 Lái xe tải từ địa điểm này đến địa điểm khác trong thành phố . . . . . . . . . . 40
A.8.6 Bay máy bay từ thành phố này đến thành phố khác . . . . . . . . . . . . . . . . 41
A.8.7 Ví dụ về các mô hình hành động PDDL được xây dựng bởi GPT-3.5-Turbo . . . . . 41
A.8.8 Tập hợp vị từ ban đầu được trích xuất bởi GPT-4 . . . . . . . . . . . . . . . . 42
A.9 Logistics: Sửa các mô hình PDDL . . . . . . . . . . . . . . . . . . . . . . . . . . 42
A.9.1 Bay máy bay từ thành phố này đến thành phố khác . . . . . . . . . . . . . . . . 42
A.9.2 GPT-3.5-Turbo cố gắng sửa mô hình hành động của "bay máy bay từ thành phố này đến thành phố khác" . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
A.10 Tyreworld: Xây dựng các mô hình PDDL . . . . . . . . . . . . . . . . . . . . . . . 44
A.10.1 Mở một thùng chứa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
A.10.2 Đóng một thùng chứa . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
A.10.3 Lấy một đối tượng từ thùng chứa . . . . . . . . . . . . . . . . . . . . . . . . 45
A.10.4 Đặt một đối tượng vào thùng chứa . . . . . . . . . . . . . . . . . . . . . . . . 45
A.10.5 Nới lỏng một đai ốc trong trục . . . . . . . . . . . . . . . . . . . . . . . . . . 46
A.10.6 Siết chặt một đai ốc trong trục . . . . . . . . . . . . . . . . . . . . . . . . . . 46
A.10.7 Kích một trục lên . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47
A.10.8 Hạ kích một trục xuống . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47
A.10.9 Tháo một trục . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47
A.10.10 Lắp một trục . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
A.10.11 Tháo bánh xe khỏi trục . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
A.10.12 Lắp bánh xe lên trục . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49
A.10.13 Bơm bánh xe . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49
A.10.14 Ví dụ về các mô hình hành động PDDL được xây dựng bởi GPT-3.5-Turbo . . . . . 50
A.10.15 Tập hợp vị từ ban đầu được trích xuất bởi GPT-4 . . . . . . . . . . . . . . . 50
A.11 Tyreworld: Sửa các mô hình PDDL . . . . . . . . . . . . . . . . . . . . . . . . . . 51
A.11.1 Tháo một trục . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
A.11.2 Bơm bánh xe . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52
A.12 Các bộ quy hoạch LLM được back-prompt bởi VAL sử dụng mô hình PDDL được LLM thu thập . . . . . 53
A.12.1 Ví dụ về các prompt cho bộ quy hoạch LLM . . . . . . . . . . . . . . . . . . . 53
A.12.2 Dịch sang các hành động được phép . . . . . . . . . . . . . . . . . . . . . . . 55
A.12.3 Back-prompt các bộ quy hoạch LLM với phản hồi xác thực bởi VAL . . . . . . 56
A.12.4 Ví dụ về phản hồi xác thực và hướng dẫn với các ràng buộc thứ tự . . . . . . . . 57
A.13 Dịch hướng dẫn của người dùng thành đặc tả mục tiêu PDDL . . . . . . . . . . . . . . 59

A.1 Tác động rộng lớn của việc sử dụng LLM

Có xu hướng chung muốn sử dụng LLM cho nhiều tác vụ khác nhau, bao gồm tạo kế hoạch. Do thực tế rằng LLM không thể đảm bảo việc tạo ra các kế hoạch đúng, điều này có thể dẫn đến các vấn đề an toàn và bảo mật ở hạ nguồn. Phương pháp của chúng tôi về việc trích xuất mô hình miền từ LLM, và sử dụng nó kết hợp với các bộ quy hoạch đáng tin cậy bên ngoài nhằm giảm thiểu những mối quan ngại về an toàn này. Tuy nhiên, do con người vẫn chịu trách nhiệm xác minh tính đúng đắn của các mô hình miền được trích xuất từ LLM, vẫn có khả năng rằng một mô hình miền không đúng hoặc không mong muốn được chứng nhận một cách vô tình là đúng, dẫn đến các kế hoạch và hành vi tác nhân không mong muốn về sau.

Khả năng giải thích được cải thiện là một lợi thế khác của việc trích xuất các mô hình miền rõ ràng. Thay vì chỉ trực tiếp truy vấn LLM để có kế hoạch, việc tạo ra hành vi với các mô hình ký hiệu (trung gian) cung cấp thêm cơ hội cho việc giải thích, dựa vào các công trình hiện có trong AI có thể giải thích được [23]. Trong các trường hợp mà hiểu biết của người dùng không phù hợp với mô hình được chuyển ghi, các kỹ thuật gỡ lỗi và hòa giải mô hình như D3wa+ [52] cũng có thể được áp dụng trực tiếp.

A.2 Thảo luận bổ sung về lựa chọn thay thế cho việc xây dựng PDDL theo từng hành động

Một lựa chọn thay thế cho việc tạo ra theo từng hành động của chúng tôi có thể là bao gồm mô tả của tất cả các hành động trong prompt và yêu cầu LLM xây dựng toàn bộ mô hình miền trong một đối thoại duy nhất. Phương pháp này có thể cho phép LLM thiết lập tầm nhìn toàn cầu tốt hơn về tất cả các hành động. Tuy nhiên, chúng tôi không theo đuổi lựa chọn thay thế này ở đây vì các lý do sau: (a) việc bao gồm tất cả các hành động có thể dẫn đến một prompt dài, có khả năng vượt quá kích thước cửa sổ ngữ cảnh của LLM. Điều này có thể gây ra các vấn đề thực tế trong việc sử dụng các mô hình ngôn ngữ nhỏ hơn (ví dụ, GPT-3.5-Turbo [36]) hoặc cố gắng huấn luyện các mô hình chuyên biệt nhỏ hơn; (b) việc tích hợp phản hồi sửa lỗi của chúng tôi dựa vào việc tiếp tục đối thoại xây dựng (Mục 4.2), điều này cần một prompt ban đầu ngắn hơn để phù hợp trong cửa sổ ngữ cảnh; (c) các thí nghiệm của chúng tôi cho thấy rằng phương pháp xây dựng theo từng hành động đã đạt được kết quả thỏa đáng

A.3 Ví dụ về các thông điệp phản hồi bắt lỗi cú pháp

Nhớ lại rằng chúng tôi dựa vào bộ xác thực PDDL trong VAL để xác định lỗi cú pháp. Tuy nhiên, một số lỗi cú pháp "đơn giản hơn" có thể được phát hiện dễ dàng bằng các script Python đơn giản. Trong các thí nghiệm của chúng tôi, chúng tôi đã viết các script để bắt các lỗi cú pháp như vậy. Cũng lưu ý rằng vì những lỗi này có thể được phát hiện với chi phí tối thiểu, các thông điệp phản hồi tương ứng được cung cấp trực tiếp cho LLM, và chúng không được tính trong kết quả được báo cáo trong Bảng 1. Những lỗi cú pháp "đơn giản hơn" này bao gồm:

1. Trong công trình này, chúng tôi chỉ xem xét PDDL cấp cơ sở tiêu chuẩn. Tuy nhiên, có thể LLM đã thấy các mở rộng khác nhau của PDDL và có thể sử dụng chúng trong các mô hình miền được xây dựng. Do đó, chúng tôi cung cấp thông điệp phản hồi cho LLM bất cứ khi nào chúng tôi phát hiện từ khóa không được hỗ trợ. Một ví dụ phản hồi là: "Điều kiện tiên quyết hoặc hiệu ứng chứa từ khóa 'forall' không được hỗ trợ trong mô hình kiểu STRIPS tiêu chuẩn. Vui lòng biểu diễn logic tương tự theo cách đơn giản hóa. Bạn có thể đưa ra các vị từ mới nếu cần (nhưng lưu ý rằng bạn nên sử dụng các vị từ hiện có càng nhiều càng tốt)."

2. Các vị từ mới được tạo có thể có tên giống với các loại đối tượng hiện có, điều này không được phép trong PDDL. Trong các trường hợp như vậy, một thông điệp phản hồi được cung cấp để thông báo cho LLM về xung đột tên. Ví dụ, một thông điệp có thể nói: "(Các) vị từ sau có (các) tên giống với các loại đối tượng hiện có: 1. 'smallReceptacle'. Vui lòng đổi tên những vị từ này."

3. Các vị từ mới được tạo có thể có tên giống với các vị từ hiện có, điều này không được phép trong PDDL. Ngoài ra, LLM thường nhầm lẫn liệt kê các vị từ hiện có trong phần 'Vị từ mới'. Trong các trường hợp như vậy, một thông điệp phản hồi được cung cấp để thông báo cho LLM về xung đột tên hoặc sai lầm. Ví dụ, một thông điệp có thể nói: "(Các) vị từ sau có (các) tên giống với (các) vị từ hiện có: 1. (cutting-board ?z - smallReceptacle), đúng nếu thùng chứa nhỏ ?z là một thớt cắt | vị từ hiện có có cùng tên: (cutting-board ?z - householdObject), đúng nếu đối tượng ?z là một thớt cắt. Bạn nên tái sử dụng các vị từ hiện có bất cứ khi nào có thể. Nếu bạn đang tái sử dụng (các) vị từ hiện có, bạn không nên liệt kê chúng trong 'Vị từ mới'. Nếu các vị từ hiện có không đủ và bạn đang thiết kế (các) vị từ mới, vui lòng sử dụng tên khác với những tên hiện có. Vui lòng sửa đổi mô hình PDDL để sửa lỗi này." Đây là lỗi cú pháp phổ biến nhất được GPT-4 mắc phải trong các thí nghiệm của chúng tôi.

4. LLM có thể không chỉ sử dụng các loại đối tượng được đưa ra trong prompt. Một ví dụ phản hồi có thể là: "Có loại đối tượng không hợp lệ 'pump' cho tham số ?p."

Trong các thí nghiệm của chúng tôi, các loại lỗi trên bao gồm phần lớn các lỗi cú pháp được GPT-4 mắc phải. Trong một số trường hợp ít phổ biến hơn, GPT-4 có thể gặp vấn đề với việc sử dụng vị từ, thường được gây ra bởi các loại đối tượng không khớp. Loại lỗi này có thể được bắt bởi VAL và một ví dụ thông điệp phản hồi có thể là: "Có lỗi cú pháp, tham số thứ hai của 'object-on' phải là một furnitureAppliance, nhưng một householdObject đã được đưa ra. Vui lòng sử dụng vị từ đúng hoặc thiết kế (những) vị từ mới nếu cần."

A.4 Kỹ thuật hỗ trợ người dùng định vị lỗi trong các mô hình PDDL

Một số kỹ thuật và công cụ được thiết lập tốt có sẵn để định vị lỗi trong các mô hình PDDL. Ví dụ, các công cụ đồ họa như GIPO [49] có thể hiển thị hiệu quả các phụ thuộc nhân quả của các hành động. Tuy nhiên, những công cụ hoặc kỹ thuật tiên tiến này nằm ngoài phạm vi của công trình này. Ở đây, chúng tôi phác thảo một giải pháp khả thi như điểm khởi đầu cho những người dùng không quen với các công cụ này.

17

--- TRANG 18 ---
Có hai giai đoạn mà phản hồi sửa lỗi có thể được có được: trong quá trình xây dựng mô hình PDDL, và khi mô hình miền được sử dụng để tạo kế hoạch. Trong giai đoạn đầu tiên, người dùng cuối có thể trực tiếp xem xét mô hình miền và xác định các lỗi thực tế tiềm ẩn. Vì tất cả các vị từ và tham số đều có kèm theo mô tả ngôn ngữ tự nhiên, chúng ta có thể dễ dàng chuyển đổi mô hình PDDL thành ngôn ngữ tự nhiên và trình bày nó cho người dùng. Điều này cho phép người dùng sàng lọc trước các điều kiện tiên quyết và hiệu ứng. Lưu ý rằng chúng tôi không mong đợi tất cả các lỗi thực tế sẽ được bắt trong giai đoạn này, vì người dùng có thể không nhận thức được một số ràng buộc nhất định cho đến khi họ xem xét các kế hoạch cuối cùng. Trong giai đoạn thứ hai, mô hình PDDL được sử dụng để giải quyết các bài toán quy hoạch xuôi dòng bằng cách tuân theo quy trình được nêu trong Mục 4.3. Hai trường hợp có thể xảy ra ở đây có thể phát sinh: (a) không thể tìm thấy kế hoạch nào cho đặc tả mục tiêu đã cho, hoặc (b) ít nhất một kế hoạch được tìm thấy nhưng nó bị người dùng từ chối hoặc dẫn đến thất bại thực thi trong môi trường thực tế. Để giải quyết trường hợp đầu tiên, chúng ta có thể yêu cầu người dùng đề xuất một kế hoạch thỏa mãn mục tiêu, được cho là có thể thực thi (nhưng không nhất thiết tối ưu). Sau đó chúng ta sử dụng mô hình PDDL được tạo ra để "xác thực" kế hoạch được đề xuất. Điều này cho phép chúng ta tìm bước đầu tiên trong kế hoạch có (các) điều kiện tiên quyết không được thỏa mãn. Các mô hình của tất cả các hành động cho đến bước này, cùng với (các) điều kiện tiên quyết chưa được đáp ứng, sau đó được chuyển đổi sang ngôn ngữ tự nhiên và trình bày cho người dùng để kiểm tra. Như một ví dụ, trong mô hình của "cắt một đối tượng" được trích xuất bởi GPT-4 (Mục A.6.11 trong Phụ lục), mô hình yêu cầu đối tượng phải được đặt trên thớt cắt và một món đồ nội thất cùng một lúc, điều này không khả thi về mặt vật lý. Bằng cách tận dụng kế hoạch do người dùng đề xuất, chúng ta có thể xác định (các) mô hình có khả năng có lỗi và gắn cờ (các) điều kiện tiên quyết không đúng. Trong trường hợp thứ hai mà một kế hoạch không hợp lệ được cung cấp bởi mô hình PDDL, thường có các điều kiện tiên quyết hoặc hiệu ứng bị thiếu trong các hành động được thực hiện, cả trong và trước khi thất bại thực thi. Người dùng có thể chú ý đến những hành động này.

A.5 Mô tả chi tiết về miền Gia đình

Chúng tôi xem xét một mô hình robot một cánh tay gần giống với robot SPOT và Fetch Mobile Manipulator. Do đó, robot không thể nắm nhiều đối tượng cùng một lúc hoặc thực hiện các hành động thao tác trong khi cầm các vật phẩm không liên quan (ví dụ, mở cửa tủ lạnh trong khi cầm cốc). Chúng tôi cũng đảm bảo rằng các ràng buộc phù hợp với khả năng robot thực tế. Ví dụ, chúng tôi nhận ra rằng cánh tay robot có thể ít linh hoạt hơn đáng kể so với cánh tay con người, và do đó, chúng tôi yêu cầu một số tác vụ thao tác phải được thực hiện trên các món đồ nội thất có bề mặt mở và linh hoạt (ví dụ, robot chỉ có thể nhặt các món thức ăn từ hộp cơm khi hộp cơm được đặt trên mặt bàn bếp thay vì bên trong tủ lạnh). Danh sách các hành động và mô tả của chúng có thể được tìm thấy trong Phụ lục bắt đầu từ Mục A.6.2. Prompt xây dựng PDDL cho miền này bao gồm mô tả chung về miền, nêu rõ các tác vụ được thực hiện bởi robot, các loại đối tượng liên quan, và chi tiết về hình thái học của robot. Một ví dụ về prompt đầy đủ có thể được tìm thấy trong Hình A.6.1.

A.6 Gia đình: Xây dựng các mô hình PDDL

Tác nhân AI ở đây là một robot gia đình có thể điều hướng đến các món đồ nội thất hoặc thiết bị lớn và thường không di chuyển được khác nhau trong nhà để thực hiện các nhiệm vụ gia đình. Lưu ý rằng robot chỉ có một gripper, vì vậy (a) nó chỉ có thể cầm một đối tượng; (b) nó không nên cầm bất kỳ đối tượng không liên quan nào khác trong gripper của mình khi thực hiện một số tác vụ thao tác (ví dụ, mở ngăn kéo hoặc đóng cửa sổ); (c) các thao tác trên các vật phẩm gia đình nhỏ nên được thực hiện trên đồ nội thất có bề mặt phẳng để có đủ không gian cho thao tác. Có ba loại đối tượng chính trong miền này: robot, furnitureAppliance, và householdObject. Loại đối tượng furnitureAppliance bao gồm các món đồ nội thất hoặc thiết bị lớn và thường không di chuyển được, chẳng hạn như bếp gas, bàn phụ, bàn ăn, ngăn kéo, tủ, hoặc lò vi sóng. Loại đối tượng householdObject bao gồm tất cả các vật phẩm gia đình nhỏ khác, chẳng hạn như máy hút bụi cầm tay, vải, táo, chuối, và các thùng chứa nhỏ như bát và hộp cơm. Có một kiểu con của householdObject gọi là smallReceptacle bao gồm các thùng chứa nhỏ như bát, hộp cơm, đĩa, v.v. Trong miền này, vị trí của robot và các vật phẩm gia đình nhỏ (ví dụ, táo, cam, bát, hộp cơm hoặc đèn) được xác định bởi các món đồ nội thất hoặc thiết bị lớn và thường không di chuyển được.

18
