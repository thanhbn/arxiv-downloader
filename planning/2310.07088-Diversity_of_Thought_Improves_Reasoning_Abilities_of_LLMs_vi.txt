--- TRANG 9 ---
lý luận phức tạp bằng cách khám phá các kỹ năng và kiến thức cần thiết từ LLMs thông qua các phương pháp prompting có mục tiêu và đa dạng. Những kết quả này chứng minh cách thúc đẩy sự đa dạng có thể cải thiện biên Pareto của sự đánh đổi độ chính xác-chi phí cho các LLMs hiện tại và mang lại các giải pháp hiện đại nhất cho các nhiệm vụ lập kế hoạch và lý luận toán học. Chúng tôi hy vọng rằng công trình tương lai sẽ mở rộng những kết quả này cho các nhiệm vụ phức tạp từ các ứng dụng thực tế khác.

7 Hạn chế

Nghiên cứu của chúng tôi chủ yếu thí nghiệm với các mô hình GPT-3.5 và GPT-4 do khả năng tuân theo hướng dẫn của chúng. Mặc dù các mô hình mã nguồn mở hiện tại đã cho thấy những cải thiện đáng kể về điểm này, chúng vẫn chưa thể tuân theo một cách đáng tin cậy các hướng dẫn liên quan đến các nhiệm vụ lý luận phức tạp (ví dụ theo dõi trạng thái, tính hợp lệ của kế hoạch, thỏa mãn ràng buộc). Chúng tôi hy vọng rằng tiến bộ trong lĩnh vực sẽ cho phép thí nghiệm thêm theo hướng này.

Ngoài ra, chúng tôi cũng quan sát rằng lan truyền lỗi trong quá trình tạo sinh tự hồi quy đôi khi có thể ảnh hưởng tiêu cực đến hiệu suất của IDIV-SE, nơi tất cả các cách tiếp cận được thực hiện theo thứ tự trong cùng một lời nhắc. Một số điều này có thể được giải quyết bằng cách hướng dẫn rõ ràng mô hình quên về giải pháp trước đó nhưng cuối cùng miễn là lịch sử tạo sinh trước đó vẫn trong ngữ cảnh và bộ nhớ ngắn hạn, rủi ro lan truyền lỗi vẫn có thể cần được theo dõi và đo lường.

Tài liệu tham khảo

Rohan Anil, Andrew M Dai, Orhan Firat, Melvin Johnson, Dmitry Lepikhin, Alexandre Passos, Siamak Shakeri, Emanuel Taropa, Paige Bailey, Zhifeng Chen, et al. 2023. Palm 2 technical report. arXiv preprint arXiv:2305.10403.

Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agarwal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh, Daniel Ziegler, Jeffrey Wu, Clemens Winter, Chris Hesse, Mark Chen, Eric Sigler, Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCandlish, Alec Radford, Ilya Sutskever, và Dario Amodei. 2020. Language models are few-shot learners. Trong Advances in Neural Information Processing Systems, tập 33, trang 1877-1901. Curran Associates Inc.

Sébastien Bubeck, Varun Chandrasekaran, Ronen Eldan, Johannes Gehrke, Eric Horvitz, Ece Kamar, Peter Lee, Yin Tat Lee, Yuanzhi Li, Scott Lundberg, et al. 2023. Sparks of artificial general intelligence: Early experiments with gpt-4. arXiv preprint arXiv:2303.12712.

Wenhu Chen, Xueguang Ma, Xinyi Wang, và William W. Cohen. 2022. Program of thoughts prompting: Disentangling computation from reasoning for numerical reasoning tasks.

Zhoujun Cheng, Jungo Kasai, và Tao Yu. 2023. Batch prompting: Efficient inference with large language model apis.

H. W. Chung, L. Hou, S. Longpre, B. Zoph, Y. Tay, W. Fedus, E. Li, X. Wang, M. Dehghani, và S. Brahma. 2022. Scaling instruction-finetuned language models. arXiv preprint arXiv:2210.11416.

Karl Cobbe, Vineet Kosaraju, Mohammad Bavarian, Mark Chen, Heewoo Jun, Lukasz Kaiser, Matthias Plappert, Jerry Tworek, Jacob Hilton, Reiichiro Nakano, Christopher Hesse, và John Schulman. 2021. Training verifiers to solve math word problems.

Tim Dettmers, Mike Lewis, Younes Belkada, và Luke Zettlemoyer. 2022a. Llm. int8(): 8-bit matrix multiplication for transformers at scale. arXiv preprint arXiv:2208.07339.

Tim Dettmers, Mike Lewis, Sam Shleifer, và Luke Zettlemoyer. 2022b. 8-bit optimizers via block-wise quantization. 9th International Conference on Learning Representations, ICLR.

Guidance. 2024. A guidance language for controlling large language models. https://github.com/guidance-ai/guidance.

Dan Hendrycks, Collin Burns, Saurav Kadavath, Akul Arora, Steven Basart, Eric Tang, Dawn Song, và Jacob Steinhardt. 2021. Measuring mathematical problem solving with the math dataset.

Erik Jones, Anca Dragan, Aditi Raghunathan, và Jacob Steinhardt. 2023. Automatically auditing large language models via discrete optimization. arXiv preprint arXiv:2303.04381.

T. Kojima, S. S. Gu, M. Reid, Y. Matsuo, và Y. Iwasawa. 2022. Large language models are zero-shot reasoners. Trong Advances in Neural Information Processing Systems.

Brian Lester, Rami Al-Rfou, và Noah Constant. 2021. The power of scale for parameter-efficient prompt tuning. arXiv preprint arXiv:2104.08691.

Yifei Li, Zeqi Lin, Shizhuo Zhang, Qiang Fu, Bei Chen, Jian-Guang Lou, và Weizhu Chen. 2023. Making language models better reasoners with step-aware verifier. Trong Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), trang 5315-5333.

--- TRANG 10 ---
Percy Liang, Rishi Bommasani, Tony Lee, Dimitris Tsipras, Dilara Soylu, Michihiro Yasunaga, Yian Zhang, Deepak Narayanan, Yuhuai Wu, Ananya Kumar, et al. 2022. Holistic evaluation of language models. arXiv preprint arXiv:2211.09110.

Wang Ling, Dani Yogatama, Chris Dyer, và Phil Blunsom. 2017. Program induction by rationale generation: Learning to solve and explain algebraic word problems. Trong Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), trang 158-167, Vancouver, Canada. Association for Computational Linguistics.

Drew McDermott, Malik Ghallab, Adele E Howe, Craig A Knoblock, Ashwin Ram, Manuela M Veloso, Daniel S Weld, và David E Wilkins. 1998. Pddl-the planning domain definition language.

Harsha Nori, Yin Tat Lee, Sheng Zhang, Dean Carignan, Richard Edgar, Nicolo Fusi, Nicholas King, Jonathan Larson, Yuanzhi Li, Weishung Liu, et al. 2023. Can generalist foundation models outcompete special-purpose tuning? case study in medicine. arXiv preprint arXiv:2311.16452.

Michael Nye, Anders J Andreassen, Guy Gur-Ari, Henryk Michalewski, Jacob Austin, David Bieber, David Dohan, Aitor Lewkowycz, Marten Bosma, Daan Luan, et al. 2021. Show your work: Scratchpads for intermediate computation with language models. arXiv preprint arXiv:2112.00114.

OpenAI. 2022. Introducing chatgpt.

OpenAI. 2023a. Gpt-4 technical report.

OpenAI. 2023b. Gpt-4 technical report.

Reid Pryzant, Dan Iter, Jerry Li, Yin Tat Lee, Chenguang Zhu, và Michael Zeng. 2023. Automatic prompt optimization with "gradient descent" and beam search. arXiv preprint arXiv:2305.03495.

Leonard Salewski, Stephan Alaniz, Isabel Rio-Torto, Eric Schulz, và Zeynep Akata. 2023. In-context impersonation reveals large language models' strengths and biases. arXiv preprint arXiv:2305.14930.

Kaya Stechly, Matthew Marquez, và Subbarao Kambhampati. 2023. Gpt-4 doesn't know it's wrong: An analysis of iterative prompting for reasoning problems. arXiv preprint arXiv:2310.12397.

Alon Talmor, Jonathan Herzig, Nicholas Lourie, và Jonathan Berant. 2019. CommonsenseQA: A question answering challenge targeting commonsense knowledge. Trong Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers), trang 4149-4158, Minneapolis, Minnesota. Association for Computational Linguistics.

Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. 2023. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288.

Karthik Valmeekam, Matthew Marquez, Sarath Sreedharan, và Subbarao Kambhampati. 2023. On the planning abilities of large language models - a critical investigation.

Karthik Valmeekam, Alberto Olmo, Sarath Sreedharan, và Subbarao Kambhampati. 2022. Large language models still can't plan (a benchmark for llms on planning and reasoning about change). arXiv preprint arXiv:2206.10498.

Xuezhi Wang, Jason Wei, Dale Schuurmans, Quoc Le, Ed Chi, Sharan Narang, Aakanksha Chowdhery, và Denny Zhou. 2023. Self-consistency improves chain of thought reasoning in language models.

Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Brian Ichter, Fei Xia, Ed Chi, Quoc Le, và Denny Zhou. 2022. Chain of thought prompting elicits reasoning in large language models. Trong Conference on Neural Information Processing Systems (NeurIPS).

Jules White, Quchen Fu, Sam Hays, Michael Sandborn, Carlos Olea, Henry Gilbert, Ashraf Elnashar, Jesse Spencer-Smith, và Douglas C Schmidt. 2023. A prompt pattern catalog to enhance prompt engineering with chatgpt. arXiv preprint arXiv:2302.11382.

Thomas Wolf, Lysandre Debut, Victor Sanh, Julien Chaumond, Clement Delangue, Anthony Moi, Pierric Cistac, Tim Rault, Rémi Louf, Morgan Funtowicz, et al. 2019. Huggingface's transformers: State-of-the-art natural language processing. arXiv preprint arXiv:1910.03771.

Ori Yoran, Tomer Wolfson, Ben Bogin, Uri Katz, Daniel Deutch, và Jonathan Berant. 2023. Answering questions by meta-reasoning over multiple chains of thought. arXiv preprint arXiv:2304.13007.

Denny Zhou, Nathanael Schärli, Le Hou, Jason Wei, Nathan Scales, Xuezhi Wang, Dale Schuurmans, Claire Cui, Olivier Bousquet, Quoc Le, và Ed Chi. 2022. Least-to-most prompting enables complex reasoning in large language models. arXiv preprint arXiv:2205.10625.

Pei Zhou, Jay Pujara, Xiang Ren, Xinyun Chen, Heng-Tze Cheng, Quoc V Le, Ed H Chi, Denny Zhou, Swaroop Mishra, và Huaixiu Steven Zheng. 2024. Self-discover: Large language models self-compose reasoning structures. arXiv preprint arXiv:2402.03620.

--- TRANG 11 ---
Phụ lục

A Lời nhắc được sử dụng cho DIVERSE PROMPTING

Chiến lược prompting đa dạng của chúng tôi cho IDIV-SE và DIV-SE được trình bày trong Hình 2 và Hình 4 tương ứng. Mẫu lời nhắc cụ thể xác định các cách tiếp cận của chúng tôi được trình bày trong Hình 5.

B Chi tiết Mô hình

B.1 Mô hình Mã nguồn Mở

Chúng tôi thực hiện các thí nghiệm Llama-2 70B với một GPU A100 80GB duy nhất. Để phù hợp với mô hình 70B trên một A100 duy nhất, chúng tôi sử dụng độ chính xác 8-bit thông qua bitsandbytes (Dettmers et al., 2022a,b). Hơn nữa, Dettmers et al. (2022a) báo cáo không có sụt giảm hiệu suất với phương pháp lượng tử hóa này.

Như lời nhắc hệ thống, chúng tôi sử dụng "You are a helpful, respectful and honest assistant."

Chúng tôi thực hiện suy luận với giải mã tham lam, có nhiệt độ T = 0.

C Kết quả Bổ sung

Trong phần này, chúng tôi cung cấp kết quả bổ sung trên các benchmark COMMONSENSE QA và GSM8K.

C.1 Thông thường thông qua COMMONSENSE QA

Bảng 2 trình bày kết quả của các thí nghiệm. Nhìn chung, những cải thiện về độ chính xác là tương đối khiêm tốn. Điều này có thể là vì việc trả lời câu hỏi trong COMMONSENSE QA không đòi hỏi nhiều lý luận và sự đa dạng tư duy như yêu cầu trong một số benchmark khác. Ngoài ra, tập dữ liệu cũng chứa một số câu hỏi mơ hồ, nếu đọc theo nghĩa đen có thể có nhiều câu trả lời hợp lý nhưng sự thật cơ bản chỉ chứa một câu trả lời.

C.2 Lý luận số học thông qua GSM8K

Kết quả GPT-4: Như được hiển thị trong Hình 6, độ chính xác trên GSM8K gần như đã đạt đỉnh, với các baseline ZS-CoT và FS-CoT đạt độ chính xác lần lượt là 94% và 95%. IDIV-SE không tạo ra bất kỳ cải thiện đáng kể nào trong cả hai thiết lập. Mặt khác, DIV-SE đạt độ chính xác 96.3% trong cả thiết lập FS-CoT và ZS-CoT, cung cấp một cải thiện khiêm tốn.

Kết quả GPT-3.5: Ở đây, những cải thiện đáng kể hơn. So với baseline ZS-CoT là 76.11%, IDIV-SE cung cấp cải thiện 5.31 p.p. DIV-SE đi xa hơn, tăng cường độ chính xác 10.39 p.p. Trong thiết lập FS-CoT, DIV-SE đạt cải thiện độ chính xác 7.68 p.p (với độ chính xác baseline là 81.4%).

Hình 3 (bên phải nhất) trình bày sự đánh đổi chi phí so với độ chính xác giữa IDIV-SE, DIV-SE, và SC. Mặc dù hiệu suất của SC có cải thiện với việc mở rộng các đường dẫn lý luận, cả IDIV-SE và DIV-SE đều cung cấp sự đánh đổi tốt hơn.

D Đánh giá Kích thước Ensemble

Hình 6 mô tả độ chính xác trung bình của các kích thước ensemble khác nhau trên GSM8K cho cả thiết lập ZS-CoT và FS-CoT, sử dụng GPT-4 và GPT-3.5. Tương tự, Hình 7 chứng minh độ chính xác trung bình của các kích thước ensemble khác nhau trên AquA cho cả thiết lập ZS-CoT và FS-CoT, sử dụng GPT-4 và GPT-3.5. Đáng chú ý là trong cả AQuA và GSM8K, ngay cả một ensemble kích thước ba cũng mang lại những cải thiện hiệu suất đáng kể so với baseline, mà chúng tôi quy cho sự đa dạng cao và tính độc lập của các đường dẫn lý luận.

E Mẫu Lời nhắc

Phần sau cung cấp biểu diễn trực quan toàn diện về các lời nhắc được sử dụng trong nghiên cứu của chúng tôi. Những lời nhắc này, được mô tả trong Hình 9 đến 16, được sử dụng trong các thiết lập khác nhau và cho các benchmark lập kế hoạch, AQuA, và tô màu đồ thị, và kết hợp các persona và cách tiếp cận khác nhau.

Hình 9 minh họa lời nhắc được sử dụng trong lần chạy baseline, Hình 10 chứng minh lời nhắc được sử dụng khi áp dụng cách tiếp cận Finite State Machine, Hình 11 mô tả lời nhắc được sử dụng khi kết hợp persona của Alan Turing và cách tiếp cận Action Rationale, và cuối cùng, Hình 12 cho thấy lời nhắc được sử dụng khi áp dụng persona của Alan Turing và cách tiếp cận Progressive Block Placement trong thiết lập zero-shot cho benchmark lập kế hoạch.

Hình 13 minh họa cách tiếp cận đại số, trong khi Hình 14 và Hình 15 chứng minh các lời nhắc kết hợp persona của Alan Turing và Dr. Patel, một nhà toán học nổi tiếng, tương ứng, trong thiết lập few-shot-CoT cho benchmark AQuA.

Trong Hình 16 chúng tôi trình bày lời nhắc IDIV-SE được sử dụng trong thiết lập zero-shot cho benchmark tô màu đồ thị.

--- TRANG 12 ---
Q: Michael có 58 quả bóng golf. Thứ ba, anh ấy mất 23 quả bóng golf. Thứ tư, 
anh ấy mất thêm 2 quả. Michael có bao nhiêu quả bóng golf vào cuối thứ tư?
<Sử dụng tính toán trực tiếp>: Trừ tổng số quả bóng golf bị mất từ 
(...) Do đó, anh ấy có 33 quả bóng golf vào cuối thứ tư.
Q: Một ngọn nến tan 2 cm mỗi giờ khi nó cháy. 
Ngọn nến sẽ ngắn đi bao nhiêu cm sau khi cháy từ 1:00 PM đến 5:00 PM?

<sử dụng tính toán trực tiếp>: Ngọn nến cháy 
trong 4 giờ từ 1:00 PM đến 5:00 PM. (...) Ngọn 
nến sẽ ngắn đi 8 cm. Đáp án là 8 cm.

Đầu vào 1
Đầu ra 1
DIV-SE Prompting

Q: Michael có 58 quả bóng golf. Thứ ba, anh ấy mất 23 quả bóng golf. Thứ tư, 
anh ấy mất thêm 2 quả. Michael có bao nhiêu quả bóng golf vào cuối thứ tư?
<Sử dụng trực quan hóa>: Biểu diễn bài toán bằng sơ đồ với ba giai đoạn: 
(....) để lại cho anh ấy 33 quả bóng golf vào cuối thứ tư.
Q: Một ngọn nến tan 2 cm mỗi giờ khi nó cháy. Ngọn nến sẽ ngắn đi bao nhiêu cm 
sau khi cháy từ 1:00 PM đến 5:00 PM

Đầu vào 2

<sử dụng đại số>: Gọi x là chiều dài ban đầu 
của ngọn nến. Sau 4 giờ (...) ngọn nến sẽ 
ngắn đi 2 cm sau 4 giờ. Đáp án là 2 cm.

Đầu ra 2

Q: Michael có 58 quả bóng golf. Thứ ba, anh ấy mất 23 quả bóng golf. Thứ tư, mất 2 
quả. Michael có bao nhiêu quả bóng golf vào cuối thứ tư?
<Sử dụng đại số>: Gọi x là số quả bóng golf Michael có ...chúng ta thấy rằng 
Michael có 33 quả bóng golf vào cuối thứ tư.
Q: Một ngọn nến tan 2 cm mỗi giờ khi nó cháy. Ngọn nến sẽ ngắn đi bao nhiêu cm 
sau khi cháy từ 1:00 PM đến 5:00 PM?

<sử dụng trực quan hóa>: Đây là biểu diễn trực quan:
|----------------- | (chiều dài ban đầu)
|-------- |           (1 giờ sau)
|----|               (2 giờ sau)
(...) Lúc 5:00 PM, ngọn nến ngắn hơn 8 cm so với 
chiều dài ban đầu. Đáp án là 8 cm.

Đầu ra 3
Đầu vào 3

Hình 4: Prompting DIV-SE.

Sử dụng năm cách tiếp cận riêng biệt để giải quyết bài toán đã cho một cách chính xác. Nếu không có kết quả khớp chính xác, hãy chọn tùy chọn gần nhất.
Q: {Câu hỏi}
Sử dụng định dạng đầu ra sau:
Cách tiếp cận 1 < tên của cách tiếp cận > : < Chi tiết của Cách tiếp cận 1 >
Cách tiếp cận 2 < tên của cách tiếp cận > : < Chi tiết của Cách tiếp cận 2 >
Cách tiếp cận 3 < tên của cách tiếp cận > : < Chi tiết của Cách tiếp cận 3 >
Cách tiếp cận 4 < tên của cách tiếp cận > : < Chi tiết của Cách tiếp cận 4 >
Cách tiếp cận 5 < tên của cách tiếp cận > : < Chi tiết của Cách tiếp cận 5 >

Hình 5: Mẫu lời nhắc để trích xuất các cách tiếp cận đa dạng cho việc giải quyết vấn đề.

--- TRANG 13 ---
1 2 3 4 5
Kích thước Ensemble767880828486Độ chính xác trung bình (%)DIV-SE
CoT
IDIV-SE-5
GPT-3.5, ZS-CoT
1 2 3 4 5
Kích thước Ensemble8082848688
GPT-3.5, FS-CoT
1 2 3 4 5
Kích thước Ensemble94.094.595.095.596.0
GPT-4, ZS-CoT
1 2 3 4 5
Kích thước Ensemble95.295.495.695.896.096.2
GPT-4, FS-CoT

Hình 6: Độ chính xác trung bình cho các kích thước ensemble khác nhau trên GSM8K cho các thiết lập ZS-CoT và FS-CoT trên GPT-4 và GPT-3.5. Lưu ý rằng tất cả các biểu đồ đều được phóng to.

1 2 3 4 5
Kích thước Ensemble60.062.565.067.570.072.5Độ Chính xác Trung bình (%)DIV-SE
CoT
IDIV-SE-5
GPT-3.5, ZS-CoT
1 2 3 4 5
Kích thước Ensemble57.560.062.565.067.570.072.5
GPT-3.5, FS-CoT
1 2 3 4 5
Kích thước Ensemble707274767880
GPT-4, ZS-CoT
1 2 3 4 5
Kích thước Ensemble72747678808284
GPT-4, FS-CoT

Hình 7: Độ chính xác trung bình cho các kích thước ensemble khác nhau trên AQUA-RAT cho các thiết lập ZS-CoT và FS-CoT trên GPT-4 và GPT-3.5. Lưu ý rằng tất cả các biểu đồ đều được phóng to.

--- TRANG 14 ---
Lời nhắc Đầu vào
Giải quyết bài toán một cách chính xác bằng cách sử dụng {tên cách tiếp cận}.
Câu hỏi: John phát hiện rằng trung bình của 15 số là 40. Nếu 10 được thêm vào
mỗi số thì trung bình của các số
Lựa chọn Đáp án: (A) 50 (B) 45 (C) 65 (D) 78 (E) 64
A: Nếu 10 được thêm vào mỗi số, thì trung bình của các số cũng tăng lên 10. Vậy
trung bình mới sẽ là 50. Đáp án là (A).
Cách tiếp cận <sử dụng {tên cách tiếp cận}>:

Ví dụ Few-shot Được Bổ sung
Cách tiếp cận <sử dụng trực quan hóa>:
Để giải quyết bài toán này bằng trực quan hóa, hãy xem xét thông tin đã cho và tác động
của việc thêm 10 vào mỗi số đối với trung bình.
1. Trung bình của 15 số là 40. Điều này có nghĩa là tổng của 15 số này là 15
* 40 = 600.
2. Bây giờ, chúng ta thêm 10 vào mỗi số. Vì có 15 số, tổng số được thêm vào là 15 *
10 = 150.
3. Tổng mới của 15 số là 600 + 150 = 750.
4. Để tìm trung bình mới, chúng ta chia tổng mới cho số lượng giá trị, là
750 / 15 = 50. Vậy, trung bình của các số sau khi thêm 10 vào mỗi số là 50. Đáp
án là: (A) 50

Cách tiếp cận <sử dụng lý luận logic>:
Chúng ta biết rằng việc thêm cùng một hằng số vào mỗi số trong một tập hợp sẽ tăng trung bình
lên bằng hằng số đó. Trong trường hợp này, chúng ta đang thêm 10 vào mỗi số, vậy trung bình sẽ
tăng lên 10. Trung bình mới = 40 + 10 = 50 Đáp án là: (A) 50

Cách tiếp cận <sử dụng chiến lược loại trừ>:
Chúng ta biết rằng việc thêm 10 vào mỗi số sẽ tăng trung bình lên 10. Vậy, chúng ta đang tìm
một lựa chọn đáp án cao hơn 10 so với trung bình ban đầu là 40.
(A) 50 cao hơn 10 so với 40.
(B) 45 chỉ cao hơn 5 so với 40.
(C) 65 cao hơn 25 so với 40.
(D) 78 cao hơn 38 so với 40.
(E) 64 cao hơn 24 so với 40.
Chỉ có (A) 50 cao hơn chính xác 10 so với trung bình ban đầu là 40, vậy đó là đáp án đúng.
Các lựa chọn khác có thể được loại trừ vì chúng không cao hơn 10 so với trung bình ban đầu.

Cách tiếp cận <sử dụng đại số>:
Hãy ký hiệu tổng của 15 số là S. Vì trung bình của 15 số là 40,
chúng ta có thể viết phương trình: S / 15 = 40 S = 40 * 15 = 600 Bây giờ, chúng ta thêm 10 vào mỗi
số, vậy tổng mới là S + 15 * 10 = 600 + 150 = 750. Trung bình mới là: Trung bình
mới = 750 / 15 = 50 Đáp án là: (A) 50

Hình 8: Minh họa Bổ sung các ví dụ few-shot - Thuật toán 1, Bước 4

--- TRANG 15 ---
Tôi đang chơi với một bộ khối mà tôi cần sắp xếp các khối thành các chồng.
[PHÁT BIỂU]
Là điều kiện ban đầu tôi có rằng, khối cam là clear, tay trống, khối xanh lam
ở trên khối đỏ, khối cam ở trên khối xanh lam và khối đỏ ở trên bàn. Mục tiêu của tôi là có
khối đỏ ở trên khối xanh lam và khối cam ở trên khối đỏ.
Đây là các hành động tôi có thể làm:
Nhặt một khối từ bàn
Tháo một khối từ trên một khối khác
Đặt một khối xuống bàn
Chồng một khối lên trên một khối khác
Tôi có các hạn chế sau đối với hành động của mình:
Tôi chỉ có thể nhặt hoặc tháo một khối tại một thời điểm.
Tôi chỉ có thể nhặt hoặc tháo một khối nếu tay tôi trống.
Tôi chỉ có thể nhặt một khối nếu khối đó ở trên bàn và khối đó là clear. Một khối là
clear nếu khối đó không có khối nào khác ở trên nó và nếu khối đó không được nhặt lên.
Tôi chỉ có thể tháo một khối từ trên một khối khác nếu khối tôi đang tháo thực sự
ở trên khối kia.
Tôi chỉ có thể tháo một khối từ trên một khối khác nếu khối tôi đang tháo là clear.
Một khi tôi nhặt hoặc tháo một khối, tôi đang cầm khối đó.
Tôi chỉ có thể đặt xuống một khối mà tôi đang cầm.
Tôi chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu tôi đang cầm
khối được chồng.
Tôi chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu khối mà tôi
đang chồng khối lên là clear.
Một khi tôi đặt xuống hoặc chồng một khối, tay tôi trở nên trống.
Một khi bạn chồng một khối lên trên một khối thứ hai, khối thứ hai không còn clear nữa.
Kế hoạch để đạt mục tiêu của tôi là gì? Chỉ đưa ra các hành động trong kế hoạch.
[KẾ HOẠCH]

Hình 9: Lời nhắc Zero-shot được sử dụng trong lần chạy baseline của Planning - Blocksworld Domain

--- TRANG 16 ---
Bạn đang chơi với một bộ khối mà bạn cần sắp xếp các khối thành các chồng.
Kế hoạch để đạt mục tiêu là gì?
<Trạng thái Ban đầu>: Là điều kiện ban đầu bạn có rằng, khối cam là clear,
tay trống, khối xanh lam ở trên khối đỏ, khối cam ở trên
khối xanh lam và khối đỏ ở trên bàn.
<Trạng thái Mục tiêu>: Mục tiêu của bạn là có khối đỏ ở trên khối xanh lam và
khối cam ở trên khối đỏ.
Đây là các hành động bạn có thể làm:
-Nhặt một khối từ bàn
-Tháo một khối từ trên một khối khác
-Đặt một khối xuống bàn
-Chồng một khối lên trên một khối khác
Quy tắc:
1. Bạn chỉ có thể nhặt hoặc tháo một khối tại một thời điểm.
2. Bạn chỉ có thể nhặt hoặc tháo một khối nếu tay bạn trống.
3. Bạn chỉ có thể nhặt một khối nếu khối đó ở trên bàn và khối đó là clear. Một khối
là clear nếu khối đó không có khối nào khác ở trên nó và nếu khối đó không được nhặt lên.
4. Bạn chỉ có thể tháo một khối từ trên một khối khác nếu khối bạn đang
tháo thực sự ở trên khối kia.
5. Bạn chỉ có thể tháo một khối từ trên một khối khác nếu khối bạn đang
tháo là clear.
6. Một khi bạn nhặt hoặc tháo một khối, bạn đang cầm khối đó.
7. Bạn chỉ có thể đặt xuống một khối mà bạn đang cầm.
8. Bạn chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu bạn đang cầm
khối được chồng.
9. Bạn chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu khối mà
bạn đang chồng khối lên là clear.
10. Một khi bạn đặt xuống hoặc chồng một khối, tay bạn trở nên trống.
11. Một khi bạn chồng một khối lên trên một khối thứ hai, khối thứ hai không còn clear nữa.
Sử dụng một finite state machine và một thuật toán tìm kiếm, kế hoạch để đạt
mục tiêu là gì? Bạn có thể mô hình hóa mỗi trạng thái của cấu hình khối trên bàn và tay như
một trạng thái. Đối với mỗi bước hành động, kiểm tra rằng bước đó tuân theo các quy tắc và bước đó đưa
bạn đến gần hơn với mục tiêu. Sau mỗi hành động, mô tả trạng thái của bàn và tay. Luôn
kiểm tra xem trạng thái cuối cùng có thỏa mãn mục tiêu được đề cập không. <Trạng thái Mục tiêu>: Mục tiêu của bạn là có
khối đỏ ở trên khối xanh lam và khối cam ở trên khối đỏ.
[KẾ HOẠCH]

Hình 10: Lời nhắc Zero-shot sử dụng Cách tiếp cận Finite State Machine để giải quyết Bài toán Planning - Blocksworld Domain.

--- TRANG 17 ---
Bạn đang chơi với một bộ khối mà bạn cần sắp xếp các khối thành các chồng.
<Trạng thái Ban đầu>: Là điều kiện ban đầu bạn có rằng, khối cam là clear,
tay trống, khối xanh lam ở trên khối đỏ, khối cam ở trên
khối xanh lam và khối đỏ ở trên bàn.
<Trạng thái Mục tiêu>: Mục tiêu của bạn là có khối đỏ ở trên khối xanh lam
và khối cam ở trên khối đỏ.
Đây là các hành động bạn có thể làm:
-Nhặt một khối từ bàn
-Tháo một khối từ trên một khối khác
-Đặt một khối xuống bàn
-Chồng một khối lên trên một khối khác
Quy tắc:
1. Bạn chỉ có thể nhặt hoặc tháo một khối tại một thời điểm.
2. Bạn chỉ có thể nhặt hoặc tháo một khối nếu tay bạn trống.
3. Bạn chỉ có thể nhặt một khối nếu khối đó ở trên bàn và khối đó là clear. Một khối
là clear nếu khối đó không có khối nào khác ở trên nó và nếu khối đó không được nhặt lên.
4. Bạn chỉ có thể tháo một khối từ trên một khối khác nếu khối bạn đang
tháo thực sự ở trên khối kia.
5. Bạn chỉ có thể tháo một khối từ trên một khối khác nếu khối bạn đang
tháo là clear.
6. Một khi bạn nhặt hoặc tháo một khối, bạn đang cầm khối đó.
7. Bạn chỉ có thể đặt xuống một khối mà bạn đang cầm.
8. Bạn chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu bạn đang cầm
khối được chồng.
9. Bạn chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu khối mà
bạn đang chồng khối lên là clear.
10. Một khi bạn đặt xuống hoặc chồng một khối, tay bạn trở nên trống.
11. Một khi bạn chồng một khối lên trên một khối thứ hai, khối thứ hai không còn clear nữa.
Suy nghĩ như Alan Turing bắt đầu từ <Trạng thái Ban đầu> xây dựng một kế hoạch để đến
<Trạng thái Mục tiêu>. Đối với mỗi bước hành động, kiểm tra cẩn thận rằng bước đó tuân theo các quy tắc.
<Trạng thái Mục tiêu>: Mục tiêu của bạn là có khối đỏ ở trên khối xanh lam và
khối cam ở trên khối đỏ.
định dạng đầu ra cho mỗi bước cho đến khi bạn đạt trạng thái mục tiêu:
<trạng thái>: <trạng thái>
<hành động>: <hành động sẽ được thực hiện trong bước này>
<đánh giá hành động>: <chúng ta có đang xây dựng chồng từ dưới lên, kiểm tra cẩn thận>

Hình 11: Lời nhắc Zero-shot được sử dụng với persona của Alan Turing và cách tiếp cận Action Rationale để giải quyết Bài toán Planning - Blocksworld Domain.

--- TRANG 18 ---
Bạn đang chơi với một bộ khối mà bạn cần sắp xếp các khối thành các chồng.
<Trạng thái Ban đầu>: Là điều kiện ban đầu bạn có rằng, khối cam là clear,
tay trống, khối xanh lam ở trên khối đỏ, khối cam ở trên
khối xanh lam và khối đỏ ở trên bàn.
<Trạng thái Mục tiêu>: Mục tiêu của bạn là có khối đỏ ở trên khối xanh lam và
khối cam ở trên khối đỏ.
Đây là các hành động bạn có thể làm:
-Nhặt một khối từ bàn
-Tháo một khối từ trên một khối khác
-Đặt một khối xuống bàn
-Chồng một khối lên trên một khối khác
Quy tắc:
1. Bạn chỉ có thể nhặt hoặc tháo một khối tại một thời điểm.
2. Bạn chỉ có thể nhặt hoặc tháo một khối nếu tay bạn trống.
3. Bạn chỉ có thể nhặt một khối nếu khối đó ở trên bàn và khối đó là clear. Một khối
là clear nếu khối đó không có khối nào khác ở trên nó và nếu khối đó không được nhặt lên.
4. Bạn chỉ có thể tháo một khối từ trên một khối khác nếu khối bạn đang
tháo thực sự ở trên khối kia.
5. Bạn chỉ có thể tháo một khối từ trên một khối khác nếu khối bạn đang
tháo là clear.
6. Một khi bạn nhặt hoặc tháo một khối, bạn đang cầm khối đó.
7. Bạn chỉ có thể đặt xuống một khối mà bạn đang cầm.
8. Bạn chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu bạn đang cầm
khối được chồng.
9. Bạn chỉ có thể chồng một khối lên trên chứ không phải dưới một khối khác nếu khối mà
bạn đang chồng khối lên là clear.
10. Một khi bạn đặt xuống hoặc chồng một khối, tay bạn trở nên trống.
11. Một khi bạn chồng một khối lên trên một khối thứ hai, khối thứ hai không còn clear nữa.
Suy nghĩ như Alan Turing, bắt đầu từ <Trạng thái Ban đầu> xây dựng một kế hoạch để đến
<Trạng thái Mục tiêu>. Đối với mỗi bước hành động, kiểm tra cẩn thận rằng bước đó tuân theo
các quy tắc. Chia nhiệm vụ thành các bước nhỏ hơn, bắt đầu với việc đặt khối dưới cùng trước,
tiếp theo là các khối giữa, và cuối cùng là khối trên cùng. <Trạng thái Mục tiêu>: Mục tiêu của bạn là có
khối đỏ ở trên khối xanh lam và khối cam ở trên khối đỏ.
[KẾ HOẠCH]

Hình 12: Lời nhắc Zero-shot được sử dụng trong Alan Turing + Progressive Block Placement Approach để giải quyết Bài toán Planning - Blocksworld Domain.

--- TRANG 19 ---
Là một giáo sư toán học, bạn sẽ giải quyết bài toán đã cho một cách chính xác '<sử dụng đại số>'. Nếu
không có kết quả khớp chính xác, hãy chọn tùy chọn gần nhất.
Câu hỏi: John phát hiện rằng trung bình của 15 số là 40. Nếu 10 được thêm vào mỗi số
thì trung bình của các số
Lựa chọn Đáp án: (A) 50 (B) 45 (C) 65 (D) 78 (E) 64
Cách tiếp cận: <sử dụng đại số>
Hãy ký hiệu tổng của 15 số là S. Vì trung bình của 15 số là 40,
chúng ta có thể viết phương trình: S / 15 = 40 S = 40 * 15 = 600 Bây giờ, chúng ta thêm 10 vào mỗi
số, vậy tổng mới là S + 15 * 10 = 600 + 150 = 750. Trung bình mới là: Trung bình
mới = 750 / 15 = 50
Đáp án là: (A) 50
Câu hỏi: Nếu a / b = 3/4 và 8a + 5b = 22, thì tìm giá trị của a.
Lựa chọn Đáp án: (A) 1/2 (B) 3/2 (C) 5/2 (D) 4/2 (E) 7/2
Cách tiếp cận: <sử dụng đại số>
Để giải quyết bài toán đã cho, chúng ta có thể sử dụng phép thế. Vì a / b = 3/4, chúng ta có thể viết điều đó như:
a = 3b/4 Bây giờ, thế biểu thức này cho a vào phương trình thứ hai: 8(3b/4) +
5b = 22 Đơn giản hóa và giải cho b: 6b + 5b = 22 11b = 22 b = 2 Bây giờ chúng ta có giá trị
của b, chúng ta có thể tìm giá trị của a: a = 3b/4 a = 3(2)/4 a = 6/4 a = 3/2 Vậy,
giá trị của a là (B) 3/2.
Đáp án là: (B) 3/2
Câu hỏi: Một người đang di chuyển với tốc độ 20 km/h và đến đích trong 2.5 giờ thì tìm
khoảng cách?
Lựa chọn Đáp án: (a) 53 km (b) 55 km (c) 52 km (d) 60 km (e) 50 km
Cách tiếp cận: <sử dụng đại số>
Sử dụng công thức khoảng cách = tốc độ × thời gian, chúng ta có thể tính khoảng cách như sau:
Khoảng cách = 20 km/h × 2.5 h = 50 km Vậy, lựa chọn đáp án gần nhất là (e) 50 km.
Đáp án là: (e) 50 km
Câu hỏi: Cần bao nhiêu lần gõ phím để gõ các số từ 1 đến 500?
Lựa chọn Đáp án: (a) 1156 (b) 1392 (c) 1480 (d) 1562 (e) 1788
Cách tiếp cận: <sử dụng đại số>
Hãy chia số lần gõ phím cần thiết thành các nhóm dựa trên số chữ số: Số một chữ số (1-9): Có 9 số một chữ số, vậy chúng ta cần 9 lần gõ phím.
Số hai chữ số (10-99): Có 90 số hai chữ số, mỗi số cần 2 lần gõ phím, vậy chúng ta cần 90 * 2 = 180 lần gõ phím.
Số ba chữ số (100-500): Có 401 số ba chữ số (500 - 100 + 1), mỗi số cần 3 lần gõ phím, vậy chúng ta cần 401 * 3 = 1203 lần gõ phím. Bây giờ hãy cộng số lần gõ phím từ tất cả các nhóm: 9 + 180 + 1203 = 1392. Do đó, tùy chọn gần nhất là (b) 1392.
Đáp án là: (b) 1392

Hình 13: Lời nhắc AQuA few-shot-CoT sử dụng cách tiếp cận đại số.

--- TRANG 20 ---
Suy nghĩ như Alan Turing và giải quyết bài toán. Nếu không có kết quả khớp chính xác, hãy chọn tùy chọn
gần nhất.
Câu hỏi: John phát hiện rằng trung bình của 15 số là 40. Nếu 10 được thêm vào
mỗi số thì trung bình của các số
Lựa chọn Đáp án: (A) 50 (B) 45 (C) 65 (D) 78 (E) 64
Cách tiếp cận: <suy nghĩ như Alan Turing>
Hãy phân tích bài toán từng bước: Trung bình của 15 số là 40. Vậy, tổng của 15 số này là 15 * 40 = 600. 10 được thêm vào mỗi số. Bây giờ, vì có 15 số, tổng số tăng lên sẽ là 15 * 10 = 150. Tổng mới của 15 số này sẽ là 600 + 150 = 750. Để tìm trung bình mới, chia tổng mới cho tổng số giá trị, là 15. Trung bình mới = 750 / 15 = 50. Do đó, tùy chọn gần nhất với trung bình mới là (A) 50.
Đáp án là: (A) 50
Câu hỏi: Nếu a / b = 3/4 và 8a + 5b = 22, thì tìm giá trị của a.
Lựa chọn Đáp án: (A) 1/2 (B) 3/2 (C) 5/2 (D) 4/2 (E) 7/2
Cách tiếp cận: <suy nghĩ như Alan Turing>
Hãy phân tích thông tin đã cho và giải quyết bài toán từng bước. Chúng ta được cho rằng a / b = 3/4, có thể được viết là a = (3/4) * b. Chúng ta cũng được cho phương trình 8a + 5b = 22. Thế giá trị của a từ bước 1 vào phương trình từ bước 2: 8 * (3/4) * b + 5b = 22 Đơn giản hóa phương trình: 6b + 5b = 22 Kết hợp các số hạng và giải cho b: 11b = 22 b = 2 Bây giờ chúng ta có giá trị của b, hãy tìm giá trị của a bằng phương trình từ bước 1: a = (3/4) * b a = (3/4) * 2 Đơn giản hóa để tìm giá trị của a: a = 3/2 Vậy, giá trị của a là 3/2, tương ứng với lựa chọn đáp án (B).
Đáp án là: (B)
Câu hỏi: Một người đang di chuyển với tốc độ 20 km/h và đến đích trong 2.5 giờ thì tìm
khoảng cách?
Lựa chọn Đáp án: (a) 53 km (b) 55 km (c) 52 km (d) 60 km (e) 50 km
Cách tiếp cận: <suy nghĩ như Alan Turing>
Để tìm khoảng cách, chúng ta có thể sử dụng công thức: khoảng cách = tốc độ × thời gian. Trong trường hợp này, tốc độ là 20 km/h và thời gian là 2.5 giờ. Khoảng cách = 20 km/h × 2.5 giờ = 50 km Vậy, tùy chọn gần nhất là (e) 50 km.
Đáp án là: (e) 50 km
Câu hỏi: Cần bao nhiêu lần gõ phím để gõ các số từ 1 đến 500?
Lựa chọn Đáp án: (a) 1156 (b) 1392 (c) 1480 (d) 1562 (e) 1788
Cách tiếp cận: <suy nghĩ như Alan Turing>
Để xác định số lần gõ phím cần thiết để gõ các số từ 1 đến 500, hãy chia theo số chữ số: Số một chữ số (1-9): Có 9 số một chữ số, mỗi số cần 1 lần gõ phím. Tổng cộng: 9 lần gõ phím. Số hai chữ số (10-99): Có 90 số hai chữ số, mỗi số cần 2 lần gõ phím. Tổng cộng: 90 * 2 = 180 lần gõ phím. Số ba chữ số (100-500): Có 401 số ba chữ số, mỗi số cần 3 lần gõ phím. Tổng cộng: 401 * 3 = 1203 lần gõ phím. Cộng số lần gõ phím cho mỗi nhóm, chúng ta có: 9 + 180 + 1203 = 1392 lần gõ phím. Vậy, tùy chọn gần nhất là (b) 1392
Đáp án là: (b) 1392

Hình 14: Lời nhắc AQuA few-shot-CoT với persona của Alan Turing.

--- TRANG 21 ---
Suy nghĩ như Dr. Patel, nhà toán học chuyên về đại số và giải quyết bài toán.
Nếu không có kết quả khớp chính xác, hãy chọn tùy chọn gần nhất.
Câu hỏi: John phát hiện rằng trung bình của 15 số là 40. Nếu 10 được thêm vào
mỗi số thì trung bình của các số
Lựa chọn Đáp án: (A) 50 (B) 45 (C) 65 (D) 78 (E) 64
Cách tiếp cận: <suy nghĩ như Dr. Patel>
Hãy xem xét bài toán từng bước. John phát hiện rằng trung bình của 15 số là 40.
Để tìm tổng của 15 số này, chúng ta có thể sử dụng công thức: Tổng = Trung bình × Số phần tử Sum = 40 × 15 Tổng = 600 Bây giờ, 10 được thêm vào mỗi trong 15 số. Vậy, chúng ta có thể tìm tổng mới bằng cách thêm 10 × 15 = 150 vào tổng ban đầu: Tổng Mới = 600 + 150 Tổng Mới = 750 Để tìm trung bình mới (mean), chúng ta có thể sử dụng công thức: Trung bình Mới = Tổng Mới ÷ Số phần tử Trung bình Mới = 750 ÷ 15 Trung bình Mới = 50
Đáp án là: (A) 50
Câu hỏi: Nếu a / b = 3/4 và 8a + 5b = 22, thì tìm giá trị của a.
Lựa chọn Đáp án: (A) 1/2 (B) 3/2 (C) 5/2 (D) 4/2 (E) 7/2
Cách tiếp cận: <suy nghĩ như Dr. Patel>
Để giải quyết bài toán này, đầu tiên chúng ta có thể viết lại phương trình a / b = 3/4 thành a = (3/4)b. Bây giờ chúng ta có thể thế biểu thức này cho a vào phương trình thứ hai: 8a + 5b = 22. Thế a bằng (3/4)b: 8(3/4)b + 5b = 22 Đơn giản hóa phương trình: 6b + 5b = 22 Kết hợp các số hạng: 11b = 22 Bây giờ, chia cả hai vế cho 11: b = 2 Bây giờ chúng ta có giá trị của b, chúng ta có thể tìm giá trị của a bằng phương trình a = (3/4)b: a = (3/4)(2) a = 3/2 Giá trị của a là 3/2. Vậy, đáp án đúng là (B) 3/2.
Đáp án là: (B) 3/2
Câu hỏi: Một người đang di chuyển với tốc độ 20 km/h và đến đích trong 2.5 giờ thì tìm
khoảng cách?
Lựa chọn Đáp án: (a) 53 km (b) 55 km (c) 52 km (d) 60 km (e) 50 km
Cách tiếp cận: <suy nghĩ như Dr. Patel>
Để tìm khoảng cách, chúng ta có thể sử dụng công thức: Khoảng cách = Tốc độ × Thời gian Ở đây, tốc độ được cho là 20 km/h và thời gian là 2.5 giờ. Vậy, chúng ta có thể đưa những giá trị này vào công thức: Khoảng cách = 20 km/h × 2.5 giờ Khoảng cách = 50 km
Đáp án là: (e) 50 km
Câu hỏi: Cần bao nhiêu lần gõ phím để gõ các số từ 1 đến 500?
Lựa chọn Đáp án: (a) 1156 (b) 1392 (c) 1480 (d) 1562 (e) 1788
Cách tiếp cận: <suy nghĩ như Dr. Patel>
Để xác định số lần gõ phím cần thiết để gõ các số từ 1 đến 500, hãy chia bài toán bằng cách phân tích số chữ số trong mỗi dải: Đối với số 1-9, có 9 số với 1 chữ số mỗi số, cần 9 lần gõ phím. Đối với số 10-99, có 90 số với 2 chữ số mỗi số, cần 90 * 2 = 180 lần gõ phím. Đối với số 100-499, có 400 số với 3 chữ số mỗi số, cần 400 * 3 = 1200 lần gõ phím. Đối với số 500, nó có 3 chữ số, cần 3 lần gõ phím. Bây giờ, chúng ta có thể tổng hợp số lần gõ phím cho mỗi dải: 9 (cho 1-9) + 180 (cho 10-99) + 1200 (cho 100-499) + 3 (cho 500) = 1392 lần gõ phím.
Đáp án là: (b) 1392

Hình 15: Lời nhắc AQuA few-shot-CoT với persona của Dr. Patel: Một nhà toán học nổi tiếng

--- TRANG 22 ---
Là một giáo sư toán học, sử dụng 3 cách tiếp cận riêng biệt và không sử dụng thuật toán có sẵn, viết chương trình python để tô màu đồ thị sau, được mô tả như một tập các cạnh, sao cho không có hai đỉnh trên cùng một cạnh có chung màu.
Bạn có thể sử dụng tối đa 3 màu.
Đỉnh 0 được kết nối với đỉnh 7.
Đỉnh 0 được kết nối với đỉnh 8.
Đỉnh 0 được kết nối với đỉnh 9.
Đỉnh 0 được kết nối với đỉnh 11.
Đỉnh 1 được kết nối với đỉnh 13.
Đỉnh 2 được kết nối với đỉnh 9.
Đỉnh 3 được kết nối với đỉnh 8.
Đỉnh 3 được kết nối với đỉnh 11.
Đỉnh 3 được kết nối với đỉnh 12.
Đỉnh 4 được kết nối với đỉnh 12.
Đỉnh 5 được kết nối với đỉnh 11.
Đỉnh 6 được kết nối với đỉnh 9.
Đỉnh 7 được kết nối với đỉnh 10.
Đỉnh 7 được kết nối với đỉnh 13.
Đỉnh 9 được kết nối với đỉnh 11.
Đỉnh 10 được kết nối với đỉnh 13.
Đỉnh 11 được kết nối với đỉnh 13.
Có tổng cộng 14 đỉnh. Vui lòng gán nhãn cho mọi đỉnh, ngay cả khi nó bị ngắt kết nối khỏi
phần còn lại của đồ thị. Vui lòng cung cấp màu của mỗi đỉnh. Không bỏ qua bất kỳ đỉnh nào. Mỗi
màu phải được cung cấp trên một dòng mới trong phản hồi và nên được định dạng như "SỐ ĐỈNH:
PHÂN CÔNG MÀU ĐỈNH (Color n)".
Định dạng đầu ra:
Cách tiếp cận 1 <tên của cách tiếp cận>: <chương trình python từ đầu để tô màu đồ thị đã cho một cách chính xác>
Cách tiếp cận 2 <tên của cách tiếp cận>: <chương trình python từ đầu để tô màu đồ thị đã cho một cách chính xác>
Cách tiếp cận 3 <tên của cách tiếp cận>: <chương trình python từ đầu để tô màu đồ thị đã cho một cách chính xác>

Hình 16: Lời nhắc Graph Coloring sử dụng cách tiếp cận lập trình trong thiết lập zero-shot.
