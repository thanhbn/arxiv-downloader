# 2309.01552.pdf
# Đã chuyển đổi từ PDF sang TXT
# Đường dẫn nguồn: /home/admin88/arxiv-downloader/automl-nas/2309.01552.pdf
# Kích thước tệp: 2109459 bytes

===============================================
NỘI DUNG TỆP PDF
===============================================


--- TRANG 1 ---
OutRank: Tăng tốc Tìm kiếm Mô hình dựa trên AutoML cho Tập dữ liệu Thưa thớt Lớn
với Xếp hạng Đặc trưng nhận biết Tính năng
BLAŽ ŠKRLJ, Outbrain inc., US
BLAŽ MRAMOR, Outbrain inc., US
Thiết kế của các hệ thống khuyến nghị hiện đại dựa vào việc hiểu phần nào của không gian đặc trưng có liên quan để giải quyết một
nhiệm vụ khuyến nghị nhất định. Tuy nhiên, các tập dữ liệu trong thế giới thực trong lĩnh vực này thường được đặc trưng bởi kích thước lớn, độ thưa thớt và
tiếng ồn, làm cho việc xác định các tín hiệu có ý nghĩa trở nên thách thức. Xếp hạng đặc trưng đại diện cho một nhánh hiệu quả của các thuật toán có thể giúp
giải quyết những thách thức này bằng cách xác định các đặc trưng thông tin nhất và tạo điều kiện cho việc tìm kiếm tự động cho các mô hình nhỏ gọn hơn và
hoạt động tốt hơn (AutoML). Chúng tôi giới thiệu OutRank, một hệ thống cho việc xếp hạng đặc trưng đa năng và phát hiện bất thường liên quan đến chất lượng dữ liệu. OutRank được xây dựng với dữ liệu phân loại trong tâm trí, sử dụng một biến thể của thông tin tương hỗ được chuẩn hóa đối với
tiếng ồn được tạo ra bởi các đặc trưng có cùng tính năng. Chúng tôi mở rộng thêm độ đo tương tự bằng cách kết hợp thông tin về
sự tương tự đặc trưng và mức độ liên quan kết hợp. Tính khả thi của phương pháp được đề xuất được chứng minh bằng việc tăng tốc hệ thống AutoML tiên tiến
trên một tập dữ liệu tổng hợp mà không mất hiệu suất. Hơn nữa, chúng tôi đã xem xét một tập dữ liệu dự đoán tỷ lệ click-through trong đời thực nơi nó vượt trội hơn các baseline mạnh như phương pháp dựa trên random forest. Phương pháp được đề xuất cho phép khám phá
lên đến 300% không gian đặc trưng lớn hơn so với các phương pháp chỉ dùng AutoML, cho phép tìm kiếm nhanh hơn cho các mô hình tốt hơn trên phần cứng thông thường.
Từ khóa và Cụm từ Bổ sung: Xếp hạng đặc trưng, tập dữ liệu khổng lồ, AutoML, hệ thống khuyến nghị
Định dạng Tham khảo ACM:
Blaž Škrlj và Blaž Mramor. 2023. OutRank: Tăng tốc Tìm kiếm Mô hình dựa trên AutoML cho Tập dữ liệu Thưa thớt Lớn với Xếp hạng
Đặc trưng nhận biết Tính năng. ACM/IMS J. Data Sci. 37, 4, Bài viết 111 (Tháng 8 2023), 8 trang. https://doi.org/XXXXXXX.XXXXXXX
1 GIỚI THIỆU VÀ TỔNG QUAN VẤN ĐỀ
Thiết kế của các hệ thống khuyến nghị hiện đại dựa vào việc tích hợp các loại ngữ cảnh khác nhau vào các không gian đặc trưng
phức tạp cho phép các khuyến nghị chất lượng cao [1]. Các tập dữ liệu trong thế giới thực trong lĩnh vực này thường được đặc trưng
bởi kích thước lớn, độ thưa thớt và tiếng ồn, làm cho việc xác định các tín hiệu có ý nghĩa một cách hiệu quả trở nên thách thức. Các mô hình
là một phần của các hệ thống khuyến nghị trong đời thực, mặt khác, cần phải nhẹ và hiệu quả do quy mô mà
chúng được triển khai [13]. Vì mục đích này, các quy trình thiết kế/mô hình máy học đương đại được sử dụng và
bao gồm nhiều bước, bao gồm (tiền) lựa chọn đặc trưng, tìm kiếm/tối ưu hóa mô hình và tinh chỉnh [12]. Một loại thuật toán nhẹ thường được xem xét
sử dụng trong các hệ thống khuyến nghị là các mô hình dựa trên máy nhân tử hóa [10].
Mặc dù đa năng trong sản xuất, những phương pháp này đòi hỏi các thủ tục tốn kém về mặt tính toán để tìm các đặc trưng đơn lẻ hoặc kết hợp tối ưu
tạo nên mô hình cuối cùng. Các cấu hình mô hình nhỏ gọn và hoạt động tốt như vậy có thể
được tìm thấy bằng cách sử dụng các hệ thống tìm kiếm tự động [4,17] (AutoML). Những hệ thống này có khả năng khám phá cả
Địa chỉ tác giả: Blaž Škrlj, bskrlj@outbrain.com, Outbrain inc., New York, New York, US; Blaž Mramor, bmramor@outbrain.com, Outbrain inc., New
York, New York, US.
Được phép thực hiện các bản sao kỹ thuật số hoặc bản cứng của toàn bộ hoặc một phần công trình này cho mục đích sử dụng cá nhân hoặc lớp học mà không mất phí với điều kiện các bản sao không
được thực hiện hoặc phân phối vì lợi nhuận hoặc lợi thế thương mại và các bản sao mang thông báo này và trích dẫn đầy đủ trên trang đầu tiên. Bản quyền cho các thành phần
của công trình này thuộc sở hữu của những người khác ngoài ACM phải được tôn trọng. Tóm tắt có ghi nhận được phép. Để sao chép nếu không, hoặc tái xuất bản, để đăng trên máy chủ hoặc để
phân phối lại danh sách, yêu cầu sự cho phép cụ thể trước và/hoặc một khoản phí. Yêu cầu quyền từ permissions@acm.org.
©2023 Hiệp hội Máy tính.
Bản thảo được gửi đến ACM
Bản thảo được gửi đến ACM 1arXiv:2309.01552v1  [cs.IR]  4 Sep 2023

--- TRANG 2 ---
2 Blaž Škrlj và Blaž Mramor
không gian của các thuật toán và cấu hình của chúng và đã trở nên phổ biến trong thiết kế các máy nhân tử hóa hiệu suất
[11]. Nhược điểm liên quan đến việc xem xét các hệ thống AutoML là độ phức tạp tính toán của chúng - tìm kiếm
cho các cấu hình đặc trưng tối ưu tốn thời gian và thường đòi hỏi phần cứng chuyên dụng (hoặc cụm máy).
Quá trình này có thể, ở một mức độ nào đó, được bổ sung bằng một nhánh dễ tiếp cận hơn về mặt tính toán của các thuật toán xếp hạng đặc trưng
[14–16].Xếp hạng đặc trưng là một kỹ thuật có thể giúp giải quyết những thách thức này bằng cách xác định các đặc trưng thông tin nhất
và do đó tăng tốc AutoML. Những thuật toán này đã tìm thấy việc sử dụng của chúng trên nhiều lĩnh vực,
trải dài từ y sinh học [6] đến các hệ thống khuyến nghị [16]. Chúng cho phép ước tính nhanh mức độ liên quan của đặc trưng
(và các tương tác của chúng), và có thể được coi như một dạng thông tin tiên nghiệm cho việc tìm kiếm mô hình dựa trên AutoML.
Phần còn lại của bài báo này mô tả các thuộc tính chính của OutRank, một hệ thống cho việc xếp hạng đặc trưng đa năng và phát hiện bất thường liên quan đến chất lượng dữ liệu. OutRank sử dụng một biến thể của thông tin tương hỗ được chuẩn hóa đối với
tiếng ồn được tạo ra bởi các đặc trưng có cùng tính năng, mà trong các trường hợp sử dụng của chúng tôi vượt trội hơn các baseline mạnh khác, như
xếp hạng dựa trên random forest. Hơn nữa, phương pháp được trình bày có thể mở rộng đến các tập dữ liệu bao gồm hàng trăm triệu
trường hợp sử dụng phần cứng thông thường. Được bổ sung bởi ước tính tính năng xác suất và
lập hồ sơ phạm vi, OutRank cho phép tiền xử lý dữ liệu hiệu quả, lập hồ sơ các đặc trưng mới và cắt tỉa không gian đặc trưng đầu vào để tăng tốc tìm kiếm mô hình dựa trên AutoML. Hơn nữa, chúng tôi trình bày heuristic 3MR (Độ dư thừa tối thiểu, mức độ liên quan tối đa, mối quan hệ tối đa) cho phép tính toán các ước tính nhanh không cận thị về tầm quan trọng đặc trưng – tiện ích của nó
được chứng minh trên dữ liệu tổng hợp và thực tế, nơi nó cho phép tăng tốc đáng kể của một hệ thống AutoML hiện có
(TPOT [7]) và được chỉ ra cung cấp xếp hạng tốt hơn so với các baseline mạnh như xếp hạng dựa trên Random forest [2] trên một tập dữ liệu nội bộ liên quan đến dự đoán tỷ lệ chuyển đổi.
2 TỔNG QUAN HỆ THỐNG
Phần còn lại của phần này được cấu trúc như sau. Đầu tiên chúng tôi thảo luận về bối cảnh/tổng quan chung của OutRank. Tiếp theo,
chúng tôi thảo luận về tác động của tính năng đối với xếp hạng và cách nó được khắc phục. Cuối cùng, phần này được theo sau bởi một tổng quan
về cách các kết hợp đặc trưng và sự dư thừa của chúng được xem xét trong xếp hạng, dẫn đến thuật toán 3MR. Chúng tôi tiếp theo
thảo luận về kiến trúc/tổng quan của hệ thống. OutRank được xây dựng để tạo điều kiện cho việc khám phá các tập dữ liệu rất lớn (lên đến
một tỷ trường hợp trong một số trường hợp) mà không có bất kỳ phần cứng chuyên biệt nào. Cách tiếp cận thân thiện với tài nguyên duy nhất để duyệt
và phân tích các tập dữ liệu như vậy là bằng cách áp dụng phân lô – tập dữ liệu được truyền vào động cơ (OutRank). Một khi đủ
trường hợp được lưu trữ tạm thời, việc xây dựng và xếp hạng đặc trưng diễn ra. Bước này chịu trách nhiệm tạo ra
các biến đổi liên quan của dữ liệu (tức thời), dẫn đến tiết kiệm không gian lớn (so với việc tính toán trước tất cả các biến đổi đặc trưng
liên quan), và tiến hành xếp hạng. OutRank được xây dựng để mở rộng đến các tập dữ liệu lớn (hàng chục triệu
danh sách) và hỗ trợ các heuristic xếp hạng khác nhau (được thảo luận trong các phần sau). Một tổng quan về kiến trúc của OutRank
được hiển thị trong Hình 1. Bài báo này tập trung vào các đóng góp mới liên quan đến xếp hạng đặc trưng cho các tập dữ liệu phân loại thưa thớt (một cuộc thảo luận chi tiết về kiến trúc của OutRank nằm ngoài phạm vi của bài báo này). Tuy nhiên, tổng quan được mô tả
nên cung cấp cho người đọc bối cảnh mà việc xếp hạng như vậy được xem xét/sử dụng trong thực tế.
Chúng tôi tiếp theo thảo luận về việc khắc phục tác động của các đặc trưng tính năng cao. Một vấn đề chung khi xử lý các tập dữ liệu
được sử dụng để xây dựng các hệ thống khuyến nghị liên quan đến tính năng của đặc trưng – không gian đầu vào
bao gồm chủ yếu các đặc trưng phân loại có thể chịu số lượng giá trị duy nhất (có thể) khác nhau. Nhiều giá trị duy nhất
cho mỗi đặc trưng có thể gây vấn đề, vì chúng giảm phạm vi cho mỗi giá trị (trường hợp với một giá trị cụ thể)
và có thể khó hơn để lập hồ sơ/đánh giá khi xếp hạng cho một nhiệm vụ downstream như mô hình hóa/biến đổi/khám phá thêm. Thông tin tương hỗ (tổng quan chi tiết trong, ví dụ, [5]) là một độ đo tương tự hiệu quả đặc biệt phù hợp
để so sánh các biến ngẫu nhiên rời rạc (phân loại). Chúng tôi tiếp theo mô tả biến thể của độ đo này mà chúng tôi xác định là nhanh
Bản thảo được gửi đến ACM

--- TRANG 3 ---
OutRank: Tăng tốc Tìm kiếm Mô hình dựa trên AutoML 3
Dữ liệu
lôKiểm tra
chất lượngTầm quan trọng 
Đặc trưngBước tổng hợp
Dữ liệu
lô
...Tóm tắtCheckpoints
Một khi đủ 
mẫu được 
phân tích cúThống kê
đặc trưngXây dựng
đặc trưngThờigianBáo cáo chất lượng
đặc trưng trung gianPhân tích
phạm vi 
và
tính năng Dữ liệu
lô
Hình 1. Tổng quan về OutRank. Xếp hạng và phân tích đặc trưng được tiến hành cho các lô dữ liệu (người dùng tham số hóa kích thước) – một khi
đủ dữ liệu được quan sát bởi hệ thống, tổng hợp cuối cùng được thu được từ các điểm số trung gian và được sử dụng để tạo ra điểm số đặc trưng cuối cùng.
và đại diện cho sự tương tự của đặc trưng. Động lực chính dựa trên thực tế là tính năng của một đặc trưng
quan tâm đóng một vai trò quan trọng – đồng thời, xếp hạng các đặc trưng có tính năng khác nhau có thể không tối ưu và có thể
dẫn đến điểm số cuối cùng thiên vị (chúng tôi quan sát thấy điểm số thổi phồng của các đặc trưng thể hiện tính năng cao). Dựa trên khái niệm được áp dụng
của thông tin tương hỗ:
𝑀𝐼(𝑈,𝑉)=𝐻(𝑈)−𝐻(𝑈|𝑉)=E𝑉
𝐷KL𝑝𝑈|𝑉=𝑣|𝑝𝑈
,
trong đó 𝑈 và 𝑉 đại diện cho hai biến quan tâm và 𝐷KL đại diện cho độ phân kỳ Kullback-Leibler, chúng tôi đề xuất
sửa đổi sau. Để tính đến tác động của tính năng, chúng tôi quan sát thấy rằng việc chuẩn hóa điểm số này bằng điểm số mong đợi
thu được bằng cách tổng hợp điểm số MI trên một tập hợp các mẫu của một biến ngẫu nhiên có cùng tính năng có
tác dụng có lợi khi phân biệt giữa các đặc trưng quan trọng hơn và ít quan trọng hơn. Do đó, điểm số dẫn xuất từ thông tin tương hỗ
mà chúng tôi gọi là CardMI được tính tuân thủ biểu thức sau
CardMI(𝑈,𝑉)=Aggregate 𝑏∈𝐵
𝑀𝐼(𝑈𝑏,𝑉𝑏)−E𝑆𝑏∼𝑋|𝑉𝑏|
𝑀𝐼(𝑈𝑏,𝑆𝑏)
,
trong đó 𝐵 đại diện cho tập hợp tất cả các lô dữ liệu (chỉ số hàng, màu cam trong Hình 1) và 𝑈,𝑉 đại diện cho hai đặc trưng đang được
xem xét. 𝑆𝑏 đại diện cho một mẫu ngẫu nhiên có cùng tính năng cho một lô dữ liệu nhất định (số lượng
mẫu như vậy là một tham số). Hàm tổng hợp Aggregate kết hợp các điểm số trung gian thành một điểm số cuối cùng
và tùy chọn cắt bớt chúng đến phạm vi [0,1]. Ở cuối mỗi lần chạy, điểm số tầm quan trọng kết quả được thu nhỏ đến
phạm vi 0-1 (xem xét vector điểm số x)Scale(x𝑖)=x𝑖−min(x)
max(x)−min(x).Trực quan, việc trừ tiếng ồn mong đợi được
tiến hành để chưng cất tín hiệu ở cấp độ lô – tiếng ồn được tạo ra khác nhau từ lô này sang lô khác (dữ liệu thực tế cũng vậy). Hơn nữa, OutRank tự động thực hiện một tập hợp các "đặc trưng kiểm tra tính hợp lý"; những đặc trưng này tương ứng
với tiếng ồn ngẫu nhiên của tính năng cụ thể, hằng số và các loại tiếng ồn khác mà điểm số xếp hạng mong đợi được
biết (và hoặc là rất thấp hoặc cao - nếu dẫn xuất trực tiếp từ biến mục tiêu). So sánh với các đối ch조 điều khiển
có tính năng khác nhau cho phép chúng tôi kiểm soát hiệu suất của thuật toán với các bài kiểm tra đơn vị, cung cấp cái nhìn sâu sắc nhanh về
hồi quy có thể được giới thiệu trong các bản cập nhật phần mềm. Lý do chính để xem xét điểm số dựa trên MI là tốc độ của nó. Độ phức tạp tính toán của CardMI là O(|𝐹|·𝑏·𝑠·|𝐵|), trong đó 𝑠 là số lượng mẫu ngẫu nhiên được sử dụng
để chuẩn hóa và |𝐵| kích thước lô. Tính toán một ước tính 𝑀𝐼 đơn lẻ nhanh chóng cho các tập dữ liệu thưa thớt. Độ phức tạp tính toán thấp
và khả năng song song hóa cao trong các lô dữ liệu (xếp hạng CardMI theo cặp) đã cho phép phát triển
một thuật toán mở rộng khắc phục bản chất cận thị của CardMI – thiếu khả năng tính đến các tương tác.
Khía cạnh này được thảo luận tiếp theo chi tiết hơn.
Bản thảo được gửi đến ACM

--- TRANG 4 ---
4 Blaž Škrlj và Blaž Mramor
Chúng tôi tiếp theo thảo luận về việc xấp xỉ các tương tác bậc cao hơn. Cốt lõi của nhiều hệ thống khuyến nghị là khả năng
lập hồ sơ và phát hiện chính xác các tương tác bậc cao liên quan. Những kết hợp của hai hoặc nhiều
đặc trưng có thể chỉ ra các sự kiện thưa thớt nhưng có liên quan cao chi phối sự thành công của một hệ thống nhất định. Mô hình được áp dụng
của các máy nhân tử hóa cho phép mô hình hóa rõ ràng các tương tác như vậy; tuy nhiên, việc xác định chúng một cách hiệu quả là một
nỗ lực nghiên cứu đang diễn ra. Kết hợp các cái nhìn sâu sắc được sử dụng bởi nhánh thuật toán này (thủ thuật băm) với hiệu quả
của xếp hạng đặc trưng, OutRank cho phép lập hồ sơ nhanh chóng của hàng chục nghìn tương tác dựa trên hàng triệu trường hợp. Ý tưởng
cơ bản của lập hồ sơ tương tác bao gồm hai cái nhìn sâu sắc cho phép mở rộng. Đầu tiên, khi OutRank duyệt tập dữ liệu trong
các lô, lập hồ sơ các tương tác khác nhau cho các lô khác nhau có thể giảm đáng kể độ phức tạp thời gian (O(|𝐹|2)). Mỗi
đặc trưng kết hợp đại diện cho tương tác của nhiều đặc trưng được thu được bằng cách băm các tuple giá trị hiện có (cấu trúc dữ liệu
giữ thông tin này) thành một giá trị duy nhất, làm cho đặc trưng tương thích trực tiếp với tính toán CarMI,
tức là, Comb(𝐹1,𝐹2,...,𝐹𝑛)=Hash(struct =(𝐹1,𝐹2,...,𝐹𝑛)). Ở đây, Hash đại diện cho một hàm băm nhanh (xxHash trong trường hợp của chúng tôi1). Mặc dù băm nhanh cho phép xây dựng các đặc trưng kết hợp, việc xếp hạng, trong trường hợp này, mất thời gian đáng kể hơn,
và có thể phức tạp một cách cấm đoán. Để khắc phục vấn đề này, chúng tôi giới thiệu khái niệm bộ đệm đặc trưng – các tập hợp có kích thước cố định
của các đặc trưng ở cấp độ lô đại diện cho các mẫu ngẫu nhiên của không gian của tất cả các kết hợp (được tạo ra) có thể.
Bộ đệm đặc trưng được điền ngẫu nhiên mỗi lô (theo cách idempotent), và kích thước cố định của nó đảm bảo
hiệu suất nhất quán (có thể dự đoán). Khi các kết hợp khác nhau được "lấy mẫu" khi xem xét các lô khác nhau, với đủ
dữ liệu, các ước tính đáng tin cậy của điểm số tương tác bậc cao hơn được thu được (không đủ mẫu ngụ ý điểm số không đáng tin cậy).
Bằng cách này, các tương tác bậc hai và bậc ba (liên từ) nằm trong tầm với của các tập dữ liệu quy mô sản xuất. Ngoài
việc xấp xỉ hiệu ứng có giám sát của các tương tác (thông qua băm), OutRank cũng có thể tính toán các ma trận tương tự tam giác dưới
đại diện cho sự dư thừa giữa các cặp đặc trưng. Bước tính toán này, tương tự như bước tương tác có giám sát
ở trên, tốn kém về mặt tính toán và được xấp xỉ theo cách tương tự; chỉ một không gian con của các kết hợp có thể
được xem xét mỗi lô dữ liệu - trong giới hạn (=với đủ dữ liệu), đủ mẫu của tất cả các kết hợp được
thu được. Ngoài ra, "kích thước bộ đệm", tức là số lượng kết hợp/đặc trưng được xem xét tối đa mỗi lô, được
tham số hóa - giá trị càng thấp, việc xấp xỉ tương tự/tầm quan trọng tương tác càng thô.
2.1 3MR - Mở rộng Độ dư thừa Tối thiểu Mức độ liên quan Tối đa Mối quan hệ Tối đa
Mặc dù có thể tính đến các vấn đề liên quan đến tính năng tốt hơn, heuristic CardMI không kết hợp thông tin về
sự tương tự của đặc trưng với các đặc trưng khác (nó cận thị). Để khắc phục hạn chế này, chúng tôi giới thiệu một bước tính toán
tái trọng số đệ quy các điểm số dựa trên sự dư thừa của đặc trưng và mức độ liên quan khi chúng có mặt trong các tương tác.
Động lực cho điều này đến từ một trong những trường hợp sử dụng chính của chúng tôi cho OutRank, tăng tốc các thuật toán AutoML cho
việc xây dựng mô hình. Ý tưởng/động lực tương tự như mRMR [8] và các phương pháp tương tự [16] nhưng được điều chỉnh cho trường hợp sử dụng
xếp hạng đặc trưng không cận thị nhanh cho dữ liệu phân loại. Hơn nữa, công trình gần đây về fast-mRMR [9] cũng chứng minh
khả năng mở rộng của nhánh thuật toán này, phù hợp với các phát hiện/thiết kế của chúng tôi. Tái trọng số các đặc trưng dựa trên
sự dư thừa là động lực đằng sau heuristic MRMR được gọi là [16]. Mặt khác, lý do để tái trọng số
các đặc trưng dựa trên mức độ liên quan tương tác đến từ thực tế là các thuật toán khuyến nghị mà chúng tôi thường
sử dụng trong AutoML (FM, FFM, DeepFM) ưu ái các đặc trưng mà, trong các tương tác, tạo ra tín hiệu mạnh.
Để mô tả heuristic này, hãy ký hiệu bằng S𝑖∈R với 𝑖∈{1,...,𝑁} điểm số của các đặc trưng 𝑓𝑖,𝑖∈{1,...,𝑁}
được tính bởi heuristic CardMI so với mục tiêu. Hơn nữa, hãy R𝑖,𝑗∈R ký hiệu điểm số CardMI trong đó 𝑅𝑖,𝑗
là điểm số của 𝑓𝑖 đối với 𝑓𝑗. Cuối cùng, hãy C𝑖,𝑗∈R ký hiệu điểm số CardMI của tương tác 𝑓𝑖,𝑓𝑗 đối với
1https://github.com/Cyan4973/xxHash
Bản thảo được gửi đến ACM

--- TRANG 5 ---
OutRank: Tăng tốc Tìm kiếm Mô hình dựa trên AutoML 5
mục tiêu. Sau đó công thức cho xếp hạng 3MR có thể được đưa ra như một tái chỉ mục (ánh xạ song ánh) 𝐹:{1,...,𝑁}→{ 1,...,𝑁}
sao cho 𝑓𝑖 là một đặc trưng được xếp hạng cao hơn 𝑓𝑗, nếu 𝑖<𝑗. Heuristic có thể được tính lặp bằng cách đầu tiên xem xét
𝐹(0)=argmax
𝑖=1,...,𝑁(S𝑖), theo sau bởi
𝜂=𝐹(𝑖)= argmax
𝑗∉𝐹−1{1,...,𝑖−1}Điểm số đặc trưngz}|{
S𝐹(𝑗)−𝛼·SF
{R𝑗,𝑘}𝑘∈𝐹−1{1,...,𝑖−1}
|                                 {z                                 }
Thông tin dư thừa+𝛽·SF
{C𝑗,𝑘}𝑘∈𝐹−1{1,...,𝑖−1}
|                                {z                                }
Thông tin quan hệ
,
trong đó (𝑆𝐹) là một hàm thống kê (ví dụ: trung bình, trung vị, tổng) và 𝛼,𝛽>0 là các siêu tham số. Lưu ý rằng tập hợp
𝐹−1{1,...,𝑖−1} ký hiệu tất cả các đặc trưng được xếp hạng ở trên (tốt hơn) 𝑖 và trong (2) điều này tương ứng với tất cả các đặc trưng đã tính toán. Cũng lưu ý rằng việc đặt 𝛽=0 đưa chúng ta đến heuristic MRMR và việc đặt 𝛼=0 làm cho heuristic bỏ qua
sự dư thừa và chỉ xem xét thông tin quan hệ.
3 ĐÁNH GIÁ
Để đánh giá tính khả thi của các ý tưởng được trình bày, chúng tôi đã tiến hành hai tập hợp thử nghiệm được thiết kế để minh họa
khả năng của các phương pháp. Đầu tiên, chúng tôi xem xét kịch bản khai thác dữ liệu phổ biến nơi một người thực hành xem xét các
công cụ AutoML tiên tiến hiện có để giải quyết một nhiệm vụ học tập (phân loại trong trường hợp này) nhất định đang có – chúng tôi đã xem xét
hệ thống TPOT [7] và khám phá khả năng của CardMI để tăng tốc nó bằng cách cắt tỉa phần không liên quan của không gian trước khi tìm kiếm mô hình. Phần thứ hai của đánh giá liên quan đến việc sử dụng công trình được trình bày trên AutoML sản xuất thực tế, nơi
lượng dữ liệu lớn hơn, và thời gian dành cho tìm kiếm đặc trưng đủ để xác định các mô hình phù hợp
chỉ có thể đạt được trong môi trường tính toán phân tán (>10 máy chạy tìm kiếm mô hình). Chúng tôi tiếp theo thảo luận
hiệu suất trên một tập dữ liệu tổng hợp - tăng tốc AutoML tiên tiến. Thử nghiệm đầu tiên xem xét
một tập dữ liệu nổi tiếng được xây dựng để lập hồ sơ chất lượng của các thuật toán xếp hạng đặc trưng – Madelon [3]. Tập dữ liệu bao gồm
4.400 trường hợp và 500 đặc trưng; đó là một tập dữ liệu nhân tạo chứa các điểm dữ liệu được nhóm trong 32 cụm được đặt trên
các đỉnh của một siêu khối năm chiều và được gán nhãn ngẫu nhiên +1 hoặc -1. AutoML đã được chạy lại mười lần (các
hạt giống ngẫu nhiên khác nhau) cho mỗi tỷ lệ dữ liệu (tăng dần nhiều đặc trưng hơn) để đánh giá mối quan hệ hiệu suất/thời gian của
tìm kiếm mô hình; mỗi lần tìm kiếm được chạy lên đến ba thế hệ với kích thước quần thể mười mô hình. Đối với nhiệm vụ này, chúng tôi
đã sử dụng CardMI được tính trong các lô 4196 trường hợp – đây là một trong những trường hợp sử dụng trực tiếp đơn giản nhất
áp dụng cho nhiều kịch bản thực tế. Kết quả của hơn hai nghìn lần chạy AutoML được tóm tắt trong Hình 4.
Điểm chuẩn (Hình 2) minh họa động lực chính của bài báo này – đầu tiên, việc chạy AutoML đắt đỏ hơn chỉ
có thể sau "tiền lựa chọn" đặc trưng ban đầu. Thứ hai, trên nhiều tập dữ liệu, lên đến 50% cải thiện thời gian được
quan sát nếu xem xét không gian đặc trưng nhỏ hơn (hiệu suất thu được bởi AutoML nằm trong biên độ 0,5% F1).
Thử nghiệm chứng minh rằng xếp hạng đặc trưng hiệu quả có thể phục vụ như một bước ban đầu khả thi khi xem xét tìm kiếm mô hình AutoML đắt đỏ hơn – đặc biệt trong các tập dữ liệu chiều cao hơn, lợi ích hiệu suất là đáng kể.
Chúng tôi tiếp tục với hiệu suất trên một trường hợp sử dụng thực tế – tìm kiếm mô hình tỷ lệ click-through (CTR). Ngoài
sàng lọc đặc trưng chất lượng dữ liệu, các heuristic xếp hạng đặc trưng của OutRank có giá trị để tăng tốc tìm kiếm AutoML của chúng tôi.
Điều này có thể được thực hiện bằng cách bỏ một tỷ lệ của các đặc trưng không liên quan và do đó giảm không gian tìm kiếm hoặc bằng cách sử dụng
các đặc trưng xếp hạng hàng đầu làm mô hình hạt giống, hiệu quả bỏ qua nhiều thế hệ tìm kiếm AutoML đắt đỏ. Để tìm
các heuristic tối ưu, chúng tôi cần một tập dữ liệu với số lượng đặc trưng đủ và một điểm chuẩn xếp hạng đặc trưng hiển thị
tầm quan trọng của chúng đối với quy trình xây dựng mô hình AutoML. Vì tập dữ liệu mã nguồn mở như vậy không tồn tại, chúng tôi đã lấy 1,5
triệu trường hợp của dữ liệu huấn luyện CTR sản xuất được lấy mẫu con với khoảng 10% nhãn dương và 100 đặc trưng. Các đặc trưng
Bản thảo được gửi đến ACM

--- TRANG 6 ---
6 Blaž Škrlj và Blaž Mramor
0 20 40 60 80 100
Tỷ lệ đặc trưng được bảo tồn (%)020406080100Tỷ lệ thời gian (w.r.t. tất cả đặc trưng) (%)
madelon
(a) Thời gian tìm kiếm mô hình w.r.t. kích thước của không gian đặc trưng (đã được cắt tỉa trước).
0 20 40 60 80 100
Tỷ lệ đặc trưng được bảo tồn (%)0.00.20.40.60.8Hiệu suất AutoML ( F1)
(b) Mối quan hệ giữa hiệu suất của mô hình tốt nhất và kích thước của không gian đặc trưng được xem xét.
0 20 40 60 80 100
Tỷ lệ thời gian dành cho tìm kiếm mô hình w.r.t. lần chạy chậm nhất (%)0.00.20.40.60.81.0F1Dữ liệu (%)
0
10
20
30
40
50(c) Mối quan hệ giữa hiệu suất F1 và thời gian của AutoML để đạt được nó.
Hình 2. Trực quan hóa tác động của việc cắt tỉa dựa trên OutRank đối với hiệu suất của AutoML. Các trực quan hóa hiển thị phân phối thời gian tính toán và hiệu suất tương ứng cho các mức độ cắt tỉa đặc trưng khác nhau (ít đặc trưng hơn được xem xét từ phải sang trái). Nhìn chung, hơn 3.000 lần chạy AutoML đã được tiến hành (một điểm=một lần chạy), và chỉ ra rằng lên đến 30% tăng tốc có thể được thu được với
mất mát hiệu suất tối thiểu đến không có (a,b,c). Hơn nữa, việc xem xét tất cả đặc trưng từ đầu có thể có overhead bộ nhớ đáng kể (yêu cầu phần cứng khác nhau), cung cấp một lý do khác cho việc tiền lựa chọn/khử nhiễu đặc trưng nhanh trước khi tìm kiếm mô hình dựa trên AutoML đắt đỏ hơn.
0 20 40 60 80
cumulate-recall-singlesrandom
MRMR(RF)-median ( α= 0.2;β= 0.0)
RF
3MR(RF)-median ( α= 0.0;β= 0.5)
MRMR(CardMI)-q90 ( α= 0.2;β= 0)
CardMI
3MR(CardMI)-mean ( α= 0.2;β= 1)
(a) Hiệu suất của 3MR cho nhiệm vụ xấp xỉ thế hệ đơn lẻ của tìm kiếm.
0 10 20 30 40 50 60
cumulate-recallrandom
RF
3MR(RF)-median ( α= 0.2;β= 0.5)
AutoML-SingleFeatureFMs
CardMI
MRMR(CardMI)-q90 ( α= 1.0;β= 0.0)
3MR(CardMI)-q90 ( α= 0.2;β= 0.5)(b) Hiệu suất của 3MR khi xấp xỉ dấu vết tìm kiếm AutoML (mỗi thế hệ).
Hình 3. Tổng quan tích lũy về hiệu suất cho hai nhiệm vụ xếp hạng quan tâm. 3MR hoạt động tốt cho cả hai nhiệm vụ – cả thông tin dư thừa và quan hệ/tương tác (𝛼,𝛽) đều khác không, chỉ ra rằng cả hai loại thông tin đều đóng vai trò có ý nghĩa trong quá trình xếp hạng.
được tiền lựa chọn để đại diện cho bản chất không đồng nhất của dữ liệu của chúng tôi về sức mạnh tín hiệu của chúng đối với mục tiêu,
tính năng của chúng, mối tương quan của chúng với các đặc trưng khác và số lượng giá trị bị thiếu của chúng. Một tìm kiếm mô hình AutoML
thêm liên tiếp từng đặc trưng vào một máy nhân tử hóa đã cho chúng tôi xếp hạng đặc trưng điểm chuẩn chính (xếp hạng chạy AutoML đầy đủ). Một xếp hạng đặc trưng hữu ích khác là kết quả của một lần chạy AutoML đơn lẻ, tức là xếp hạng dựa trên
hiệu suất của một FM đặc trưng đơn, mà chúng tôi hiện đang sử dụng để tăng tốc tìm kiếm của chúng tôi.
Dữ liệu cho các heuristic xếp hạng đặc trưng của OutRank được lấy mẫu con mười lần từ dữ liệu AutoML. Các heuristic xếp hạng đặc trưng cơ bản mà chúng tôi so sánh là hồi quy logistic (LR), random forest (RF), xáo trộn ngẫu nhiên (R) và
CradMI đã đề cập ở trên. Hơn nữa, chúng tôi so sánh MRMR và 3MR, có sự dư thừa và quan hệ được tính toán
với CardMI (do độ phức tạp tính toán cao hơn), và mức độ liên quan được tính toán với RF hoặc CradMI. Hàm SF
trong 3MR là trung bình, trung vị hoặc phần trăm thứ 90. Kết quả có thể được thấy trong Hình 3 và 4. Đối với mỗi 𝑖=1,...,100
chúng tôi so sánh xếp hạng 𝐺 với xếp hạng mục tiêu 𝐹 dựa trên recall 𝑅𝑖:=#(𝐹−1(1,...,𝑖)∩𝐺−1(1,...,𝑖))
𝑖, như trong Hình 4. Hơn nữa, bằng cách
Bản thảo được gửi đến ACM

--- TRANG 7 ---
OutRank: Tăng tốc Tìm kiếm Mô hình dựa trên AutoML 7
0 20 40 60 80 100
Thế hệ liên tiếp trong tìm kiếm0.00.20.40.60.81.0recall index@k
heuristic
MRMR(CardMI)
random
3MR(CardMI)-mean
3MR(CardMI)-median
MRMR(RF)
3MR(RF)-median
3MR(CardMI)-q90
CardMI
LogisticRegression-based
RandomForest-based
(a) Xấp xỉ một thế hệ AutoML đơn lẻ (máy nhân tử hóa đặc trưng đơn) với các thuật toán xếp hạng khác nhau.
0 5 10 15 20 25 30 35
Thế hệ liên tiếp trong tìm kiếm0.00.10.20.30.40.50.6cropped index@k
heuristic
MRMR(CardMI)
random
3MR(CardMI)-mean
3MR(CardMI)-median
MRMR(RF)
3MR(RF)-median
3MR(CardMI)-q90
CardMI
LogisticRegression-based
AutoML-SingleFeatureFMs
RandomForest-based(b) Xấp xỉ các đặc trưng hàng đầu cho mỗi thế hệ tìm kiếm mô hình với các thuật toán xếp hạng đặc trưng khác nhau.
Hình 4. Các trực quan hóa hiển thị tiềm năng của heuristic 3MR (được tính như một phần của OutRank) để xấp xỉ tìm kiếm dựa trên AutoML nội bộ tốn kém về mặt tính toán. Hình phụ (a) chứng minh rằng lên đến 20 đặc trưng có thể được truy xuất một cách đáng tin cậy thông qua xếp hạng đặc trưng. Hình phụ (b) chứng minh rằng việc xấp xỉ dấu vết đầy đủ của tìm kiếm mô hình (nhiều thế hệ) là một vấn đề khó, nơi các heuristic xếp hạng đặc trưng được đề xuất hoạt động tốt hơn AutoML nếu chỉ chạy cho một thế hệ đơn lẻ.
lấy tổng qua 𝑅:=Í
𝑖𝑅𝑖, chúng ta có được xếp hạng chung cho mỗi heuristic so với điểm chuẩn, như trong Hình 3.
Từ Hình 3a và b, chúng ta có thể thấy rằng đối với cả hai điểm chuẩn, heuristic CardMI vượt trội hơn RF và 3MR với
trọng số của quan hệ (𝛽) lớn hơn trọng số dư thừa (𝛼) cải thiện thêm xếp hạng. Đối với điểm chuẩn chạy AutoML đầy đủ, mặt khác, MRMR đã có hiệu suất tốt hơn CardMI, và 3MR thậm chí còn tốt hơn. Đối với điểm chuẩn chạy AutoML đơn lẻ
MRMR hơi tệ hơn, trong khi 3MR với 𝛽 lớn tốt hơn. Việc chỉ xem xét sự dư thừa cho kết quả tệ hơn phù hợp với kỳ vọng vì điểm chuẩn chạy AutoML đơn lẻ có bản chất cận thị. Hình 4
hiển thị cái nhìn sâu sắc về hiệu suất của các heuristic khác nhau trên các tập con của đặc trưng. Kết quả xác nhận trực giác của chúng tôi rằng
việc thêm sự dư thừa và quan hệ trong tính toán xếp hạng đặc trưng cho AutoML cải thiện hiệu suất của
heuristic xếp hạng. Đối với trường hợp sử dụng của chúng tôi, thuật toán 3MR được đề xuất cung cấp sự cân bằng tốt giữa tốc độ/hiệu suất,
thậm chí nếu so sánh với các baseline mạnh.
4 KẾT LUẬN VÀ CÔNG VIỆC TIẾP THEO
Công trình này khám phá xem mã hóa dựa trên băm đơn giản có thể cung cấp giá trị gia tăng trong việc lập hồ sơ tương tác hay không. Mã hóa dựa trên băm là một kỹ thuật đơn giản và hiệu quả cho phép chúng ta mã hóa tương tác giữa hai hoặc nhiều đặc trưng thành
một đặc trưng duy nhất. Chúng tôi đã chứng minh rằng heuristic CardMI, một biến thể của thông tin tương hỗ kết hợp tính năng của đặc trưng, cung cấp không gian đặc trưng được cắt tỉa cho phép tìm kiếm mô hình AutoML nhanh hơn lên đến 30% (TPOT) mà không mất
hiệu suất và lên đến 50% tìm kiếm nhanh hơn với mất mát hiệu suất tối thiểu (≈0,5% F1). Kết quả của chúng tôi cho thấy rằng thậm chí với
mã hóa dựa trên băm đơn giản, chúng tôi có thể đạt được cải thiện đáng kể trong xếp hạng đặc trưng so với các
phương pháp hiện có – bao gồm các baseline mạnh như xếp hạng dựa trên Random Forest. Tuy nhiên, có các sơ đồ phức tạp hơn
để mã hóa các tương tác cũng có thể. Ví dụ, phủ định và điều kiện thay vì liên từ đơn giản
có thể tạo ra các đặc trưng phức tạp hơn hiện tại nằm ngoài tầm với và có thể tăng cường thêm hiệu suất của
lập hồ sơ đặc trưng. Lợi ích tiềm năng của những sơ đồ phức tạp hơn này để mã hóa các tương tác là rõ ràng, nhưng chúng
cũng đi kèm với chi phí tính toán bổ sung. Nguồn của OutRank sẽ được cung cấp khi kết thúc đánh giá nội bộ
được yêu cầu để phát hành2.
2https://github.com/outbrain/outrank
Bản thảo được gửi đến ACM

--- TRANG 8 ---
8 Blaž Škrlj và Blaž Mramor
TÀI LIỆU THAM KHẢO
[1]Zeynep Batmaz, Ali Yurekli, Alper Bilge, và Cihan Kaleli. 2019. Một đánh giá về học sâu cho hệ thống khuyến nghị: thách thức và biện pháp khắc phục.
Artificial Intelligence Review 52 (2019), 1–37.
[2] Leo Breiman. 2001. Random forests. Machine learning 45 (2001), 5–32.
[3] Isabelle Guyon, Steve Gunn, Masoud Nikravesh, và Lofti A Zadeh. 2008. Trích xuất đặc trưng: nền tảng và ứng dụng. Tập 207. Springer.
[4] Xin He, Kaiyong Zhao, và Xiaowen Chu. 2021. AutoML: Một khảo sát về tình trạng nghệ thuật. Knowledge-Based Systems 212 (2021), 106622.
[5]Alexander Kraskov, Harald Stögbauer, và Peter Grassberger. 2011. Erratum: ước tính thông tin tương hỗ [Phys. Rev. E 69, 066138 (2004)].
Physical Review E 83, 1 (2011), 019903.
[6]Lili Liu, Lei Chen, Yu-Hang Zhang, Lai Wei, Shiwen Cheng, Xiangyin Kong, Mingyue Zheng, Tao Huang, và Yu-Dong Cai. 2017. Phân tích và
dự đoán tương tác thuốc-thuốc bằng độ dư thừa tối thiểu mức độ liên quan tối đa và lựa chọn đặc trưng tăng dần. Journal of Biomolecular
Structure and Dynamics 35, 2 (2017), 312–329.
[7]Laurent Parmentier, Olivier Nicol, Laetitia Jourdan, và Marie-Eléonore Kessaci. 2019. Tpot-sh: Một thuật toán tối ưu hóa nhanh hơn để giải quyết vấn đề automl
trên các tập dữ liệu lớn. Trong 2019 IEEE 31st International Conference on Tools with Artificial Intelligence (ICTAI). IEEE, 471–478.
[8]Hanchuan Peng, Fuhui Long, và Chris Ding. 2005. Lựa chọn đặc trưng dựa trên tiêu chí thông tin tương hỗ của max-dependency, max-relevance, và
min-redundancy. IEEE Transactions on pattern analysis and machine intelligence 27, 8 (2005), 1226–1238.
[9]Sergio Ramírez-Gallego, Iago Lastra, David Martínez-Rego, Verónica Bolón-Canedo, José Manuel Benítez, Francisco Herrera, và Amparo Alonso-
Betanzos. 2017. Fast-mRMR: Thuật toán độ dư thừa tối thiểu mức độ liên quan tối đa nhanh cho dữ liệu lớn chiều cao. International Journal of
Intelligent Systems 32, 2 (2017), 134–152.
[10] Steffen Rendle. 2010. Máy nhân tử hóa. Trong 2010 IEEE International conference on data mining. IEEE, 995–1000.
[11] Lars Ropeid Selsaas, Bikash Agrawal, Chumming Rong, và Thomasz Wiktorski. 2015. AFFM: Kỹ thuật đặc trưng tự động trong máy nhân tử hóa nhận biết trường
cho phân tích dự đoán. Trong 2015 IEEE International Conference on Data Mining Workshop (ICDMW). IEEE, 1705–1709.
[12] Kunal Shah, Akshaykumar Salunke, Saurabh Dongare, và Kisandas Antala. 2017. Hệ thống khuyến nghị: Một tổng quan về các phương pháp khác nhau cho
khuyến nghị. Trong 2017 International Conference on Innovations in Information, Embedded and Communication Systems (ICIIECS). IEEE, 1–4.
[13] Razieh Sheikhpour. 2023. Một khung dựa trên hồi quy spline địa phương cho lựa chọn đặc trưng thưa thớt bán giám sát. Knowledge-Based Systems (2023),
110265.
[14] B Venkatesh và J Anuradha. 2019. Một đánh giá về lựa chọn đặc trưng và các phương pháp của nó. Cybernetics and information technologies 19, 1 (2019), 3–26.
[15] Jialei Wang, Peilin Zhao, Steven CH Hoi, và Rong Jin. 2013. Lựa chọn đặc trưng trực tuyến và các ứng dụng của nó. IEEE Transactions on knowledge and data
engineering 26, 3 (2013), 698–710.
[16] Zhenyu Zhao, Radhika Anand, và Mallory Wang. 2019. Các phương pháp lựa chọn đặc trưng mức độ liên quan tối đa và độ dư thừa tối thiểu cho một nền tảng học máy marketing. Trong 2019 IEEE international conference on data science and advanced analytics (DSAA). IEEE, 442–452.
[17] Ruiqi Zheng, Liang Qu, Bin Cui, Yuhui Shi, và Hongzhi Yin. 2023. AutoML cho Hệ thống Khuyến nghị Sâu: Một Khảo sát. ACM Transactions on
Information Systems (2023).
Bản thảo được gửi đến ACM
