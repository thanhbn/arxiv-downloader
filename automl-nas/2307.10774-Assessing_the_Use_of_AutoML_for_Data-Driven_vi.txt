# 2307.10774.pdf
# Đã chuyển đổi từ PDF sang TXT
# Đường dẫn nguồn: /home/admin88/arxiv-downloader/automl-nas/2307.10774.pdf
# Kích thước tệp: 546200 byte

===============================================
NỘI DUNG TỆP PDF
===============================================


--- TRANG 1 ---
Đánh Giá Việc Sử Dụng AutoML cho Kỹ Thuật Phần Mềm Dựa Trên Dữ Liệu

Fabio Calefato, Luigi Quaranta, Filippo Lanubile
Đại học Bari
Bari, Ý
{fabio.calefato, luigi.quaranta, filippo.lanubile}@uniba.it

Marcos Kalinowski
PUC-Rio
Rio de Janeiro, Brazil
kalinowski@inf.puc-rio.br

Tóm tắt—Bối cảnh. Do việc áp dụng rộng rãi Trí tuệ Nhân tạo (AI) và Học Máy (ML) để xây dựng các ứng dụng phần mềm, các công ty đang gặp khó khăn trong việc tuyển dụng nhân viên có hiểu biết sâu sắc về các công nghệ này. Trong bối cảnh này, AutoML đang nổi lên như một giải pháp đầy hứa hẹn để lấp đầy khoảng trống kỹ năng AI/ML vì nó hứa hẹn tự động hóa việc xây dựng các pipeline AI/ML từ đầu đến cuối mà thông thường sẽ được thiết kế bởi các thành viên nhóm chuyên môn. Mục tiêu. Mặc dù có sự quan tâm ngày càng tăng và kỳ vọng cao, vẫn thiếu thông tin về mức độ AutoML hiện được các nhóm phát triển hệ thống hỗ trợ AI/ML áp dụng và cách các nhà thực hành và nghiên cứu nhận thức về nó. Phương pháp. Để lấp đầy những khoảng trống này, trong bài báo này, chúng tôi trình bày một nghiên cứu phương pháp hỗn hợp bao gồm một bài đánh giá về 12 công cụ AutoML từ đầu đến cuối trên hai bộ dữ liệu SE và một cuộc khảo sát người dùng với các cuộc phỏng vấn tiếp theo để hiểu rõ hơn về việc áp dụng và nhận thức AutoML. Kết quả. Chúng tôi phát hiện rằng các giải pháp AutoML có thể tạo ra các mô hình vượt trội hơn những mô hình được huấn luyện và tối ưu hóa bởi các nhà nghiên cứu để thực hiện các nhiệm vụ phân loại trong lĩnh vực SE. Ngoài ra, các phát hiện của chúng tôi cho thấy rằng các giải pháp AutoML hiện có không đáp ứng được tên gọi của chúng vì chúng không hỗ trợ tự động hóa một cách đều đặn qua các giai đoạn của quy trình phát triển ML và cho tất cả các thành viên trong nhóm. Kết luận. Chúng tôi rút ra những hiểu biết để thông báo cho cộng đồng nghiên cứu SE về cách AutoML có thể hỗ trợ các hoạt động của họ và các nhà xây dựng công cụ về cách thiết kế thế hệ tiếp theo của các công nghệ AutoML.

Từ khóa chỉ mục—AutoAI, đánh giá, nghiên cứu phương pháp hỗn hợp

I. GIỚI THIỆU

Những tiến bộ gần đây trong Trí tuệ Nhân tạo (AI) và Học Máy (ML) đã dẫn đến việc áp dụng rộng rãi trong ngành công nghiệp trong nhiều lĩnh vực khác nhau, như ô tô, kinh doanh và chăm sóc sức khỏe [1, 2]. Việc xây dựng các ứng dụng tăng cường AI hoạt động tốt đòi hỏi nhiều hơn chỉ những chuyên gia con người có chuyên môn cao với kiến thức sâu sắc về các công nghệ liên quan đến AI/ML. Làm việc trong các nhóm chuyên môn, các kỹ sư dữ liệu, chuyên gia lĩnh vực, nhà thống kê và kỹ sư phần mềm giúp các nhà khoa học dữ liệu phát triển các hệ thống hỗ trợ AI/ML bằng cách xây dựng các pipeline từ đầu đến cuối bao gồm nhiều giai đoạn khác nhau, từ tiền xử lý dữ liệu và kỹ thuật đặc trưng đến tích hợp mô hình, giám sát và tinh chỉnh. Tuy nhiên, các công ty hiện đang gặp khó khăn trong việc tuyển dụng các chuyên gia AI/ML [3-5].

Với tình trạng thiếu hụt kỹ năng AI/ML nghiêm trọng này, học máy tự động (AutoML) [6] đã đạt được động lực vì nó nhằm mục đích lấp đầy khoảng trống này bằng cách tự động hóa việc xây dựng các pipeline AI/ML từ đầu đến cuối mà thông thường sẽ được thiết kế bởi các nhóm chuyên môn. AutoML thực sự hấp dẫn đối với cả các công ty thiếu chuyên môn nội bộ cũng như những công ty đã có các chuyên gia và do đó được hưởng lợi từ tự động hóa khi thực hiện các hoạt động phức tạp, tốn thời gian như khám phá dữ liệu, kỹ thuật đặc trưng và tối ưu hóa siêu tham số. Gần đây, AutoML cũng đã được sử dụng trong nghiên cứu Kỹ thuật Phần mềm (SE); Tanaka và cộng sự [7] đã thử nghiệm với AutoML để phát triển các mô hình dự đoán lỗi phần mềm, đạt được hiệu suất tối tân.

Bất chấp sự quan tâm ngày càng tăng và kỳ vọng cao, chúng ta có ít kiến thức về mức độ AutoML hiện được các nhóm phát triển hệ thống hỗ trợ AI/ML áp dụng. Vanschoren và cộng sự [8] phát hiện rằng AutoML chiếm ít hơn 2% các quy trình làm việc được tải lên OpenML,¹ một nền tảng trực tuyến thu thập các bộ dữ liệu ML công khai và kết quả đánh giá. Van der Blom và cộng sự [9] đã tiến hành một cuộc khảo sát với các thành viên của nhóm AI/ML, cho thấy khoảng 20-30% số người được hỏi chưa bao giờ sử dụng AutoML.

Hơn nữa, chúng ta có hiểu biết hạn chế về cách AutoML được các nhà thực hành nhận thức. Đặc biệt, Wang và cộng sự [10] đã khám phá các nhận thức về việc áp dụng AutoML, tập trung vào góc độ của các nhà khoa học dữ liệu và cách họ sử dụng nó để xây dựng mô hình và tinh chỉnh siêu tham số. Tuy nhiên, các công cụ AutoML nhằm mục đích bao phủ quy trình làm việc AI/ML từ đầu đến cuối, và vẫn còn ít được biết về nhận thức và kỳ vọng của các thành viên nhóm khác. Mặc dù các ranh giới thường mờ nhạt, một nhóm AI/ML trưởng thành bao gồm nhiều vai trò khác ngoài những vai trò liên quan đến các nhà khoa học dữ liệu như kỹ sư dữ liệu, những người tập trung vào thiết lập các pipeline chuẩn bị dữ liệu, và kỹ sư ML (thường còn được gọi là MLOps), những người tập trung vào các hoạt động kỹ thuật như tích hợp mô hình, triển khai và giám sát [11, 12]. Trong [13], Wang và cộng sự đã phân tích một số câu hỏi Stack Overflow và thảo luận GitHub để định nghĩa một phân loại gồm 26 thách thức cụ thể của nhà phát triển khi sử dụng AutoML. Ngoài ra, Majidi và cộng sự [14] đã lấy mẫu khoảng 22k dự án GitHub áp dụng các công cụ AutoML và phát hiện rằng chúng chủ yếu được sử dụng để huấn luyện và đánh giá mô hình.

Cuối cùng, có một số bài đánh giá được công bố so sánh hiệu suất của các hệ thống AutoML (ví dụ: [15-17]); chẳng hạn, nghiên cứu đã báo cáo rằng AutoML không vượt trội hơn các chiến lược dự báo thông thường được sử dụng trong phân tích chuỗi thời gian [18]. Tuy nhiên, ngoại trừ Tanaka và cộng sự [7], không có bài đánh giá nào trong số này đã tận dụng các bộ dữ liệu từ lĩnh vực SE cho đến nay, bất chấp một số ứng dụng tiềm năng của AutoML trong lĩnh vực này.

Để bắc cầu những khoảng trống này, trong bài báo này, chúng tôi trình bày một nghiên cứu phương pháp hỗn hợp bao gồm (i) một bài đánh giá về 12 công cụ AutoML từ đầu đến cuối trên hai bộ dữ liệu kỹ thuật phần mềm, để thu thập bằng chứng ban đầu về hiệu suất của các giải pháp AutoML tối tân khi áp dụng cho các nhiệm vụ cụ thể của SE - cụ thể là phân tích cảm xúc từ văn bản kỹ thuật - và (ii) một cuộc khảo sát người dùng với các cuộc phỏng vấn tiếp theo với các kỹ sư phần mềm làm việc trên các dự án AI/ML, để hiểu rõ hơn về nhận thức và mức độ áp dụng AutoML của họ.

Những đóng góp của chúng tôi hấp dẫn cả ngành công nghiệp và cộng đồng nghiên cứu SE vì, tương ứng, chúng tôi (i) cho thấy những giai đoạn nào của quy trình làm việc ML điển hình phù hợp hơn/ít phù hợp hơn cho tự động hóa theo các nhà thực hành SE và (ii) cung cấp bằng chứng rằng các giải pháp AutoML có thể tạo ra các mô hình vượt trội hơn những mô hình được huấn luyện và tối ưu hóa bởi các nhà nghiên cứu để thực hiện các nhiệm vụ phân loại - như phân tích cảm xúc và nhận dạng cảm xúc trong lĩnh vực SE - và đồng thời đạt được hiệu suất gần với các giải pháp phức tạp và tốn thời gian dựa trên tinh chỉnh các transformers được huấn luyện trước (ví dụ: BERT [19]).

Phần còn lại của bài báo này được tổ chức như sau. Trong Phần II, chúng tôi xem xét tài liệu nền tảng. Trong Phần III, chúng tôi minh họa thiết kế của nghiên cứu phương pháp hỗn hợp. Kết quả của các phân tích định lượng và định tính được báo cáo và thảo luận trong Phần IV và V, tương ứng. Cuối cùng, chúng tôi rút ra kết luận trong Phần VI.

II. NỀN TẢNG

A. Quy Trình Phát Triển Học Máy

Hình 1 trình bày một quy trình làm việc học máy điển hình với các hoạt động và trách nhiệm. So với một quy trình phát triển chung, ví dụ như agile, của một hệ thống phần mềm truyền thống được thiết kế, hai điểm khác biệt chính xuất hiện. Thứ nhất, với các hệ thống hỗ trợ AI/ML, đầu ra cuối cùng của quy trình phát triển không phải là mã nguồn, mà là kết quả của mô hình (ví dụ: các dự đoán được thực hiện, các quyết định kinh doanh có thông tin được đưa ra) [20]. Điểm khác biệt thứ hai liên quan đến lượng thử nghiệm cần thiết để hội tụ đến một hiệu suất mô hình thỏa mãn cho vấn đề đang xem xét; thực tế, mặc dù quy trình làm việc có thể xuất hiện tuyến tính, giống như các quy trình phần mềm agile, một quy trình làm việc học máy chứa một số vòng phản hồi do các lần lặp thường xuyên liên quan đến lựa chọn mô hình, điều chỉnh siêu tham số và tinh chỉnh bộ dữ liệu [21].

Chuẩn bị. Giai đoạn chuẩn bị dữ liệu thường là trách nhiệm của các kỹ sư dữ liệu. Nếu chưa có dữ liệu sẵn có, bước đầu tiên trong quá trình chuẩn bị là thu thập dữ liệu, nơi các kỹ sư dữ liệu truy xuất các phần thông tin thô từ nhiều nguồn dữ liệu và sau đó tích hợp chúng thành một bộ dữ liệu. Sau khi được thu thập, bước tiếp theo để thực hiện với bộ dữ liệu là làm sạch dữ liệu, liên quan đến việc loại bỏ các bản ghi không chính xác hoặc nhiễu, một hoạt động phổ biến trong tất cả các hình thức khoa học dữ liệu. Các bước tiền xử lý điển hình liên quan đến việc ước tính các giá trị bị thiếu cũng như loại bỏ các bản sao và giá trị không nhất quán. Bước cuối cùng trong chuẩn bị dữ liệu là gắn nhãn dữ liệu, nhiệm vụ tốn thời gian để gán nhãn sự thật cơ bản cho mỗi bản ghi trong bộ dữ liệu vì hầu hết các kỹ thuật học có giám sát đều yêu cầu nhãn 'vàng' để có thể xây dựng mô hình. Bước này đề cập đến cả 'gắn nhãn dữ liệu có hỗ trợ' và 'gắn nhãn dữ liệu thủ công', tùy thuộc vào việc liệu ML có được sử dụng để hoàn thành việc chú thích và tiết kiệm thời gian và ngân sách, so với chỉ sử dụng các chú thích viên con người (ví dụ: chính các kỹ sư dữ liệu, chuyên gia lĩnh vực và công nhân đám đông) để gắn nhãn toàn bộ bộ dữ liệu.

Phân tích. Giai đoạn này là cốt lõi của quy trình phát triển học máy, thường liên quan đến các nhà khoa học dữ liệu thực hiện nhiều nhiệm vụ để cuối cùng xây dựng và phát hành một mô hình đã được xác thực. Bước đầu tiên trong quá trình phân tích là kỹ thuật đặc trưng, đề cập đến tất cả những hoạt động được thực hiện để trích xuất và lựa chọn từ bộ dữ liệu các đặc trưng thông tin nhất để xây dựng các mô hình ML. Các nhiệm vụ kỹ thuật đặc trưng điển hình bao gồm chuẩn hóa và rời rạc hóa các đặc trưng số, tạo mã hóa một nóng và embedding cho các đặc trưng phân loại, xử lý cơ bản như tokenization cho các đặc trưng văn bản, và trích xuất các đặc trưng liên quan đến ngày và thời gian từ các cột có timestamp. Đối với các mô hình học sâu (ví dụ: mạng nơ-ron tích chập), kỹ thuật đặc trưng ít rõ ràng hơn và thường được pha trộn với giai đoạn tiếp theo. Trong quá trình huấn luyện mô hình, các mô hình được chọn được huấn luyện trên bộ dữ liệu đã được chú thích, sử dụng các đặc trưng đã chọn. Sau khi được xây dựng, các mô hình được đánh giá trong đánh giá mô hình sử dụng các chỉ số hiệu suất được xác định trước (ví dụ: log-loss, độ chính xác, AUC). Đây là một bước quan trọng thường liên quan đến đánh giá con người rộng rãi, với các nhà khoa học dữ liệu đánh giá các mô hình đầu ra để đảm bảo chúng đáp ứng các tiêu chí hiệu suất yêu cầu.

Phổ biến. Giai đoạn cuối cùng của quy trình phát triển học máy thường liên quan đến các kỹ sư ML và nhà phát triển phần mềm. Triển khai mô hình là bước mà mô hình học máy đã được đánh giá được tích hợp vào các môi trường sản xuất mục tiêu để thực hiện các dự đoán thực tế hoặc quyết định kinh doanh dựa trên dữ liệu mới. Trong quá trình giám sát mô hình, các kỹ sư liên tục giám sát các mô hình đã triển khai để phát hiện các lỗi có thể xảy ra và giảm hiệu suất trong quá trình thực thi thế giới thực (ví dụ: drift mô hình).

B. AutoML

AutoML là từ ghép của Automated và Machine Learning. Thuật ngữ này thường được sử dụng để chỉ các giải pháp nhằm mục đích dân chủ hóa ML cho những người không chuyên bằng cách giảm bớt khó khăn trong việc phát triển các mô hình ML và, đồng thời, tăng đáng kể năng suất của các chuyên gia.

AutoML đã đạt được nhiều động lực trong những năm gần đây, đặc biệt là sau khi phát hành các giải pháp thương mại từ các công ty lớn như Amazon, Microsoft và IBM. Mặc dù có sự quan tâm gần đây, AutoML không hoàn toàn là một xu hướng mới vì, từ những năm 1990, nhiều giải pháp đã được đề xuất cho việc tối ưu hóa Lựa chọn Thuật toán Kết hợp và Siêu tham số (CASH) tự động [17]. Về quy trình làm việc được mô tả trong Hình 1, các giải pháp AutoML thường tập trung vào tự động hóa các nhiệm vụ 'cốt lõi' của giai đoạn Phân tích (tức là kỹ thuật đặc trưng, huấn luyện mô hình và đánh giá), với ít chú ý hơn dành cho chuẩn bị và phổ biến (chúng tôi thảo luận thêm về điều này trong Phần III-A, nơi chúng tôi mô tả các công cụ được chọn cho phân tích của chúng tôi).

Nghiên cứu trong lĩnh vực AutoML cũng đã đạt được sức hút đáng kể dẫn đến nhiều cải tiến về cả hiệu suất và giảm thời gian thực thi [6]. Các nhà nghiên cứu đã công bố một số bài đánh giá so sánh hiệu suất của các mô hình được huấn luyện trên các bộ dữ liệu từ nhiều lĩnh vực khác nhau sử dụng các giải pháp AutoML. Các phát hiện được báo cáo khá đa dạng. Paldino và cộng sự [18] phát hiện rằng AutoML không vượt trội hơn các chiến lược dự báo thông thường được sử dụng trong phân tích chuỗi thời gian. Hanussek và cộng sự [22] đã sử dụng 4 công cụ AutoML để thực hiện các nhiệm vụ hồi quy và phân loại trên 12 bộ dữ liệu phổ biến khác nhau từ OpenML và phát hiện rằng các framework tự động hoạt động tốt hơn hoặc bằng với cộng đồng học máy trong 7 trên 12 trường hợp. Ferreira và cộng sự [23] báo cáo các phát hiện tương tự trong một nghiên cứu so sánh hiệu suất của 8 công cụ AutoML mã nguồn mở trên 12 bộ dữ liệu OpenML. Trong một nghiên cứu tương tự được tiến hành trên một tập hợp rộng hơn gồm 57 bộ dữ liệu phân loại và 30 bộ dữ liệu hồi quy được truy xuất từ OpenML, Balaji và Allen [24] báo cáo độ biến thiên cao trong kết quả. Gijsbers và cộng sự [15] đã xây dựng một framework để đánh giá các giải pháp AutoML và tiến hành so sánh 4 hệ thống trên 39 bộ dữ liệu với một bộ phân loại Random Forest được sử dụng làm baseline; với đủ ngân sách thời gian (4h), không có giải pháp AutoML nào vượt trội hơn bộ phân loại Random Forest. Guyon và cộng sự [16] phát hiện một khoảng cách hiệu suất giữa các pipeline mô hình được điều chỉnh bởi con người và được tạo bởi AutoML từ các phiên bản khác nhau của 'AutoML Challenge.' Cuối cùng, trong lĩnh vực SE, Tanaka và cộng sự [7] đã nghiên cứu hiệu quả của AutoML trong việc dự đoán số lượng lỗi trong các module phần mềm; sử dụng auto-sklearn, họ đạt được hiệu suất dự đoán tương tự với những kết quả được báo cáo trong các nghiên cứu trước đó.

C. XAI

Các kỹ thuật AI/ML nói chung không dễ hiểu, ngay cả đối với các chuyên gia. Điều này đã dẫn đến sự quan tâm ngày càng tăng đối với chủ đề XAI [25], tức là các kỹ thuật tập trung vào khả năng diễn giải (tức là khả năng hiểu được trực giác đằng sau đầu ra của mô hình) và khả năng giải thích (tức là khả năng hiểu được logic và cơ chế nội bộ của mô hình) [26]. Các giải thích mô hình có thể áp dụng cho một dự đoán đơn lẻ (cục bộ) hoặc cho toàn bộ hành vi của mô hình (toàn cục). Hơn nữa, khả năng diễn giải có thể trực tiếp, để chỉ việc sử dụng các mô hình tự giải thích có logic nội bộ trong suốt về bản chất và do đó có thể hiểu được nói chung (ví dụ: cây quyết định), hoặc hậu kỳ, liên quan đến việc sử dụng một phương pháp phụ trợ để giải thích hành vi của một mô hình phức tạp, hộp đen (ví dụ: điểm quan trọng đặc trưng, bản đồ nhiệt và mô tả ngôn ngữ tự nhiên về hoạt động nội bộ và logic quyết định của nó). Các tính năng diễn giải cũng có thể áp dụng cho bất kỳ loại thuật toán nào (bất khả tri) hoặc chỉ cho một họ (cụ thể mô hình). Cuối cùng, công bằng chỉ ra sự hiện diện của các tính năng để phát hiện và xử lý các bias (ví dụ: dân tộc, giới tính, tình trạng khuyết tật) trong các mô hình và dữ liệu huấn luyện.

III. THIẾT KẾ NGHIÊN CỨU

Trong công trình này, chúng tôi điều tra việc sử dụng các công cụ AutoML cho SE. Đặc biệt, chúng tôi đặt ra hai câu hỏi nghiên cứu sau:
• RQ1 – Các công cụ AutoML hoạt động như thế nào trên các nhiệm vụ SE?
• RQ2 – Các kỹ sư phần mềm hiện tại sử dụng AutoML như thế nào? Nó phù hợp với quy trình làm việc của họ như thế nào? Nhận thức của họ là gì?

Để trả lời các câu hỏi, chúng tôi tuân theo cách tiếp cận phương pháp hỗn hợp như được mô tả trong khung nghiên cứu hai giai đoạn trong Hình 2. Trong giai đoạn 1, để trả lời RQ1, chúng tôi thực hiện đánh giá định lượng về hiệu suất của các công cụ AutoML. Theo đó, trước tiên chúng tôi chọn 12 giải pháp AutoML, cả mã nguồn mở (4) và thương mại (8). Danh sách các công cụ được chọn được báo cáo trong Bảng I (xem Phần III-A). Sau đó, chúng tôi chọn một nhiệm vụ phân loại văn bản - tức là phân tích cảm xúc từ văn bản kỹ thuật - gần đây đã thu hút sự chú ý đáng kể trong cộng đồng nghiên cứu SE; theo ngữ cảnh, chúng tôi truy xuất hai bộ dữ liệu tổng cộng hơn 10k tài liệu được viết bởi các nhà phát triển (Phần III-B). Cuối cùng, chúng tôi áp dụng các công cụ đã chọn vào các bộ dữ liệu và so sánh hiệu suất của chúng bằng cách sử dụng các chỉ số tương tự được áp dụng trong các nghiên cứu đánh giá trước đó đã phát triển các công cụ cụ thể của SE cho các nhiệm vụ (Phần III-C).

Trong giai đoạn 2, để trả lời RQ2, chúng tôi thực hiện phân tích định tính nhằm thu thập hiểu biết về mức độ áp dụng hiện tại của AutoML tại các giai đoạn khác nhau của quy trình làm việc AI/ML và các nhận thức khác nhau tiềm năng của các kỹ sư phần mềm về việc sử dụng các giải pháp AutoML. Theo đó, chúng tôi đã tiến hành một cuộc khảo sát trực tuyến với 45 người tham gia; chúng tôi cũng tiến hành các cuộc phỏng vấn tiếp theo với 5 người tham gia để làm sâu sắc thêm các chủ đề liên quan xuất hiện từ phân tích khảo sát (Phần III-D).

A. Các Công Cụ AutoML

Bảng I liệt kê các đặc điểm chính của các công cụ được lấy mẫu để tiến hành đánh giá AutoML. Quá trình lấy mẫu các công cụ được tiến hành trong hai bước.

Đầu tiên, chúng tôi chọn các giải pháp thương mại. Như một khởi đầu, chúng tôi bắt đầu bằng cách bao gồm các giải pháp AutoML được cung cấp bởi các công ty được xác định là các nhà lãnh đạo trong Biểu đồ Phép thuật Gartner cho Nền tảng Khoa học Dữ liệu và ML, cụ thể là Amazon, Google, IBM và Microsoft. Sau đó, chúng tôi thực hiện tìm kiếm web trên Google sử dụng từ khóa 'automl' và 'autoai' và chọn bốn sản phẩm thương mại đầu tiên được tìm thấy, do đó tăng gấp đôi số lượng những sản phẩm đã được bao gồm (tổng cộng 8).

Thứ hai, để xác định các giải pháp mã nguồn mở, chúng tôi khám phá các trang chủ đề GitHub cho từ khóa 'automl' và 'autoai'; tổng cộng, chúng tôi xác định 831 repository. Vì các giải pháp OSS thường là các thư viện yêu cầu ít nhất một số coding, chúng tôi có cơ hội chọn chỉ giữ lại các công cụ được viết bằng Python (395). Hơn nữa, với sự phổ biến của chủ đề này, chúng tôi chọn các repository có 200+ sao (99), để đảm bảo loại bỏ các dự án nhỏ hoặc cá nhân. Ngoài ra, chúng tôi loại bỏ: (i) các dự án 'cũ', chỉ giữ lại các repository được cập nhật trong 12 tháng qua (79), được coi là một khoảng thời gian đủ, xem xét sự hype xung quanh chủ đề này; (ii) các kết quả dương tính giả, tức là các repository thực tế không chứa các công cụ AutoML (38); (iii) các repository có tệp README bị thiếu hoặc không bằng tiếng Anh (34); (iv) các thư viện chỉ hỗ trợ các nhiệm vụ Computer Vision hoặc một hoạt động quy trình làm việc cụ thể, như tối ưu hóa siêu tham số (HPO), tìm kiếm kiến trúc nơ-ron (NAS) và nén mô hình (28); (v) các giải pháp quy mô nhỏ hơn từ các nhà cung cấp của các giải pháp thương mại lớn hơn đã được chọn trong bước trước đó (25); (vi) các repository chứa tài nguyên cho mục đích giáo dục hoặc cuộc thi (23). Cuối cùng, chúng tôi kiểm tra thủ công tài liệu hiện có của các công cụ còn lại và chỉ giữ lại những công cụ hỗ trợ cả tính năng văn bản (NLP) và cung cấp các ví dụ đơn giản về cách tự động hóa một nhiệm vụ phân tích văn bản (xem mô tả bộ dữ liệu thí nghiệm và nhiệm vụ trong Phần III-B). Cuối bước này, chúng tôi đã chọn bốn công cụ AutoML mã nguồn mở (được đánh dấu bằng * trong Bảng I).

Tiếp theo, chúng tôi nhận xét ngắn gọn về các đặc điểm của mười hai công cụ được chọn, được nhóm theo loại.

Các giải pháp mã nguồn mở. Chúng tôi quan sát thấy rằng các giải pháp mã nguồn mở chỉ có thể được chạy tại chỗ và chỉ có thể được sử dụng như các API (tức là yêu cầu phát triển mã) hoặc ứng dụng dòng lệnh (AutoGoal và Ludwig). Tất cả các giải pháp đều hỗ trợ các loại dữ liệu hình ảnh, bảng và văn bản. Về các giai đoạn và hoạt động được nóng bật trong quy trình làm việc ML điển hình trong Hình 1, tất cả các giải pháp này đều hỗ trợ đầy đủ giai đoạn phân tích như các hoạt động cốt lõi của phát triển hệ thống hỗ trợ ML. Về chuẩn bị, chúng hỗ trợ làm sạch dữ liệu nhưng không cung cấp hỗ trợ cho gắn nhãn dữ liệu có hỗ trợ ML. Ngoài ra, về giai đoạn phổ biến, không có giải pháp được lấy mẫu nào hỗ trợ triển khai và giám sát mô hình, ngoại trừ Ludwig, cho phép các pipeline mô hình được phục vụ bằng cách tạo ra một REST API với một lệnh. Cuối cùng, không có giải pháp mã nguồn mở nào hiện hỗ trợ khả năng giải thích.

Các giải pháp thương mại. Bối cảnh của các giải pháp AutoML thương mại khác với trước đó. Đầu tiên, các giải pháp này chạy trên cơ sở hạ tầng cloud với ngoại lệ duy nhất là RapidMiner Studio, cũng là giải pháp desktop duy nhất; tất cả các nền tảng khác đều là ứng dụng web cũng cung cấp truy cập lập trình qua API. Giai đoạn phân tích mô hình cũng được các giải pháp thương mại hỗ trợ tốt. So với các giải pháp OSS, chúng hỗ trợ tốt hơn giai đoạn chuẩn bị, bằng cách cũng cung cấp hỗ trợ cho gắn nhãn dữ liệu có hỗ trợ, và phổ biến, vì tất cả đều cho phép triển khai và giám sát mô hình một cú nhấp chuột.

Ngoài ra, ngoại trừ RapidMiner Studio, tất cả các nền tảng AutoML thương mại được đánh giá đều hỗ trợ XAI, mặc dù ở mức độ hơi khác nhau. Chúng tôi phát hiện rằng, nói chung, các giải pháp này đảm bảo công bằng bằng cách cung cấp các tính năng để phát hiện bias mô hình/dữ liệu và triển khai cả các tính năng phụ thuộc và độc lập mô hình (bất khả tri). Về phạm vi giải thích, chúng cung cấp cả giải thích cục bộ và toàn cục. Về hỗ trợ khả năng diễn giải, các mô hình tự giải thích thường được hỗ trợ do đó, ngoại trừ BigML, các công cụ này tập trung vào việc cung cấp giải thích hậu kỳ.

Tóm lại, chúng tôi lưu ý rằng, so với các giải pháp mã nguồn mở, các nền tảng AutoML thương mại cung cấp các giải pháp không cần mã và từ đầu đến cuối hơn - vì chúng bao phủ giai đoạn phổ biến, cung cấp tự động hóa triển khai và giám sát mô hình - và cũng hỗ trợ XAI ở các mức độ khác nhau.

B. Bộ Dữ Liệu

Chúng tôi đã chọn hai bộ dữ liệu phân loại văn bản từ lĩnh vực SE. Bộ dữ liệu đầu tiên được truy xuất từ Novielli và cộng sự [27] và chứa 7.122 câu từ các bình luận pull-request và commit của GitHub được chú thích thủ công với nhãn cực tính cảm xúc dựa trên framework của Shaver và cộng sự [28] (28,3% tích cực, 29,3% tiêu cực và 42,4% trung tính). Bộ dữ liệu thứ hai được truy xuất từ Ortu và cộng sự [29] và bao gồm khoảng 6.000 bình luận issue và câu được tác giả bởi các nhà phát triển phần mềm của các dự án phần mềm mã nguồn mở phổ biến, như Apache và Spring. Bộ dữ liệu Jira này được chú thích thủ công với sáu nhãn cảm xúc rời rạc cũng từ framework của Shaver và cộng sự [28] (tức là yêu, vui, tức giận, sợ hãi, ngạc nhiên và buồn bã), trong khi nghiên cứu này tập trung vào cực tính cảm xúc (tức là giá trị tích cực, tiêu cực hoặc trung tính được truyền tải bởi các văn bản). Do đó, các cảm xúc tích cực, tức là 'yêu' và 'vui', được chuyển đổi thành nhãn cực tính tích cực. Tương tự, 'buồn bã', 'tức giận' và 'sợ hãi' được ánh xạ đến lớp cực tính tiêu cực. Thay vào đó, các trường hợp được gắn nhãn là 'ngạc nhiên' bị loại bỏ vì nhãn cảm xúc này có thể được coi là tích cực hoặc tiêu cực, tùy thuộc vào kỳ vọng của tác giả của một văn bản. Không giống như bộ dữ liệu GitHub, bộ dữ liệu Jira không được cân bằng tốt (31,3% tích cực và 68,7% tiêu cực).

C. Chỉ Số

Để đánh giá hiệu suất của các công cụ AutoML, chúng tôi dựa vào các chỉ số Precision (P), Recall (R) và F1-measure (F) tương tự được sử dụng trong các công trình trước đó, do đó cho phép so sánh hiệu suất. Chúng tôi cũng báo cáo các chỉ số trung bình macro và micro để hiển thị điểm hiệu suất phân loại tổng thể qua các lớp. Trung bình macro tính trung bình các chỉ số một cách bình đẳng qua các lớp, trong khi trung bình micro tính toán điểm số qua các điểm dữ liệu trong tất cả các lớp, do đó nó có xu hướng bị ảnh hưởng bởi hiệu suất của lớp đa số [30].

Vì các công cụ có thể được cấu hình để tạo ra các mô hình tối đa hóa độ chính xác phân loại đối với một chỉ số cụ thể, để cho phép so sánh công bằng, chúng tôi chọn tối ưu hóa đối với F1-measure.

Về bộ dữ liệu cực tính cảm xúc, các chỉ số tương tự đã được Calefato và cộng sự [31] sử dụng để đánh giá hiệu suất của Senti4SD, một bộ phân loại cụ thể của SE, cho mỗi lớp trong ba lớp (tích cực, tiêu cực và trung tính). Về bộ dữ liệu cảm xúc, thay vào đó, Ortu và cộng sự [29] không cung cấp đánh giá hiệu suất phân loại cùng với tiêu chuẩn vàng Jira; tuy nhiên, hiệu suất phân loại về Precision, Recall và F-measure được báo cáo trong nghiên cứu đánh giá bởi Novielli và cộng sự [27].

Vì mục đích hoàn thiện, chúng tôi cũng so sánh kết quả của chúng tôi với những kết quả được báo cáo trong Zhang và cộng sự [32], những người cho thấy rằng các mô hình dựa trên transformer được huấn luyện trước đã được tinh chỉnh (ví dụ: BERT) vượt trội hơn các công cụ phân tích cảm xúc cụ thể của SE hiện có.

Cuối cùng, để đảm bảo so sánh công bằng giữa các công cụ, chúng tôi đã thay đổi cấu hình của chúng một cách thủ công, do đó tạo ra một thiết lập thí nghiệm chung giống với công trình trước đó bằng cách: (i) sử dụng một chỉ số tối ưu hóa chung trong giai đoạn phân tích mô hình - chúng tôi đã chọn tối đa hóa F1-score; (ii) thiết lập cùng một phân chia dữ liệu train/test - cụ thể, 70% huấn luyện, 20% xác thực và 10% test. Vì không phải lúc nào cũng có thể thiết lập ngân sách thời gian, chúng tôi bỏ qua hiệu suất thời gian trong đánh giá của chúng tôi vì thời gian thực thi không thể so sánh được.

D. Khảo Sát & Phỏng Vấn

Tuyển dụng. Để tuyển dụng người tham gia khảo sát, chúng tôi tìm kiếm các kỹ sư ML và phần mềm có kinh nghiệm thực tế về AutoML. Chúng tôi tuyển dụng người tham gia thông qua các thông báo công khai được đăng trên Twitter, các subreddit liên quan và các nhóm LinkedIn cũng như thông qua mạng lưới liên hệ cá nhân. Không có bồi thường tiền bạc nào được cung cấp.

Khảo sát. Để tạo và lưu trữ khảo sát web, chúng tôi đã sử dụng Google Forms. Tổng cộng, khảo sát chứa 43 câu hỏi được cấu trúc thành bốn phần (xem tài liệu bổ sung trực tuyến).² Hai phần đầu tiên nhằm mục đích thu thập thông tin nhân khẩu học của người tham gia. Chúng tôi yêu cầu người trả lời báo cáo kinh nghiệm làm việc tổng thể của họ, kinh nghiệm với phát triển hệ thống dựa trên AI/ML, vai trò công việc cũng như quy mô nhóm điển hình, đặc điểm công ty, loại dự án điển hình và quy trình phát triển; những người tham gia không có kinh nghiệm gì với các dự án AI/ML được chuyển hướng đến một trang loại bỏ. Hơn nữa, chúng tôi sàng lọc người tham gia dựa trên sự quen thuộc và kinh nghiệm của họ với AutoML và thu thập thông tin về thái độ chung của họ đối với việc sử dụng các công cụ AutoML. Phần thứ ba được điền có điều kiện bởi những người trả lời báo cáo có một số quen thuộc và kinh nghiệm với AutoML; nó thu thập phản hồi về cách AutoML hiện phù hợp với quy trình phát triển của họ, nói chung, và nhiệm vụ cụ thể của họ, nói riêng, cũng như các điểm ma sát và thách thức, nếu có. Phần thứ tư được điền bởi tất cả người trả lời khảo sát vì nó nhằm mục đích thu thập hiểu biết về cách người tham gia muốn sử dụng nó, các giai đoạn quy trình làm việc và bước nào họ muốn các công cụ AutoML hỗ trợ tốt hơn, và bất kỳ tính năng bị thiếu nào. Khảo sát kết thúc bằng một câu hỏi mở để thu thập bất kỳ phản hồi nào khác từ người tham gia và sự đồng ý của họ để được liên hệ cho một cuộc phỏng vấn tiếp theo. Cuối cùng, hai tác giả tham gia vào một quá trình mã hóa quy nạp để trích xuất và tổng hợp lặp đi lặp lại thông qua thảo luận các chủ đề chung xuất hiện từ cả phân tích các câu hỏi mở.

Phỏng vấn tiếp theo. Chúng tôi đã tiến hành các cuộc phỏng vấn tiếp theo với những người trả lời khảo sát đã đồng ý; họ đồng ý làm rõ thêm về câu trả lời của mình và suy ngẫm về các chủ đề xuất hiện từ phân tích khảo sát qua email hoặc chat. Sau khi hoàn thành các cuộc phỏng vấn, hai tác giả đã phân tích các câu trả lời bằng văn bản để xác định và trích xuất các đoạn trích được coi là mở rộng thêm các chủ đề liên quan được xác định từ phân tích các câu trả lời mở.

²https://doi.org/10.6084/m9.figshare.22640248

IV. KẾT QUẢ

A. Phân Tích Định Lượng

Trong phần này, chúng tôi báo cáo hiệu suất của mười hai công cụ AutoML trên hai bộ dữ liệu phân tích cảm xúc được mô tả trước đó. Kết quả được báo cáo trong Bảng II. Đối với mỗi bộ dữ liệu, chúng tôi làm nổi bật bằng chữ đậm hiệu suất tốt nhất về hai chỉ số chính (tức là điểm F1 trung bình macro và micro).

Bộ dữ liệu GitHub. Bộ dữ liệu GitHub là bộ cân bằng hơn trong hai bộ được phân tích trong đánh giá này. Công trình trước đó của Novielli và cộng sự [27] và Zhang và cộng sự [32] báo cáo hiệu suất về điểm F1 trung bình micro và macro giữa 0,91 và 0,92, mà chúng tôi sử dụng làm tham chiếu cho hiệu suất tối tân trên bộ dữ liệu. Trong trường hợp của Zhang và cộng sự [32], hiệu suất tốt nhất được báo cáo đã đạt được sử dụng mô hình transformer được huấn luyện trước RoBERTa; trong trường hợp của Novielli và cộng sự [27], kết quả tốt nhất được báo cáo đề cập đến công cụ Senti4SD. DataRobot AI Cloud đã đạt được kết quả tốt nhất trong số các giải pháp AutoML. Nó hoạt động tốt như các transformers được huấn luyện trước được đánh giá trong Zhang và cộng sự [32] và đạt được Recall trung bình macro nhỏ hơn một chút so với công cụ Senti4SD được đánh giá trong Novielli và cộng sự [27] (0,91 so với 0,92). Công cụ hoạt động tốt thứ hai là AutoKeras, đã đạt được điểm 0,91 trên tất cả các chỉ số. Kết quả tệ nhất đã đạt được bởi IBM Watson AutoAI, đã đạt được 0,58 micro-average và điểm trung bình macro dao động giữa 0,55 và 0,58, và H20 Driverless AI, đã đạt được 0,67 micro-average và điểm trung bình macro dao động giữa 0,65 và 0,67. Về các công cụ còn lại, chúng tôi quan sát thấy một tập hợp con các giải pháp có điểm F1 micro-average dao động giữa 0,70 và 0,75 (tức là AutoGluon, Amazon SageMaker Autopilot và BigML) và một tập hợp con khác bao gồm các công cụ với hiệu suất giữa 0,81 và 0,89 (tức là AutoGoal, Ludwig AutoML, MS Azure AutoML và Google Vertex AI).

Bộ dữ liệu Jira. Bộ dữ liệu Jira ít cân bằng hơn bộ dữ liệu GitHub, điều này có thể giải thích hiệu suất tệ hơn nói chung. Novielli và cộng sự [27] báo cáo điểm micro-average là 0,86 và điểm trung bình macro giữa 0,78 và 0,83. AutoKeras, BigML và Google Vertex AI vượt trội hơn một chút so với các công cụ cụ thể của SE khi chúng đạt điểm micro-average là 0,87, tiếp theo là MS Azure AutoML và Amazon SageMaker Autopilot (0,86). Hiệu suất của các công cụ AutoML về Precision, Recall và F1 trung bình macro, mặc dù đa dạng, bằng hoặc tốt hơn (giá trị giữa 0,80 và 0,85) hiệu suất tốt nhất được báo cáo trong Novielli và cộng sự [27] (giữa 0,80 và 0,83). Đối với bộ dữ liệu này, hiệu suất tệ nhất là những hiệu suất đạt được bởi IBM Watson AutoAI (điểm trung bình macro giữa 0,57 và 0,73, micro-average 0,76) và AutoGoal (khoảng 0,70 điểm trung bình macro, 0,75 micro-average).

Tổng thể, chúng tôi phát hiện rằng AutoKeras (mã nguồn mở) và DataRobot AI Cloud (thương mại) hoạt động tốt nhất trên cả hai bộ dữ liệu; cả hai công cụ AutoML đều đạt được điểm số tốt nhất với các mô hình mạng nơ-ron, đạt được hiệu suất ngang bằng với các công cụ nghiên cứu cụ thể của SE cho bộ dữ liệu GitHub và hơi tốt hơn cho bộ dữ liệu Jira. Các giải pháp khác như Google Vertex AI và MS Azure AutoML (thương mại) và Ludwig AutoML (mã nguồn mở) hoạt động tốt trung bình trên cả hai bộ dữ liệu; các giải pháp này đã xây dựng một mạng nơ-ron hoặc một mô hình máy tăng cường gradient nhẹ/cực đại. IBM Watson AutoAI là công cụ AutoML hoạt động tệ nhất một cách nhất quán trên cả hai bộ dữ liệu.

B. Phân Tích Định Tính

1) Khảo sát: Chúng tôi nhận được 51 câu trả lời. Tuy nhiên, 6 câu trả lời đến từ những người trả lời báo cáo đã nghe về AutoML nhưng chưa bao giờ sử dụng nó; do đó, chúng tôi loại trừ họ và phân tích được báo cáo tiếp theo tập trung vào n = 45 đối tượng còn lại.

Bối cảnh của người tham gia. Ở đây chúng tôi kiểm tra xem liệu những người tham gia được lấy mẫu có đại diện cho quần thể mục tiêu (tức là các kỹ sư phần mềm làm việc trên các dự án AI/ML và có kinh nghiệm với AutoML) hay không. Các đối tượng tự nhận diện chủ yếu là nam (39, 87%) và có độ tuổi trong khoảng 26-35 (25, 56%) và 36-45 (14, 31%). Họ đến từ các quốc gia khác nhau, đặc biệt là Ý (9, 20%), Brazil (8, 18%), Hoa Kỳ (7, 16%) và Canada (6, 13%).

Những người trả lời báo cáo chủ yếu có nền tảng về CS, cụ thể là PhD (16, 36%), MSc (10, 22%) hoặc BSc (6, 13%); những người trả lời còn lại có MSc về AI/Computational Intelligence (7, 16%), BSc về Thống kê (4, 9%) và PhD về Vật lý (2, 4%). Khoảng một nửa trong số họ có kinh nghiệm làm việc tổng thể từ 5-10 năm (17, 26%) hoặc hơn 10 năm (14, 22%). Trên thang điểm Likert năm điểm (1=Không có kinh nghiệm gì, 5=Rất có kinh nghiệm) trong các thực hành SE (ví dụ: thiết kế, triển khai, thử nghiệm và bảo trì các ứng dụng phần mềm phức tạp), hầu hết họ báo cáo mức độ chuyên môn cao (18, 40%) hoặc rất cao (15, 33%). Về AI/ML cụ thể, những người trả lời chủ yếu báo cáo có một số kinh nghiệm (tức là 3-4 năm, 20, 45%) hoặc kinh nghiệm đáng kể (tức là 5-10 năm, 15, 33%), với những người còn lại (10, 22%) có kinh nghiệm hạn chế (1-2 năm). Hầu hết những người trả lời xác định các hoạt động công việc của họ (câu trả lời không loại trừ lẫn nhau) như liên quan đến các vị trí kỹ sư ML (34), tiếp theo là MLOps (15), Nhà nghiên cứu (7) và Nhà khoa học Dữ liệu (7) trong một công ty công nghệ (67%) hoặc phòng thí nghiệm nghiên cứu phi thương mại/học thuật (24%).

Quy mô của các công ty mà những người trả lời làm việc rất đa dạng; khoảng một nửa số người trả lời đang làm việc cho các công ty rất lớn (10.000+ nhân viên, 27%) hoặc rất nhỏ (10-50 nhân viên, 25%). Hầu hết các đối tượng (17, 38%) làm việc trong các nhóm từ 6 đến 9 thành viên; các nhóm rất nhỏ (2-3 thành viên) và rất lớn (16+) cũng phổ biến (27% và 22% số phản hồi, tương ứng). Điều này cho thấy rằng AutoML là một công nghệ hấp dẫn cho tất cả các loại công ty, bất kể quy mô của chúng. Một nửa số người trả lời báo cáo rằng khoảng 35-60% thành viên nhóm của họ (trung vị=3) có nền tảng SE mạnh. Hầu hết các nhóm họ làm việc là các nhóm cân bằng tốt, đa ngành (23, 51%) hoặc các nhóm được tạo thành chủ yếu từ những người AI/ML (17, 38%); ít phổ biến hơn là các trường hợp mà hầu hết thành viên nhóm là kỹ sư phần mềm (5, 11%).

Những người trả lời chủ yếu làm việc trên các dự án trong lĩnh vực chăm sóc sức khỏe (19), ngân hàng & bảo hiểm (16) và viễn thông (15), nơi các mô hình AI/ML là một phần của sản phẩm (10, 22%) hoặc được tích hợp vào một hệ thống phần mềm lớn hơn, sẵn sàng sản xuất (25, 56%). Các trường hợp sử dụng chính cho các dự án AI/ML là phân loại (15), dự đoán (13), dự báo (12), đánh giá rủi ro (11) và phát hiện bất thường (10). Độ dài điển hình của các dự án là 4-6 tháng (14, 31%) và 7-12 tháng (13, 29%); ít phổ biến hơn là các dự án dài hơn một năm (11, 24%) hoặc chỉ mất 2-3 tháng (7, 16%). Về quy trình làm việc tham chiếu AI/ML trong Hình 1, những người trả lời báo cáo tham gia chủ yếu vào giai đoạn phân tích, tức là kỹ thuật đặc trưng (39), đánh giá mô hình (34) và huấn luyện (30). Các hoạt động phổ biến cũng phổ biến, tức là triển khai mô hình (22) và giám sát (13), trong khi sự tham gia vào các hoạt động chuẩn bị, tức là làm sạch dữ liệu (6), gắn nhãn (7) và thu thập (8), ít phổ biến hơn nhiều. Chỉ có một người trả lời báo cáo tham gia vào toàn bộ quá trình từ đầu đến cuối.

Sử dụng và tính năng của AutoML. Tổng thể, khảo sát tiết lộ rằng trong số các kỹ sư phần mềm có sự quan tâm đáng kể đến các giải pháp AutoML, cho dù được áp dụng thường xuyên (15, 33%) hay trên các dự án được chọn (23, 51%), với những người trả lời còn lại (7, 16%) báo cáo đã sử dụng nó ít nhất trong các dự án nội bộ. Họ báo cáo sử dụng hoặc đã thử nghiệm với cả các giải pháp cloud độc quyền (theo thứ tự phổ biến MS Azure AutoML, Amazon SageMaker AutoPilot và IBM Watson AutoAI) và các công cụ mã nguồn mở (AutoKeras, TPOT, auto-sklearn, nni và Alteryx); các lý do được đưa ra khác nhau: đối với các công cụ độc quyền, các lý do là vendor lock-in và niềm tin của khách hàng vào các công ty nổi tiếng; đối với các giải pháp mã nguồn mở, đó là tính linh hoạt trong việc thích ứng với các quy trình làm việc tùy chỉnh.

Bảng I cho thấy rằng các tính năng trong giai đoạn phân tích (kỹ thuật đặc trưng cộng với huấn luyện và đánh giá mô hình) được hỗ trợ rộng rãi nhất trong số các công cụ được xem xét. Do đó, không có gì ngạc nhiên khi những người trả lời bảng câu hỏi báo cáo chủ yếu sử dụng AutoML cho huấn luyện mô hình (45, 100%), đánh giá mô hình (33, 73%) và kỹ thuật đặc trưng (20, 44%). Đáng chú ý, việc sử dụng AutoML cho triển khai và giám sát mô hình (17, 20%) phổ biến hơn đáng kể so với các hoạt động chuẩn bị dữ liệu (5, 10%). Không có người tham gia nào báo cáo sử dụng AutoML ở chế độ tự động hoàn toàn, với con người ngoài vòng lặp. Hầu hết những người trả lời (22, 49%) sử dụng AutoML ở chế độ tự động hóa do con người điều khiển, theo đó họ có thể chọn các phương pháp và tham số trước khi thực thi; những người còn lại sử dụng nó ở chế độ tự động hóa do hệ thống đề xuất (12, 27%, tức là hệ thống quyết định về tham số/phương pháp, và cần có sự chấp thuận của con người trước khi thực thi) và tự động hóa do hệ thống điều khiển (9, 20%, tức là hệ thống thực thi tự động, và con người trong vòng lặp và có thể can thiệp bất cứ lúc nào). Tuy nhiên, khi chọn một giải pháp AutoML (Hình 3), những người trả lời đánh giá cao tính linh hoạt để tùy chỉnh và thích ứng quy trình làm việc với nhu cầu của họ (78% hoặc rất cao hoặc cao) và khả năng tự động hóa (71% hoặc rất cao hoặc cao) hơn là dễ sử dụng (40%). Họ báo cáo có mức độ tin tưởng khá cao vào kết quả thu được bằng cách sử dụng các công cụ AutoML (73% hoặc rất cao hoặc cao). Ngoài ra, ít người trả lời thấy quá trình minh bạch (51% hoặc rất thấp hoặc thấp) và họ cũng hơi mâu thuẫn khi nói đến khả năng diễn giải/giải thích của kết quả thu được qua AutoML.

2) Các Chủ đề Nổi lên: Năm trong số tám người trả lời đã đồng ý tham gia cuộc phỏng vấn tiếp theo. Tất cả họ đều chọn tiến hành qua email. Như vậy, chúng tôi đã định nghĩa và gửi email bốn câu hỏi chính; sau đó, họ trả lời qua email và chúng tôi phản hồi lại để yêu cầu làm rõ thêm khi cần thiết. Ở đây chúng tôi báo cáo phân tích các câu trả lời cho cả các câu hỏi mở từ khảo sát và các cuộc phỏng vấn tiếp theo (xem tài liệu bổ sung). Chúng tôi đã tuân theo chiến lược giải thích tuần tự theo đó trước tiên chúng tôi thực hiện mã hóa mở các phản hồi cho các câu hỏi khảo sát mở để xác định các chủ đề chung; sau đó, chúng tôi đã tạo ra các câu hỏi đặc biệt cho những người được phỏng vấn để thu thập thêm hiểu biết. Chúng tôi có thể xác định ba chủ đề nổi lên, mà chúng tôi minh họa tiếp theo bằng cách cung cấp các đoạn trích liên quan. Chúng tôi sử dụng mã Px để báo cáo các trích dẫn từ những người tham gia khảo sát và PIy để phân biệt những người cũng đồng ý tham gia cuộc phỏng vấn tiếp theo (Bảng III cung cấp tổng quan về những người được phỏng vấn).

Các thành viên nhóm AI/ML đảm nhận các vai trò khác nhau. Làm việc trên các dự án AI/ML là một hoạt động nhóm liên quan đến các hoạt động và kỹ năng khác nhau. Tuy nhiên, chúng tôi phát hiện rằng trong các nhóm này, vai trò thành viên có xu hướng mờ nhạt; đặc biệt là trong các nhóm nhỏ hơn, không hiếm khi những người tham gia khảo sát thực hiện các hoạt động thuộc các giai đoạn khác nhau của quy trình làm việc AI/ML, đặc biệt là phân tích và phổ biến; (chỉ một số ít báo cáo tham gia vào các hoạt động chuẩn bị dữ liệu). Điều này có tác động đáng kể đến kỳ vọng và tính hữu ích được nhận thức của AutoML.

Mặc dù hiếm khi tham gia vào nó, những người tham gia hoài nghi rằng AutoML có thể bao giờ tự động hóa các hoạt động chuẩn bị dữ liệu (P2, P11, P21, P33):

"Tôi không tham gia, ít nhất là không thường xuyên, nhưng những người dữ liệu trong nhóm của tôi nói với tôi rằng hỗ trợ [AutoML] là rác. Tôi không nghĩ thậm chí có thể tự động hóa nó. Tôi ước, nhưng nó quá phụ thuộc vào lĩnh vực..." (PI12)

Giai đoạn phân tích là giai đoạn mà AutoML dường như hỗ trợ tốt hơn và mà hầu hết những người trả lời báo cáo hài lòng, mặc dù một số (P14, P31) cảm thấy rằng "kỹ thuật đặc trưng có thể được cải thiện" (P8). Giai đoạn phổ biến là giai đoạn có nhiều chỗ để cải thiện hơn. Phân tích của chúng tôi gợi ý rằng sự thiếu hụt này có thể là do các mô hình ML không phải lúc nào cũng được triển khai vào các hệ thống sản xuất ("đôi khi khách hàng của chúng tôi chỉ muốn chúng tôi khám phá hiểu biết về các đặc trưng và mối quan hệ giữa chúng," P26). Tuy nhiên, một số người trả lời (P4, PI12, P16, PI23) đã lên tiếng về việc muốn thấy hỗ trợ tự động hóa tốt hơn cho triển khai và giám sát mô hình:

"Các giải pháp cloud buộc bạn sử dụng cơ sở hạ tầng của họ. [Chúng] không giúp chúng tôi triển khai nơi chúng tôi muốn. Chúng không linh hoạt. Với tư cách là một kỹ sư ML, tôi muốn chọn nơi triển khai và cách phục vụ mô hình. Chúng tôi có cơ sở hạ tầng và dashboard giám sát riêng mà chúng tôi muốn tiếp tục sử dụng." (PI23)

"[AutoML] chỉ là một tên thương mại cho một phiên bản được tôn vinh của các công cụ HPO và CASH. Tự động hóa hiện tại chỉ xảy ra ở giai đoạn phân tích [...] Các hoạt động khác [không phải] là công dân hạng nhất." (P16)

ML-as-a-Service so với các giải pháp nội bộ. Một chủ đề khác xuất hiện là các giải pháp cloud cung cấp ML as a service có thể hấp dẫn hơn đối với các nhóm nhỏ hơn, nơi vai trò có xu hướng mờ nhạt:

"Các công cụ MLaaS thương mại này buộc bạn phải chấp nhận giải pháp của họ [từ đầu đến cuối]. Quản lý và khách hàng tin tưởng chúng vì chúng được bán bởi các nhà cung cấp nổi tiếng. Nhưng đã từng làm việc trong các nhóm có quy mô khác nhau trên các dự án khác nhau, tôi cảm thấy rằng những cái đó hữu ích hơn trong các tình huống mà họ yêu cầu bạn xây dựng một PoC nhanh [...] để cho khách hàng thấy mô hình có thể tốt như thế nào và sau đó cho các nhà khoa học dữ liệu một baseline để làm việc nếu dự án được phê duyệt." (PI40)

Sự thiếu linh hoạt này không được những người trả lời làm việc trong các nhóm lớn hơn với các vai trò được định nghĩa rõ ràng hơn đánh giá cao. Họ muốn thấy AutoML không phải là một công cụ, mà là một bộ sưu tập ("các công cụ phạm vi nhỏ hơn, thứ gì đó để cắm vào quy trình làm việc của riêng bạn", P17) hoặc như một 'máy tạo' của các quy trình làm việc tùy chỉnh, cụ thể dự án thay vì một 'máy tự động':

"Chúng tôi đã mày mò với nhiều lựa chọn AutoML trước khi quyết định xây dựng một cái xung quanh các thư viện và công cụ OSS mà chúng tôi đã sử dụng và thích. Nó thực sự giống như một máy tạo quy trình làm việc AutoML hơn." (PI23)

Căng thẳng giữa mong muốn tự động hóa và quyền tự chủ của người dùng. Phân tích tiết lộ sự tồn tại của một sự tương phản giữa những người trả lời giữa nhu cầu kiểm soát của con người và mong muốn tự động hóa cao hơn. Đặc biệt, các phát hiện của chúng tôi gợi ý rằng mong muốn tự động hóa cao hơn thay đổi theo các giai đoạn của quy trình làm việc ML mà những người tham gia tham gia và cũng xung đột với khó khăn trong việc thực sự đạt được nó. Như đã báo cáo trước đó, chuẩn bị dữ liệu đặc biệt phụ thuộc vào lĩnh vực, và mặc dù những người tham gia vào chuẩn bị dữ liệu mong muốn tự động hóa nhiều hơn, tự động hóa việc trích xuất kiến thức lĩnh vực vẫn là một nhiệm vụ cấm đoán. Giai đoạn phân tích là giai đoạn đạt được mức độ tự động hóa cao nhất (P9, P16, P25, P28); tuy nhiên, những người trả lời cũng nhận thức được nhu cầu sử dụng AutoML ở "chế độ cruise control" (P25), nơi con người "ở lại trong vòng lặp để giám sát và điều khiển hệ thống, và có thể nhận được giải thích nếu cần" (PI29), do các yêu cầu quy định và tổ chức. Với sự hiện diện lớn của các kỹ sư ML và MLOps trong số những người trả lời, không có gì ngạc nhiên khi chúng tôi thấy những người tham gia háo hức đạt được hỗ trợ tốt hơn cho việc tự động hóa giai đoạn phổ biến (PI12, P16, PI23, PI44), nơi giám sát của con người được nhận thức là cả ít có vấn đề hơn và nội tại đối với giám sát:

"Tự động hóa hoàn toàn là có vấn đề, với các mối quan tâm đạo đức và quy định [...]. Vì vậy bạn muốn kiểm soát khi bạn cần hiểu dữ liệu, hiểu mô hình. Nhưng không có vấn đề như vậy với cái bạn gọi là phổ biến. Triển khai tự động tốt hơn (nếu không hoàn toàn) sẽ tuyệt vời... ở đó kiểm soát của người dùng chỉ đi kèm với giám sát." (PI44)

"Phổ biến [được hỗ trợ kém] vì hầu hết các mô hình hiếm khi được đưa vào sản xuất. Tuy nhiên, đối với chúng tôi, các kỹ sư ML và MLOps có rất nhiều việc tạo mã liên quan để tích hợp chúng vào hệ thống cuối cùng và triển khai toàn bộ. Có rất nhiều lặp lại ở đó có thể được tự động hóa với AutoML." (PI12)

V. THẢO LUẬN

Trong nghiên cứu này, chúng tôi đã điều tra hai câu hỏi nghiên cứu, cụ thể là RQ1 (đánh giá các công cụ AutoML) và RQ2 (góc nhìn của các kỹ sư phần mềm về việc sử dụng AutoML). RQ1 được trả lời trong Phần V-A, trong khi các phát hiện liên quan đến RQ2 được thảo luận trong Phần V-B và V-C.

A. AutoML như một Giải pháp để Tăng cường Nghiên cứu SE

Đánh giá của chúng tôi tiết lộ rằng, trung bình, AutoKeras (mã nguồn mở) và DataRobot AI Cloud (thương mại) là các giải pháp AutoML hoạt động tốt nhất cho phân tích cảm xúc trên hai bộ dữ liệu được phân tích. Các công cụ này hoạt động ngang bằng với cả các mô hình dựa trên transformer được huấn luyện trước và các công cụ nghiên cứu cụ thể của SE trong trường hợp bộ dữ liệu GitHub, và hơi tốt hơn trong trường hợp bộ dữ liệu Jira.

Mặc dù không có tiêu chuẩn vàng hoặc ngưỡng cụ thể của các chỉ số đánh giá khác nhau để quyết định liệu một công cụ phân tích cảm xúc cụ thể của SE có thể được đưa vào sử dụng thực tế hay không, kết quả thí nghiệm của chúng tôi cho thấy rằng việc sử dụng AutoML là thực tế cho các nhiệm vụ phân tích cảm xúc trong SE. Đáng chú ý rằng hiệu suất của công cụ AutoML tốt nhất ngang bằng với kết quả tối tân và các công cụ nghiên cứu cụ thể của SE được xây dựng bởi các chuyên gia con người, những người đã giám sát tất cả các bước trong pipeline phát triển. Ngược lại, Zöller và Huber [17] đã so sánh hiệu suất của một tập hợp năm công cụ AutoML (khác với những công cụ được đánh giá trong nghiên cứu này) với một vài notebook Kaggle chứa các pipeline hoạt động tốt nhất được phát triển bởi các chuyên gia con người trên một vài bộ dữ liệu công khai; họ phát hiện rằng các mô hình được xây dựng bởi các chuyên gia con người vượt trội hơn các công cụ AutoML, mà nói chung đạt được hiệu suất tầm trung so với. Như vậy, mặc dù hiệu quả có thể thay đổi với công cụ cụ thể và các nhiệm vụ khác ngoài phân tích cảm xúc, chúng tôi đề xuất các nhà nghiên cứu xem xét việc sử dụng các giải pháp AutoML để huấn luyện các mô hình ban đầu làm baseline hoặc điểm khởi đầu cho công việc tương lai. Cuối cùng, chúng tôi lưu ý rằng đánh giá của chúng tôi ở đây chỉ liên quan đến giai đoạn phân tích. Chúng tôi bỏ qua các giai đoạn chuẩn bị và phổ biến, mà chúng tôi thảo luận tiếp theo.

Hàm ý. Lặp lại lời của Wang và cộng sự [10] và Crisan và Fiore-Gartland [33], các phát hiện của chúng tôi khuyến khích các nhà nghiên cứu SE sử dụng AutoML để tăng cường các hoạt động nghiên cứu của họ; đặc biệt, bằng cách tự động hóa việc xây dựng và đánh giá mô hình, họ có thể chi tiêu tài nguyên (hạn chế) của mình cho các hoạt động tốn thời gian như thu thập và làm sạch dữ liệu, vẫn phụ thuộc nhiều vào việc trích xuất kiến thức lĩnh vực và chuyên môn con người.

B. Tự động hóa Không Đều Qua Quy trình Làm việc AI/ML

Tiến bộ trong nghiên cứu AI/ML trong những năm gần đây đã rất to lớn và chúng ta hiện đang chứng kiến một sự thay đổi cơ bản trong kỹ thuật phần mềm nơi học máy trở thành phần mềm mới, được hỗ trợ bởi dữ liệu lớn và cơ sở hạ tầng máy tính. Giống như các tài nguyên cloud đã giúp dễ dàng truy cập phần cứng hiệu suất cao, các tài nguyên như registry mô hình Hugging Face, Mô hình Ngôn ngữ Lớn (LLM) và AutoML đang hàng hóa hóa các mô hình ML, trở nên có sẵn ngay lập tức cho các nhà phát triển hoặc cực kỳ dễ xây dựng và tinh chỉnh. Kết quả là, thành công của một dự án giờ đây phụ thuộc vào (chất lượng của) dữ liệu thay vì mô hình.

Mặc dù AI và ML ngày càng trở nên tập trung vào dữ liệu, chúng tôi phát hiện rằng các giải pháp AutoML hiện tại cung cấp ít hoặc không hỗ trợ cho giai đoạn chuẩn bị dữ liệu. Như P2 đã nói một cách súc tích, "chúng tôi chỉ không sử dụng AutoML cho chuẩn bị dữ liệu." Trong khi những người tham gia vẫn nói chung hoài nghi rằng chuẩn bị dữ liệu có thể được tự động hóa hoàn toàn do sự phụ thuộc nặng nề vào lĩnh vực và mặc dù thường không tham gia vào các hoạt động như vậy, họ cũng rất lên tiếng về những lợi ích mà hỗ trợ công cụ tốt hơn sẽ mang lại cho các nhóm AI/ML. Tương tự, những người tham gia báo cáo trong số những mong muốn của họ hỗ trợ tốt hơn cho phổ biến - đặc biệt là triển khai, vì giám sát được xem như phương tiện để thực thi giám sát của người dùng. Ngay cả khi không được tự động hóa hoàn toàn, những người trả lời của chúng tôi mong muốn một giải pháp hỗ trợ và linh hoạt giúp họ thoát khỏi sự tẻ nhạt của việc viết mã tích hợp boilerplate và cho phép họ tùy chỉnh đích triển khai.

Phát hiện của chúng tôi về hỗ trợ tự động hóa không đều của các giai đoạn quy trình làm việc thêm một lời giải thích tiềm năng cho việc áp dụng thấp các thực hành AutoML được báo cáo trong các khảo sát trước đó cũng được tiến hành trong bối cảnh kỹ thuật phần mềm cho ML [34, 9].

Hàm ý. Tự động hóa giai đoạn phân tích dường như đã được giải quyết mặc dù vẫn cần một số cải tiến (ví dụ: khả năng giải thích, kỹ thuật đặc trưng). Để phân biệt mình với các đối thủ cạnh tranh, các nhà thiết kế công cụ AutoML phải tập trung vào việc cung cấp hỗ trợ tốt hơn cho các giai đoạn chuẩn bị dữ liệu và phổ biến.

C. AutoML là một Tên Gọi Sai (cho những người không phải Nhà khoa học Dữ liệu)

Trong các nghiên cứu của họ về việc sử dụng AutoML giữa các nhà khoa học dữ liệu, Wang và cộng sự [10] và Crisan và Fiore-Gartland [33] đã báo cáo hai tình huống sử dụng phổ biến: (i) tạo mẫu mô hình nhanh và (ii) dân chủ hóa khoa học dữ liệu. Phân tích định tính của chúng tôi tiết lộ rằng trong khi tình huống đầu tiên cũng phổ biến giữa những người tham gia của chúng tôi, tình huống thứ hai thì không, có thể do quần thể mục tiêu khác nhau: được thành thạo trong các thực hành ML/kỹ thuật phần mềm và có khả năng coding, những người tham gia nghiên cứu của chúng tôi không thấy giá trị trong việc sử dụng AutoML như một phương tiện để hạ thấp rào cản gia nhập cho khoa học dữ liệu.

Một cách nhất quán với nghiên cứu trước đó đã báo cáo về sự thiếu khả năng tùy chỉnh trong các giải pháp AutoML hiện có [35, 36], các phát hiện của chúng tôi thêm bằng chứng rằng các kỹ sư ML/MLOps có kinh nghiệm quan tâm nhiều hơn đến tính linh hoạt và kiểm soát hơn là dễ sử dụng. Như vậy, mong muốn tự động hóa hoàn toàn dường như tỷ lệ nghịch với chuyên môn AI/ML, và, với việc các kỹ sư ML/MLOps nhìn vào các giải pháp này như máy tạo của các quy trình làm việc AI/ML tùy chỉnh, chúng tôi lập luận rằng AutoML hiện tại là một tên gọi sai vì lời hứa tự động hóa chỉ được thực hiện cho các nhà khoa học dữ liệu ở giai đoạn phân tích mô hình.

Hàm ý. Lặp lại lời của Xin và cộng sự [35], để thu hút một đối tượng rộng hơn, các nhà xây dựng công cụ AutoML nên tránh sử dụng các tên thương mại gợi ý khả năng tự động hóa hoàn toàn, con người ngoài vòng lặp (ví dụ: autopilot, driverless) vì tự động hóa hoàn toàn đã được chứng minh là không khả thi cho đến nay và chỉ hấp dẫn đối với những người không chuyên muốn một giải pháp xây dựng mô hình một cú nhấp chuột, đồng thời cũng trái ngược với các quy định đạo đức của EU gần đây, yêu cầu các hệ thống AI/ML trao quyền cho con người thông qua các cách tiếp cận con người trong vòng lặp.

Vì các hoạt động quy trình làm việc AI/ML rất nhiều và phức tạp, người dùng AutoML cũng đa dạng, với các nền tảng khác nhau và mong muốn tương phản về kiểm soát và tự động hóa. Chúng tôi lập luận rằng các nhà thiết kế sản phẩm AutoML nên xem xét sử dụng personas [37], một kỹ thuật thiết kế sản phẩm nổi tiếng cho phép mô hình hóa người dùng nguyên mẫu và nắm bắt tốt hơn mục tiêu, nhu cầu và sự thất vọng của họ. Trong trường hợp AutoML, dễ dàng hình dung ít nhất ba loại người dùng, một cho mỗi giai đoạn trong ba giai đoạn của quy trình làm việc AI/ML vì, mặc dù các vai trò có thể mờ nhạt trong các nhóm, đặc biệt là nhỏ, nhu cầu và trọng tâm của người dùng ở mỗi giai đoạn được định nghĩa rõ ràng và khác nhau.

D. Hạn chế

Nghiên cứu này có một số hạn chế có thể thông báo cho nghiên cứu tương lai. Về đánh giá, một số giải pháp AutoML OSS hiện có đã bị loại trừ vì, mặc dù hỗ trợ các tính năng văn bản, tài liệu của chúng không cung cấp các ví dụ rõ ràng tương tự như nhiệm vụ thí nghiệm được chọn. Trong khi chúng tôi thừa nhận điều này như một hạn chế tiềm năng của quá trình lấy mẫu công cụ, chúng tôi cũng chỉ ra rằng trọng tâm ở đây không phải là tính đầy đủ của đánh giá. Thực tế, kết quả của chúng tôi đã cho thấy rằng các giải pháp OSS tại chỗ như AutoKeras có thể theo kịp với các giải pháp cloud thương mại và tự động tạo ra các mô hình với hiệu suất tương tự nếu không tốt hơn. Về việc chọn phân tích cảm xúc như nhiệm vụ thí nghiệm, chúng tôi thừa nhận một câu trả lời một phần cho RQ1. Thực sự có nhiều nhiệm vụ phân loại cụ thể của SE khác (ví dụ: dự đoán lỗi, phân loại bug). Tuy nhiên, ban đầu chúng tôi đã chọn một nhiệm vụ mà việc thực hiện sẽ yêu cầu chuyên môn thường nằm ngoài lĩnh vực kiến thức của các kỹ sư phần mềm (tức là NLP), do đó cho thấy cách AutoML có thể là một con dao đa năng để xây dựng các mô hình ML ngay cả với kỹ năng hạn chế. Về khảo sát, mặc dù chúng tôi phát hiện rằng những người tham gia đến từ nhiều nền tảng khác nhau và sử dụng AutoML ở các mức độ khác nhau, việc tham gia tự nguyện có thể đã dẫn đến bias tự chọn, với những người trả lời tích cực hơn hoặc tích cực hơn với AutoML so với những người không tham gia.

VI. KẾT LUẬN

Trong nghiên cứu này, chúng tôi đã điều tra việc sử dụng AutoML cho kỹ thuật phần mềm dựa trên dữ liệu. Các phát hiện của chúng tôi gợi ý rằng AutoML hứa hẹn tạo ra các mô hình (phân loại) vượt trội hơn những mô hình được huấn luyện và tối ưu hóa bởi các nhà nghiên cứu trong lĩnh vực SE, làm cho nó trở thành một hỗ trợ có giá trị để tự động hóa công việc nặng nhọc trong phân tích mô hình. Tuy nhiên, chúng tôi cũng phát hiện rằng các giải pháp AutoML hiện có không hỗ trợ đều tự động hóa qua tất cả các giai đoạn của quy trình phát triển ML, với các kỹ sư dữ liệu/ML và MLOps hiện đang là công dân hạng hai. Tổng thể, nghiên cứu của chúng tôi đóng góp những hiểu biết cho cộng đồng nghiên cứu SE và các nhà xây dựng công cụ về cách sử dụng các công nghệ AutoML và cải thiện thiết kế của thế hệ tiếp theo của nó.

LỜI CẢM ơN

Các tác giả muốn cảm ơn những người tham gia khảo sát. Nghiên cứu này được đồng tài trợ bởi các dự án DARE (PNC0000002, CUP: B53C22006420001), FAIR (PE00000013, CUP: H97G22000210007) và SERICS (PE0000014, CUP: H93C22000620001).

TÀI LIỆU THAM KHẢO

[1] M. I. Jordan and T. M. Mitchell, "Machine learning: Trends, perspectives, and prospects," Science, vol. 349, no. 6245, pp. 255–260, 2015.

[2] A. Luckow, K. Kennedy, M. Ziolkowski, E. Djerekarov, M. Cook, E. Duffy, M. Schleiss, B. Vorster, E. Weill, A. Kulshrestha et al., "Artificial intelligence and deep learning applications for automotive manufacturing," in 2018 IEEE Int'l Conf. on Big Data (Big Data). IEEE, 2018, pp. 3144–3152.

[3] W. Markow, S. Braganza, B. Taska, S. M. Miller, and D. Hughes, "The quant crunch: How the demand for data science skills is disrupting the job market." [Trực tuyến]. Có sẵn: https://www.ibm.com/downloads/cas/3RL3VXGA

[4] B. Chakravorti, A. Bhalla, R. Shankar Chaturvedi, and C. Filipovic, "50 global hubs for top ai talent." [Trực tuyến]. Có sẵn: https://hbr.org/2021/12/50-global-hubs-for-top-ai-talent

[5] D. Zhang, S. Mishra, E. Brynjolfsson, J. Etchemendy, D. Ganguli, B. Grosz, T. Lyons, J. Manyika, J. C. Niebles, M. Sellitto et al., "The ai index 2021 annual report," arXiv preprint arXiv:2103.06312, 2021.

[6] F. Hutter, L. Kotthoff, and J. Vanschoren, Automated machine learning: methods, systems, challenges. Springer Nature, 2019.

[7] K. Tanaka, A. Monden, and Z. Yücel, "Prediction of software defects using automated machine learning," in 2019 20th IEEE/ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel/Distributed Computing (SNPD), 2019, pp. 490–494.

[8] J. Vanschoren, J. N. Van Rijn, B. Bischl, and L. Torgo, "Openml: networked science in machine learning," ACM SIGKDD Explorations Newsletter, vol. 15, no. 2, pp. 49–60, 2014.

[9] K. Van der Blom, A. Serban, H. Hoos, and J. Visser, "AutoML Adoption in ML Software," 8th ICML Workshop on Automated Machine Learning, 2021.

[10] D. Wang, J. D. Weisz, M. Muller, P. Ram, W. Geyer, C. Dugan, Y. Tausczik, H. Samulowitz, and A. Gray, "Human-AI Collaboration in Data Science: Exploring Data Scientists' Perceptions of Automated AI," Proc. of ACM on Human-Computer Interaction, vol. 3, no. CSCW, pp. 1–24, nov 2019.

[11] D. Sato, A. Wider, and C. Windheuser, "Continuous delivery for machine learning," Sep 2019. [Trực tuyến]. Có sẵn: https://martinfowler.com/articles/cd4ml.html

[12] T. Menzies, "The five laws of se for ai," IEEE Software, vol. 37, no. 1, pp. 81–85, 2019.

[13] C. Wang, Z. Chen, and M. Zhou, "AutoML from Software Engineering Perspective: Landscapes and Challenges," in 2023 Proc. of 20th Int.l Conf. on Mining Software Repositories (MSR), may 2023.

[14] F. Majidi, M. Openja, F. Khomh, and H. Li, "An empirical study on the usage of automated machine learning tools," in IEEE International Conference on Software Maintenance and Evolution, ICSME 2022, Limassol, Cyprus, October 3-7, 2022. IEEE, 2022, pp. 59–70. [Trực tuyến]. Có sẵn: https://doi.org/10.1109/ICSME55016.2022.00014

[15] P. Gijsbers, E. LeDell, J. Thomas, S. Poirier, B. Bischl, and J. Vanschoren, "An Open Source AutoML Benchmark," in 6th ICML Workshop on Automated Machine Learning, jul 2019, pp. 1–8.

[16] I. Guyon, L. Sun-Hosoya, M. Boullé, H. J. Escalante, S. Escalera, Z. Liu, D. Jajetic, B. Ray, M. Saeed, M. Sebag, A. Statnikov, W.-W. Tu, and E. Viegas, "Analysis of the AutoML Challenge Series 2015–2018," in Automated Machine Learning, V. J. Hutter F., Kotthoff L., Ed. Springer, 2019, ch. 10, pp. 177–219.

[17] M.-A. Zöller and M. F. Huber, "Benchmark and Survey of Automated Machine Learning Frameworks," Journal of Artificial Intelligence Research, vol. 70, pp. 409–472, jan 2021.

[18] G. M. Paldino, J. De Stefani, F. De Caro, and G. Bontempi, "Does AutoML Outperform Naive Forecasting?" Engineering Proceedings, vol. 5, no. 1, p. 36, jul 2021.

[19] J. Devlin, M.-W. Chang, K. Lee, and K. Toutanova, "Bert: Pre-training of deep bidirectional transformers for language understanding," arXiv preprint arXiv:1810.04805, 2018.

[20] W. Epperson, A. Y. Wang, R. DeLine, and S. M. Drucker, "Strategies for reuse and sharing among data scientists in software teams," 2022.

[21] S. Amershi, A. Begel, C. Bird, R. DeLine, H. Gall, E. Kamar, N. Nagappan, B. Nushi, and T. Zimmermann, "Software engineering for machine learning: A case study," in 2019 IEEE/ACM 41st Int'l Conf. on Software Engineering: Software Engineering in Practice (ICSE-SEIP). IEEE, 2019, pp. 291–300.

[22] M. Hanussek, M. Blohm, and M. Kintz, "Can AutoML outperform humans? An evaluation on popular OpenML datasets using AutoML Benchmark," in 2020 2nd Int'l Conf. on Artificial Intelligence, Robotics and Control. New York, NY, USA: ACM, dec 2020, pp. 29–32.

[23] L. Ferreira, A. Pilastri, C. M. Martins, P. M. Pires, and P. Cortez, "A Comparison of AutoML Tools for Machine Learning, Deep Learning and XGBoost," in 2021 Int'l Joint Conf. on Neural Networks (IJCNN), vol. 2021-July, no. October. IEEE, jul 2021, pp. 1–8.

[24] A. Balaji and A. Allen, "Benchmarking Automatic Machine Learning Frameworks," aug 2018.

[25] D. Gunning, M. Stefik, J. Choi, T. Miller, S. Stumpf, and G.-Z. Yang, "Xai—explainable artificial intelligence," Science Robotics, vol. 4, no. 37, p. eaay7120, 2019.

[26] P. Linardatos, V. Papastefanopoulos, and S. Kotsiantis, "Explainable ai: A review of machine learning interpretability methods," Entropy, vol. 23, no. 1, pp. 1–45, 2021.

[27] N. Novielli, F. Calefato, D. Dongiovanni, D. Girardi, and F. Lanubile, "Can we use se-specific sentiment analysis tools in a cross-platform setting?" in Proc. of 17th Int'l Conf. on Mining Software Repositories. New York, NY, USA: ACM, 2020, p. 158–168.

[28] P. Shaver, J. Schwartz, D. Kirson, and C. O'connor, "Emotion knowledge: further exploration of a prototype approach." Journal of personality and social psychology, vol. 52, no. 6, p. 1061, 1987.

[29] M. Ortu, A. Murgia, G. Destefanis, P. Tourani, R. Tonelli, M. Marchesi, and B. Adams, "The emotional side of software developers in jira," in 2016 IEEE/ACM 13th Working Conf. on Mining Software Repositories (MSR). IEEE, 2016, pp. 480–483.

[30] F. Sebastiani, "Machine learning in automated text categorization," ACM Comput. Surv., vol. 34, no. 1, p. 1–47, mar 2002.

[31] F. Calefato, F. Lanubile, F. Maiorano, and N. Novielli, "Sentiment polarity detection for software development," Empirical Software Engineering, vol. 23, no. 3, pp. 1352–1382, 2018.

[32] T. Zhang, B. Xu, F. Thung, S. A. Haryono, D. Lo, and L. Jiang, "Sentiment analysis for software engineering: How far can pre-trained transformer models go?" in 2020 IEEE Int'l Conf. on Software Maintenance and Evolution (ICSME). IEEE, 2020, pp. 70–80.

[33] A. Crisan and B. Fiore-Gartland, "Fits and starts: Enterprise use of automl and the role of humans in the loop," in CHI '21: CHI Conf. on Human Factors in Computing Systems, Virtual Event / Yokohama, Japan, May 8-13, 2021, Y. Kitamura, A. Quigley, K. Isbister, T. Igarashi, P. Bjørn, and S. M. Drucker, Eds. ACM, 2021, pp. 601:1–601:15. [Trực tuyến]. Có sẵn: https://doi.org/10.1145/3411764.3445775

[34] A. Serban, K. van der Blom, H. Hoos, and J. Visser. (2020) The 2020 state of engineering practices for machine learning. [Trực tuyến]. Có sẵn: https://se-ml.github.io/automl-report2020

[35] D. Xin, E. Y. Wu, D. J.-L. Lee, N. Salehi, and A. Parameswaran, "Whither AutoML? Understanding the Role of Automation in Machine Learning Workflows," in Proc. of 2021 CHI Conf. on Human Factors in Computing Systems. ACM, may 2021, pp. 1–16.

[36] Y. Sun, Q. Song, X. Gui, F. Ma, and T. Wang, "AutoML in The Wild: Obstacles, Workarounds, and Expectations," in Proc of 2023 CHI Conf. on Human Factors in Computing Systems (CHI '23), April 23â€"28, 2023, Hamburg, Germany, vol. 1, no. 1. Association for Computing Machinery, feb 2023.

[37] J. Pruitt and J. Grudin, "Personas: practice and theory," in Proceedings of the 2003 conference on Designing for user experiences, 2003, pp. 1–15.
