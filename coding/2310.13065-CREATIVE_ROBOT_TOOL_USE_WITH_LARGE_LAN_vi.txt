# 2310.13065.pdf
# Chuyển đổi từ PDF sang TXT
# Đường dẫn nguồn: /home/admin88/arxiv-downloader/coding/2310.13065.pdf
# Kích thước tệp: 11013713 bytes

===============================================
NỘI DUNG TỆP PDF
===============================================

--- TRANG 1 ---
SỬ DỤNG CÔNG CỤ ROBOT SÁNG TẠO VỚI CÁC MÔ HÌNH NGÔN NGỮ LỚN

Mengdi Xu1∗⋄, Peide Huang1∗, Wenhao Yu2∗, Shiqi Liu1, Xilun Zhang1, Yaru Niu1,
Tingnan Zhang2, Fei Xia2, Jie Tan2, Ding Zhao1
1Đại học Carnegie Mellon, 2Google DeepMind
{mengdixu, peideh, shiqiliu, xilunz, yarun, dingzhao }@andrew.cmu.edu
{magicmelon, tingnan, xiafei, jietan }@google.com

TÓM TẮT
Việc sử dụng công cụ là dấu hiệu của trí thông minh tiên tiến, được thể hiện cả trong hành vi động vật và khả năng robot. Bài báo này điều tra tính khả thi của việc trang bị cho robot khả năng sử dụng công cụ một cách sáng tạo trong các nhiệm vụ bao gồm các ràng buộc vật lý ngầm định và lập kế hoạch dài hạn. Tận dụng các Mô hình Ngôn ngữ Lớn (LLM), chúng tôi phát triển RoboTool, một hệ thống chấp nhận hướng dẫn bằng ngôn ngữ tự nhiên và đưa ra mã thực thi để điều khiển robot trong cả môi trường mô phỏng và thế giới thực. RoboTool kết hợp bốn thành phần then chốt: (i) một "Bộ phân tích" giải thích ngôn ngữ tự nhiên để hiểu các khái niệm chính liên quan đến nhiệm vụ, (ii) một "Bộ lập kế hoạch" tạo ra các chiến lược toàn diện dựa trên đầu vào ngôn ngữ và các khái niệm chính, (iii) một "Bộ tính toán" tính toán các tham số cho mỗi kỹ năng, và (iv) một "Bộ lập mã" chuyển đổi các kế hoạch này thành mã Python thực thi được. Kết quả của chúng tôi cho thấy RoboTool không chỉ có thể hiểu các ràng buộc vật lý rõ ràng hoặc ngầm định và các yếu tố môi trường mà còn thể hiện việc sử dụng công cụ sáng tạo. Không giống như các phương pháp Lập kế hoạch Nhiệm vụ và Chuyển động (TAMP) truyền thống dựa vào tối ưu hóa rõ ràng, hệ thống dựa trên LLM của chúng tôi cung cấp một giải pháp linh hoạt, hiệu quả và thân thiện với người dùng hơn cho các nhiệm vụ robot phức tạp. Thông qua các thí nghiệm mở rộng, chúng tôi xác nhận rằng RoboTool có thể thành thạo trong việc xử lý các nhiệm vụ mà nếu không có việc sử dụng công cụ sáng tạo sẽ không thể thực hiện được, từ đó mở rộng khả năng của các hệ thống robot. Các demo có sẵn trên trang dự án của chúng tôi: https://creative-robotool.github.io/.

1 GIỚI THIỆU
Việc sử dụng công cụ là một dấu hiệu quan trọng của trí thông minh tiên tiến. Một số động vật có thể sử dụng công cụ để đạt được các mục tiêu mà không thể thực hiện được nếu không có công cụ. Ví dụ, những con khỉ của Koehler xếp chồng thùng lên nhau để với tới chùm chuối treo cao (Kohler, 2018), và khỉ đuôi dài ăn cua sử dụng công cụ đá để mở hạt và động vật hai mảnh vỏ (Gumert et al., 2009). Ngoài việc sử dụng công cụ theo mục đích dự định và theo các quy trình đã thiết lập, việc sử dụng công cụ theo những cách sáng tạo và không thông thường mang lại các giải pháp linh hoạt hơn, mặc dù đặt ra nhiều thách thức hơn về khả năng nhận thức. Trong robot học, việc sử dụng công cụ sáng tạo (Fitzgerald et al., 2021) cũng là một khả năng quan trọng nhưng rất đòi hỏi vì nó đòi hỏi khả năng toàn diện để dự đoán kết quả của một hành động, suy luận công cụ nào cần sử dụng và lập kế hoạch cách sử dụng chúng. Trong công trình này, chúng tôi muốn khám phá câu hỏi: liệu chúng ta có thể kích hoạt khả năng sử dụng công cụ sáng tạo như vậy trong robot không? Chúng tôi xác định rằng việc sử dụng công cụ robot sáng tạo giải quyết một nhiệm vụ lập kế hoạch dài hạn phức tạp với các ràng buộc liên quan đến môi trường và khả năng robot. Ví dụ, "nắm lấy một hộp sữa" trong khi vị trí của hộp sữa nằm ngoài không gian làm việc của cánh tay robot hoặc "đi đến chiếc ghế sofa khác" trong khi có một khoảng trống trên đường đi vượt quá khả năng đi bộ của robot bốn chân.

Lập kế hoạch nhiệm vụ và chuyển động (TAMP) là một khung làm việc phổ biến để giải quyết các nhiệm vụ lập kế hoạch dài hạn như vậy. Nó kết hợp lập kế hoạch chuyển động liên tục cấp thấp và lập kế hoạch nhiệm vụ rời rạc cấp cao để

∗Đóng góp ngang nhau.⋄Công việc được thực hiện một phần tại Google DeepMind.
1arXiv:2310.13065v1 [cs.RO] 19 Oct 2023

--- TRANG 2 ---
[Mô tả Cảnh: Đối tượng, Vị trí, Kích thước, Hình dạng][Ràng buộc cần Tuân theo][Nhiệm vụ cần Hoàn thành]RoboToolMã Thực thi: Sử dụng búa để kéo cối xay vào trong.Nắm lấy hộp sữa.

(a) Tổng quan RoboTool

Lựa chọn Công cụSử dụng Công cụ Tuần tựSản xuất Công cụ

Vượt sofa
Với tới sữa Trèo sofa
Nắm lon Nâng khối
Ấn nút

(b) Bộ đánh giá Sử dụng Công cụ Sáng tạo

Hình 1: (a) Sử dụng công cụ robot sáng tạo với Mô hình Ngôn ngữ Lớn (RoboTool). RoboTool nhận mô tả bằng ngôn ngữ tự nhiên làm đầu vào, bao gồm mô tả cảnh, các ràng buộc liên quan đến môi trường và thể chất, và nhiệm vụ. (b) Chúng tôi thiết kế một bộ đánh giá sử dụng công cụ sáng tạo dựa trên robot bốn chân và cánh tay robot, bao gồm 6 nhiệm vụ thách thức biểu thị ba loại hành vi sử dụng công cụ sáng tạo.

giải quyết các nhiệm vụ lập kế hoạch phức tạp khó giải quyết bằng bất kỳ lĩnh vực nào trong số này một mình. Các tài liệu hiện có có thể xử lý việc sử dụng công cụ trong môi trường tĩnh với các phương pháp dựa trên tối ưu hóa như lập trình logic-hình học (Toussaint et al., 2018). Tuy nhiên, phương pháp tối ưu hóa này thường đòi hỏi thời gian tính toán dài cho các nhiệm vụ với nhiều đối tượng và các bước lập kế hoạch nhiệm vụ do không gian tìm kiếm tăng lên (Garrett et al., 2021). Ngoài ra, các phương pháp TAMP cổ điển bị giới hạn trong họ các nhiệm vụ có thể được biểu diễn bằng logic hình thức và biểu diễn ký hiệu, khiến chúng không thân thiện với người dùng đối với những người không chuyên (Chen et al., 2023; Lin et al., 2023).

Gần đây, các mô hình ngôn ngữ lớn (LLM) đã được chứng minh là mã hóa kiến thức rộng lớn có lợi cho các nhiệm vụ robot trong suy luận, lập kế hoạch và hành động (Brohan et al., 2023; Huang et al., 2023b; Yu et al., 2023). Các phương pháp TAMP với LLM có thể bỏ qua gánh nặng tính toán của quá trình tối ưu hóa rõ ràng trong TAMP cổ điển. Các nghiên cứu trước đây cho thấy LLM có thể khéo léo phân tích các nhiệm vụ được đưa ra dù là mô tả và hướng dẫn ngôn ngữ rõ ràng hay mơ hồ. Robot được cung cấp năng lượng bởi LLM cũng thể hiện khả năng tổng quát hóa hợp thành đáng chú ý trong TAMP (Huang et al., 2022a; Ahn et al., 2022). Tuy nhiên, vẫn chưa rõ làm thế nào để sử dụng LLM để giải quyết các nhiệm vụ phức tạp hơn đòi hỏi suy luận với các ràng buộc ngầm định do thể chất robot và thế giới vật lý xung quanh áp đặt.

Trong công trình này, chúng tôi quan tâm đến việc giải quyết các nhiệm vụ robot dài hạn được hướng dẫn bằng ngôn ngữ với các ràng buộc vật lý được kích hoạt ngầm định (Hình 1). Bằng cách cung cấp cho LLM thông tin ngữ nghĩa số đầy đủ bằng ngôn ngữ tự nhiên, chúng tôi quan sát thấy rằng LLM có thể xác định các ràng buộc được kích hoạt do bố cục không gian của các đối tượng trong cảnh và giới hạn thể chất của robot, cho thấy rằng LLM có thể duy trì kiến thức và khả năng suy luận về thế giới vật lý 3D. Ví dụ, trong ví dụ Vượt-sofa, LLM có thể xác định rằng khái niệm chính ảnh hưởng đến tính khả thi của kế hoạch là chiều rộng khoảng trống giữa hai ghế sofa, mặc dù không có thông tin trước về sự tồn tại của khái niệm "khoảng trống" trong hướng dẫn ngôn ngữ được cung cấp. Hơn nữa, các thử nghiệm toàn diện của chúng tôi tiết lộ rằng LLM không chỉ thành thạo trong việc sử dụng công cụ để biến những nhiệm vụ không khả thi thành khả thi mà còn thể hiện sự sáng tạo trong việc sử dụng công cụ vượt ra ngoài các chức năng thông thường của chúng, dựa trên vật liệu, hình dạng và các đặc điểm hình học của chúng. Một lần nữa, trong ví dụ Vượt-sofa, LLM có thể sử dụng ván lướt sóng bên cạnh robot bốn chân như một cây cầu để đi qua khoảng trống.

Để giải quyết vấn đề nêu trên, chúng tôi giới thiệu RoboTool, một người dùng công cụ robot sáng tạo được xây dựng trên LLM, sử dụng công cụ vượt ra ngoài khả năng tiêu chuẩn của chúng. RoboTool chấp nhận hướng dẫn bằng ngôn ngữ tự nhiên bao gồm thông tin văn bản và số về môi trường, thể chất robot và các ràng buộc cần tuân theo. RoboTool tạo ra mã gọi các kỹ năng cấp thấp có tham số của robot để điều khiển cả robot mô phỏng và vật lý. RoboTool bao gồm bốn thành phần trung tâm, mỗi thành phần xử lý một chức năng, như được mô tả trong Hình 2: (i) Bộ phân tích, xử lý đầu vào ngôn ngữ tự nhiên để xác định các khái niệm chính có thể tác động đến tính khả thi của nhiệm vụ, (ii) Bộ lập kế hoạch, nhận cả đầu vào ngôn ngữ gốc và các khái niệm chính đã xác định để xây dựng chiến lược toàn diện để hoàn thành nhiệm vụ, (iii) Bộ tính toán, chịu trách nhiệm xác định các tham số, chẳng hạn như vị trí mục tiêu cần thiết cho mỗi kỹ năng có tham số, và (iv) Bộ lập mã, chuyển đổi các kế hoạch toàn diện và tham số thành mã thực thi được. Tất cả các thành phần này được xây dựng bằng GPT-4.

Các đóng góp chính của chúng tôi gồm ba phần:

--- TRANG 3 ---
• Chúng tôi giới thiệu RoboTool, một người dùng công cụ robot sáng tạo dựa trên LLM được huấn luyện trước, có thể giải quyết các vấn đề lập kế hoạch lai rời rạc-liên tục dài hạn với các ràng buộc liên quan đến môi trường và thể chất theo cách zero-shot.
• Chúng tôi cung cấp một bộ đánh giá benchmark (Hình 1b) để kiểm tra các khía cạnh khác nhau của khả năng sử dụng công cụ sáng tạo, bao gồm lựa chọn công cụ, sử dụng công cụ tuần tự và sản xuất công cụ, trên hai thể chất được sử dụng rộng rãi: cánh tay robot và robot bốn chân.
• Các thí nghiệm mô phỏng và thế giới thực chứng minh rằng RoboTool giải quyết các nhiệm vụ không thể đạt được nếu không có việc sử dụng công cụ sáng tạo và vượt trội hơn các baseline với tỷ lệ thành công lớn.

2 CÁC NGHIÊN CỨU LIÊN QUAN
Mô hình Ngôn ngữ cho Lập kế hoạch Nhiệm vụ và Chuyển động (TAMP). TAMP (Garrett et al., 2021) đã được tích hợp với LLM để xây dựng robot thông minh. Hầu hết các tài liệu được xây dựng dựa trên lập kế hoạch phân cấp (Garrett et al., 2020; 2021; Kaelbling & Lozano-Pérez, 2011), nơi LLM chỉ cung cấp kế hoạch cấp cao gọi các nguyên tắc điều khiển do con người thiết kế hoặc các bộ lập kế hoạch chuyển động (Ahn et al., 2022; Huang et al., 2022a;b; Ren et al., 2023a; Chen et al., 2023; Ding et al., 2023; Silver et al., 2023; Liu et al., 2023; Xie et al., 2023). Trong công trình này, chúng tôi tuân theo thiết lập lập kế hoạch phân cấp và nhằm phát triển một bộ lập kế hoạch dựa trên LLM để giải quyết các nhiệm vụ với các ràng buộc đòi hỏi hành vi sử dụng công cụ sáng tạo. Một thách thức của việc sử dụng LLM làm bộ lập kế hoạch là kết nối nó với các tương tác thế giới thực. SayCan (Ahn et al., 2022), Grounded Decoding (Huang et al., 2023c) và Text2Motion (Lin et al., 2023) đã kết nối một bộ lập kế hoạch LLM với hàm khả năng thế giới thực (liên quan đến kỹ năng, đối tượng hoặc môi trường) để đề xuất các kế hoạch khả thi và phù hợp. Việc phát triển các hàm khả năng này đòi hỏi huấn luyện bổ sung từ dữ liệu ngoại tuyến lớn hoặc kiến thức cụ thể về lĩnh vực. Ngược lại, chúng tôi hoàn toàn dựa vào khả năng của LLM trong việc suy ra khả năng từ đầu vào ngôn ngữ và không yêu cầu các hàm khả năng được huấn luyện trước riêng biệt.

Các nghiên cứu hiện có tích hợp LLM và TAMP đưa ra kế hoạch ở định dạng ngôn ngữ tự nhiên, ngôn ngữ PDDL hoặc script mã. Với tập trung vào các ứng dụng robot, một giao diện tự nhiên để gọi các kỹ năng cấp thấp là mã được tạo bởi LLM. Code-as-Policies (Liang et al., 2023) và ProgPrompt (Singh et al., 2023) cho thấy rằng LLM thể hiện suy luận không gian-hình học và gán các giá trị chính xác cho các mô tả mơ hồ cũng như viết các đoạn mã Python logic. Trong robot đa phương thức, Instruct2Act (Huang et al., 2023a) và VoxPoser Huang et al. (2023b) cũng tạo mã để kết hợp nhận thức, lập kế hoạch và hành động. Theo các nghiên cứu này, chúng tôi đề xuất sử dụng một mô-đun LLM độc lập để tạo mã.

Sử dụng Công cụ Robot. Việc sử dụng công cụ cho phép robot giải quyết các vấn đề mà chúng không thể giải quyết được nếu không có công cụ. Có một lịch sử dài quan tâm trong tài liệu robot học tập trung vào việc thao tác công cụ để hoàn thành các nhiệm vụ được chỉ định, chẳng hạn như đánh bóng đồ nội thất (Nagata et al., 2001), siết đai ốc (Pfeiffer et al., 2017), chơi bóng bàn (Muelling et al., 2010), sử dụng đũa Ke et al. (2021), v.v. Mặc dù có những nỗ lực thành công này, chúng tập trung vào việc tạo hành động cho các công cụ cụ thể và không nghiên cứu tác động nhân quả của công cụ và tương tác của chúng với các đối tượng khác. Do đó, chúng không thể xử lý các đối tượng hoặc nhiệm vụ mới và thường thiếu khả năng ứng biến. Để tương tác với công cụ theo cách thông minh hơn, Sinapov & Stoytchev (2008) và Levihn & Stilman (2014) đã thực hiện những nỗ lực ban đầu để nghiên cứu tác động của các công cụ và cơ chế khác nhau. Wicaksono & Sammut (2016) đã phát triển một hệ thống để học một công cụ đơn giản từ việc trình diễn của một tác nhân khác sử dụng công cụ tương tự bằng cách tạo và kiểm tra các giả thuyết, được biểu diễn bằng các mệnh đề Horn, về các đặc điểm công cụ nào quan trọng. Xie et al. (2019) và Fang et al. (2020) đã huấn luyện mạng nơ-ron sâu từ dữ liệu tự giám sát đa dạng về việc sử dụng công cụ để dự đoán tác động của công cụ hoặc tạo hành động trực tiếp.

Liên quan đến phương pháp của chúng tôi, Toussaint et al. (2018) đã xây dựng một Chương trình Logic-Hình học để giải quyết các câu đố vật lý với việc sử dụng công cụ tuần tự, chẳng hạn như sử dụng móc để lấy một móc dài hơn khác để với tới quả bóng mục tiêu. Ren et al. (2023b) đã sử dụng LLM để biến đổi các đặc điểm nhiệm vụ và công cụ dưới dạng văn bản thành biểu diễn tiềm ẩn và nối chúng với đầu vào thị giác để đạt được khả năng thích ứng và tổng quát hóa nhanh hơn thông qua meta-learning. Gần đây hơn, RT2 (Brohan et al., 2023) đã thực hiện suy luận ngữ nghĩa đa giai đoạn để, ví dụ, quyết định rằng đá có thể được sử dụng như một chiếc búa tạm thời. Không giống như hầu hết các tài liệu robot học hiện có, phương pháp của chúng tôi tận dụng kiến thức trước khổng lồ của LLM về khả năng đối tượng và khả năng lập kế hoạch ấn tượng để đề xuất các giải pháp sáng tạo cho các loại câu đố vật lý khác nhau. Những giải pháp này đòi hỏi khả năng suy luận và lập kế hoạch cực kỳ phức tạp.

--- TRANG 4 ---
Bộ phân tích
Bạn là một cánh tay robot với không gian làm việc phạm vi x 0-0.5m, phạm vi y ….
Có một hộp sữa, một cái búa và một chiếc hộp trên bàn.
Vị trí của hộp sữa ở [0.8, 0.0, 0.1] với kích thước …. Hãy cho tôi một kế hoạch để nắm lấy hộp sữa.

Sử dụng búa như một công cụ.
Bước 1: Di chuyển đến búa và nắm lấy búa.
Vị trí 3D mục tiêu là …
Bước 2: Di chuyển búa đến sữa để đảm bảo tiếp xúc. Vị trí 3D mục tiêu là …
Bước 3: Kéo hộp sữa vào không gian làm việc. Vị trí 3D mục tiêu là …
Bước 4: Nắm lấy hộp sữa.

Đặc điểm chính là vị trí x của hộp sữa 0.8 nằm ngoài không gian làm việc của robot dọc theo trục x.

Người dùng: Ràng buộc, Mô tả Cảnh, Nhiệm vụ

Bộ lập kế hoạch
Bộ tính toán
Bộ lập mã

import numpy as np
# Di chuyển đến búa và nắm lấy búa
hammer_position, _ = get_position('hammer')
target_position= hammer_position+ np.array([0.0, 0.0, 0.05/2 -0.02])
move_to_position(target_position)
close_gripper()
# Di chuyển búa đến sữa
milk_position, _ = get_position('milk carton')
milk_size= get_size('milk carton')
target_position= [milk_position[0], milk_position[1], milk_position[2] -milk_size[2]/1.3]
move_to_position(target_position)
# Di chuyển sữa vào không gian làm việc
target_position= [0.175, 0.0, milk_position[2]]
move_to_position(target_position)
open_gripper()
# Di chuyển đến sữa và nắm lấy sữa. . .

Thực thi Robot

Hình 2: Tổng quan về RoboTool được đề xuất của chúng tôi, đây là một người dùng công cụ robot sáng tạo bao gồm bốn thành phần chính gồm Bộ phân tích, Bộ lập kế hoạch, Bộ tính toán và Bộ lập mã.

3 PHƯƠNG PHÁP LUẬN

Chúng tôi quan tâm đến việc cho phép robot giải quyết các nhiệm vụ dài hạn phức tạp với nhiều ràng buộc liên quan đến môi trường và thể chất, đòi hỏi khả năng sử dụng công cụ sáng tạo của robot để giải quyết các nhiệm vụ. Trong phần này, trước tiên chúng tôi đặt vấn đề của mình như một vấn đề lập kế hoạch lai rời rạc-liên tục trong Phần 3.1. Sau đó chúng tôi giới thiệu phương pháp được đề xuất của mình, RoboTool, trong Phần 3.2, đây là một người dùng công cụ robot sáng tạo được xây dựng trên LLM và có thể giải quyết các vấn đề lập kế hoạch nhiệm vụ phức tạp theo cách zero-shot.

3.1 CÔNG THỨC HÓA VẤN ĐỀ

Với trọng tâm vào các ứng dụng robot, chúng tôi nhằm giải quyết một vấn đề lập kế hoạch lai rời rạc-liên tục với nhiều ràng buộc dựa trên mô tả bằng ngôn ngữ tự nhiên. Mô tả được cung cấp chứa các từ và giá trị số để mô tả môi trường, nhiệm vụ và ràng buộc. Giả sử robot được trang bị một danh mục các kỹ năng có tham số, chúng tôi tìm kiếm một giải pháp phân cấp để tạo ra một kế hoạch bao gồm một chuỗi các kỹ năng được cung cấp và một chuỗi các tham số cho các kỹ năng tương ứng. Vì mã phục vụ như một giao diện chung để gửi lệnh đến robot, phương pháp của chúng tôi sẽ đưa ra mã chính sách robot thực thi được gọi các kỹ năng tuần tự với các tham số theo kế hoạch, để hoàn thành nhiệm vụ. Việc giải quyết các vấn đề như vậy thường bao gồm việc tương tác với các đối tượng khác nhau trong cảnh để thỏa mãn các ràng buộc về môi trường và thể chất. Điều này tượng trưng cho hành vi sử dụng công cụ, đây là nền tảng của trí thông minh.

Mô tả Ngôn ngữ làm Đầu vào. Chúng tôi định nghĩa không gian bố cục môi trường là Q và cấu hình môi trường ban đầu là q0∈ Q. API Fq giúp phân tích q0 thành mô tả ngôn ngữ môi trường LQ=Fq(q0), bao gồm bố cục không gian của các đối tượng, chẳng hạn như "có một cái búa trên bàn" và "robot đang ở trên mặt đất", cũng như vị trí, kích thước và tính chất vật lý của từng đối tượng. Chúng tôi ký hiệu tập ràng buộc là C=CQ∪CR, trong đó CQ đại diện cho các ràng buộc liên quan đến môi trường, chẳng hạn như "cuộn giấy không thể được nâng lên", và CR đại diện cho các ràng buộc xuất phát từ các giới hạn vật lý của robot, bao gồm các khía cạnh như ranh giới không gian làm việc của robot và phạm vi các kỹ năng của nó. Gọi không gian thể chất robot là R. Mỗi ràng buộc C∈ C có thể được kích hoạt dựa trên sự kết hợp khác nhau của Q và R. API FC giúp phân tích các ràng buộc C thành mô tả ràng buộc LC=FC(C). Người dùng sẽ cung cấp nhiệm vụ LT bằng ngôn ngữ tự nhiên. Mô tả ngôn ngữ được nối L={LT, LQ, LC} phục vụ như đầu vào truy vấn cho phương pháp của chúng tôi.

Chính sách Phân cấp cho Sử dụng Công cụ Robot. Chúng tôi xem xét một Quá trình Quyết định Markov M được định nghĩa bởi một tuple (S,A, p, r, ρ0), đại diện cho không gian trạng thái, không gian hành động, động lực chuyển đổi, hàm phần thưởng và phân phối trạng thái ban đầu, tương ứng. Chúng tôi sử dụng một cấu trúc phân cấp hai cấp gồm một tập các kỹ năng có tham số và một bộ điều khiển cấp cao. Đối với mỗi thể chất robot R∈ R, chúng tôi giả sử rằng có một tập các kỹ năng có tham số ΠR={πR_i}N_i=1. Mỗi kỹ năng nhận một tham số x∈ Xi, trong đó Xi là không gian tham số của kỹ năng i. Kỹ năng πR_i(x) tạo ra một chuỗi các hành động cấp thấp (a1,···, at,···), at∈ A. Một kỹ năng có tham số có thể là việc di chuyển đầu cuối của cánh tay robot đến một vị trí mục tiêu x. Bộ điều khiển cấp cao đưa ra (H, X), trong đó H= (h1, . . . , hk, . . .) là chuỗi kỹ năng, hk∈[N] là kỹ năng ở bước kế hoạch k, X= (x(1)_h1, . . . , x(k)_hk, . . .) là chuỗi tham số tương ứng, và x(k)_hk∈ Xhk biểu thị tham số cho kỹ năng hk. Cho một mô tả ngôn ngữ

--- TRANG 5 ---
L cho các nhiệm vụ sử dụng công cụ, mục tiêu của chúng tôi là tạo ra một mã τ((H, X),Π, L) có thể giải quyết nhiệm vụ bằng cách gọi một chuỗi các kỹ năng có tham số đồng thời cung cấp các tham số của chúng. Xem xét giải pháp khả thi τ có thể không duy nhất và có khả năng bao gồm việc thao tác số lượng đối tượng khác nhau như công cụ, ngoài việc hoàn thành nhiệm vụ, chúng tôi cũng mong muốn một kế hoạch đơn giản tương tác với số lượng đối tượng tối thiểu trong cảnh.

3.2 ROBOTOOL: SỬ DỤNG CÔNG CỤ ROBOT SÁNG TẠO VỚI CÁC MÔ HÌNH NGÔN NGỮ LỚN

Chúng tôi đề xuất RoboTool, giải quyết các vấn đề lập kế hoạch lai rời rạc-liên tục với ràng buộc thông qua việc sử dụng công cụ sáng tạo theo cách zero-shot. RoboTool nhận hướng dẫn bằng ngôn ngữ tự nhiên làm đầu vào làm cho nó thân thiện với người dùng, và đưa ra mã thực thi được gọi các kỹ năng có tham số của robot. RoboTool duy trì cấu trúc phân cấp bao gồm bốn thành phần chính (Hình 2), gồm Bộ phân tích, Bộ lập kế hoạch, Bộ tính toán và Bộ lập mã, mỗi cái là một LLM xử lý một chức năng.

3.2.1 BỘ PHÂN TÍCH

<bắt đầu phân tích>Đặc điểm chính ảnh hưởng đến tính khả thi của kế hoạch là khoảng trống giữa sofa_1 và sofa_2...Để tính toán khoảng trống, chúng ta cần xem xét vị trí trục x của hai ghế sofa và kích thước của chúng. Trung tâm của sofa_1 ở x=0.0 và kích thước của nó dọc theo trục x là 1.5m, vậy cạnh của nó ở x=0.0+1.5/2=0.75m...Do đó, khoảng trống giữa hai ghế sofa là 1.15m -0.75m = 0.4m, lớn hơn khoảng trống tối đa mà robot có thể đi qua (0.1m). <kết thúc phân tích><bắt đầu mô tả>Đặc điểm chính là khoảng trống giữa sofa_1 và sofa_2 là 0.4m, vì robot chỉ có thể đi qua khoảng trống nhỏ hơn 0.1m. Theo cấu hình ban đầu, ràng buộc bị vi phạm ban đầu.<kết thúc mô tả>

Hình 3: Đầu ra Bộ phân tích.

Con người có thể xác định rõ ràng các khái niệm quan trọng sẽ ảnh hưởng đến kế hoạch nhiệm vụ (Weng et al., 2023). Ví dụ, khi đặt một cuốn sách lên kệ sách, chúng ta sử dụng kích thước của sách, không gian kệ có sẵn và chiều cao khe để xác định liệu nhiệm vụ có khả thi hay không. Liệu chúng ta có thể trang bị cho robot khả năng suy luận như vậy để xác định các khái niệm chính trước khi lập kế hoạch chi tiết không? Chúng tôi tìm cách trả lời câu hỏi này bằng cách sử dụng LLM, lưu trữ một kho kiến thức phong phú về tính chất vật lý và hình học của đối tượng và thường thức con người. Chúng tôi đề xuất Bộ phân tích, được cung cấp năng lượng bởi LLM, trích xuất các khái niệm chính và giá trị của chúng quan trọng để xác định tính khả thi của nhiệm vụ. Bộ phân tích được cung cấp một prompt cấu trúc phản hồi của nó thành hai phần: một phần phân tích giải thích quá trình suy nghĩ của nó và một phần mô tả liệt kê các khái niệm chính cùng với giá trị và ràng buộc liên quan của chúng. Một ví dụ đầu ra của Bộ phân tích được hiển thị trong Hình 3. Chúng tôi thêm nội dung trong phần mô tả của đầu ra Bộ phân tích vào các mô tả gốc L để xây dựng mô tả được tăng cường khái niệm chính L∗ cho các mô-đun downstream.

Đáng chú ý rằng kiến thức trước được nội bộ hóa của LLM tự động xác định việc lựa chọn các khái niệm chính này, và không có điều kiện tiên quyết nào để phác thảo một tập khái niệm được xác định trước. Hơn nữa, Bộ phân tích có thể trích xuất các khái niệm rõ ràng được cung cấp trong mô tả trong L, chẳng hạn như vị trí của đối tượng và phạm vi không gian làm việc liên quan, và các khái niệm ngầm định đòi hỏi tính toán dựa trên thông tin số được cung cấp, chẳng hạn như chiều rộng khoảng trống giữa hai đối tượng như trong Hình 3.

3.2.2 BỘ LẬP KẾ HOẠCH

<bắt đầu mô tả>[SOFA_1]: ...[SOFA_2]: ...[SURFBOARD]: Ván lướt sóng đủ nhẹ để robot đẩy và có thể được sử dụng như một cây cầu để vượt qua khoảng trống giữa các ghế sofa.[STRIP_OF_CLOTH]: Dải vải trên sofa_1 nhưng nó quá mỏng và nhỏ để hữu ích trong nhiệm vụ này.[Đặc điểm và ràng buộc chính]: Đặc điểm chính là khoảng trống giữa sofa_1 và sofa_2...[Kế hoạch trừu tượng]: Robot trước tiên nên đẩy ván lướt sóng đến mép của sofa_1...<kết thúc mô tả><bắt đầu kế hoạch>-Sử dụng kỹ năng 'get_position' để...-Sử dụng kỹ năng 'push_to_position' để đẩy ván lướt sóng......<kết thúc kế hoạch>

Hình 4: Đầu ra Bộ lập kế hoạch.

Được thúc đẩy bởi khả năng phân tách nhiệm vụ mạnh mẽ của LLM (Ahn et al., 2022; Huang et al., 2022a), chúng tôi đề xuất sử dụng một LLM làm Bộ lập kế hoạch để tạo ra khung kế hoạch H dựa trên mô tả ngôn ngữ được tăng cường khái niệm chính L∗. Phản hồi của Bộ lập kế hoạch chứa một phần mô tả và một phần kế hoạch, như được hiển thị trong Hình 4. Bộ lập kế hoạch đầu tiên mô tả tính chất của từng đối tượng và vai trò có thể có trong việc hoàn thành nhiệm vụ, hiển thị quá trình suy luận và xây dựng kế hoạch trừu tượng trong phần mô tả. Sau đó Bộ lập kế hoạch tạo ra khung kế hoạch chi tiết dựa trên các kỹ năng có tham số trong phần kế hoạch. Chúng tôi cung cấp cho Bộ lập kế hoạch một prompt mô tả từng kỹ năng có tham số, định dạng phản hồi và quy tắc cho hai phần.

Chúng tôi quan sát thấy rằng Bộ lập kế hoạch có thể tự động tạo ra kế hoạch bằng cách sử dụng các đối tượng trong môi trường như công cụ trung gian để hoàn thành nhiệm vụ, với sự trợ giúp của việc tăng cường khái niệm chính. Các ví dụ bao gồm "sử dụng hộp như một viên đá bước" hoặc "sử dụng búa để kéo hộp sữa

--- TRANG 6 ---
Vượt Sofa
Với tới Sữa

(a) Lựa chọn Công cụ

Trèo Sofa
Nắm Lon

(b) Sử dụng Công cụ Tuần tự

Nâng Khối
Ấn Nút

(c) Sản xuất Công cụ

Hình 5: Hình ảnh hóa các hành vi sử dụng công cụ sáng tạo của RoboTool. (a) Lựa chọn công cụ. Robot bốn chân cần chọn ván lướt sóng thay vì dải vải và đẩy nó để bắc cầu qua khoảng trống (Vượt-Sofa). Cánh tay robot cần chọn búa trong nhiều lựa chọn và sử dụng nó như một móc để kéo hộp sữa vào không gian làm việc (Với-tới-Sữa). (b) Sử dụng công cụ tuần tự. Robot bốn chân cần đẩy một hộp nhỏ chống lại một hộp lớn liền kề với ghế sofa và sử dụng hộp nhỏ như viên đá bước ban đầu và hộp lớn như viên đá bước trung gian để trèo lên ghế sofa (Trèo-Sofa). Cánh tay robot cần nhặt một cây gậy, đẩy một lon lên một dải giấy, và sau đó kéo giấy gần hơn với lon trên đó (Nắm-Lon). (c) Sản xuất công cụ. Robot bốn chân cần xác định cấu trúc đòn bẩy ẩn trong môi trường và đẩy đi một chiếc ghế đỡ một đầu của đòn bẩy để có thể kích hoạt cánh tay đòn bẩy và nâng một khối nặng (Nâng-Khối). Cánh tay robot cần lắp ráp các khối từ tính để tạo ra một cây gậy để ấn một nút bên ngoài không gian làm việc của nó (Ấn-Nút).

vào không gian làm việc." Bộ lập kế hoạch có thể khám phá các chức năng của đối tượng vượt ra ngoài khả năng tiêu chuẩn của chúng, thể hiện khả năng sử dụng công cụ sáng tạo bằng cách suy luận về tính chất vật lý và hình học của đối tượng. Ngoài ra, Bộ lập kế hoạch có thể tạo ra kế hoạch dài hạn, đặc biệt là trong việc xử lý các nhiệm vụ đòi hỏi nhiều công cụ tuần tự. Ví dụ, nó có thể tạo ra một kế hoạch gồm 15 bước kế hoạch cho nhiệm vụ "Nắm-Lon" như trong Hình 5.

3.2.3 BỘ TÍNH TOÁN

Các tài liệu hiện có cho thấy hiệu suất của LLM có xu hướng giảm khi chúng hoạt động trên các mức độ trừu tượng khác nhau (Liang et al., 2023; Yu et al., 2023). Được truyền cảm hứng từ những phát hiện này, chúng tôi giới thiệu Bộ tính toán, một LLM độc lập để tính toán các tham số mong muốn cho kỹ năng cấp thấp có tham số ở mỗi bước kế hoạch, được ký hiệu là X trong Phần 3.1. Bộ tính toán xử lý cả mô tả được tăng cường khái niệm chính L∗ và khung kế hoạch H được tạo bởi Bộ lập kế hoạch cho việc tính toán của nó. Tương tự như Bộ phân tích và Bộ lập kế hoạch, nó tạo ra một phản hồi với hai phần, bao gồm một phần mô tả hiển thị quá trình tính toán của nó và một phần câu trả lời chứa các giá trị số. Những kết quả số này, đại diện cho vị trí mục tiêu, sau đó được tích hợp vào mỗi bước tương ứng của khung kế hoạch. Chúng tôi cung cấp cho Bộ tính toán nhiều ví dụ mẫu và quy tắc để giúp suy ra vị trí mục tiêu. Bộ tính toán có thể tạo ra vị trí mục tiêu điều hướng cho robot bốn chân và độ lệch đẩy cho cánh tay robot để thao tác đối tượng.

3.2.4 BỘ LẬP MÃ

Cuối cùng, chúng tôi giới thiệu mô-đun Bộ lập mã chuyển đổi kế hoạch (H, X) thành script mã thực thi được τ gọi các kỹ năng cấp thấp của robot, API nhận thức và thư viện Python tích hợp để tương tác với môi trường. Chúng tôi cung cấp cho Bộ lập mã các định nghĩa của từng kỹ năng cấp thấp và các quy tắc liên quan đến mẫu. Mặc dù Bộ lập mã tạo ra script theo cách vòng lặp mở, mã được tạo ra được thiết kế vốn để nhận phản hồi từ môi trường. Nó đạt được điều này thông qua các kỹ năng tích hợp như "getposition", cấp một mức độ phản ứng nhất định với những thay đổi môi trường.

--- TRANG 7 ---
4 BỘ ĐÁNH GIÁ SỬ DỤNG CÔNG CỤ ROBOT SÁNG TẠO

Không giống như việc sử dụng công cụ thông thường, việc sử dụng công cụ sáng tạo, còn được gọi là sử dụng công cụ linh hoạt, được một số người nhận ra như một dấu hiệu của trí thông minh tiên tiến, biểu thị sự suy luận rõ ràng của động vật về các ứng dụng công cụ phụ thuộc vào bối cảnh (Call, 2013). Từ góc độ giải quyết vấn đề tổng quát, Fitzgerald et al. (2021) đã đặc điểm hóa thêm các thuộc tính sáng tạo của con người, bao gồm ứng biến khi không có công cụ điển hình, sử dụng công cụ theo những cách mới và thiết kế công cụ sáng tạo phù hợp cho các nhiệm vụ mới. Trong công trình này, chúng tôi nhằm khám phá ba danh mục thách thức của việc sử dụng công cụ sáng tạo cho robot: lựa chọn công cụ, sử dụng công cụ tuần tự và sản xuất công cụ (Qin et al., 2023). Chúng tôi thiết kế sáu nhiệm vụ cho hai thể chất robot khác nhau: robot bốn chân và cánh tay robot. Chi tiết của từng nhiệm vụ được hiển thị trong Hình 5 và Phần E, và các ràng buộc bị vi phạm của từng nhiệm vụ được liệt kê trong Bảng 2.

• Lựa chọn công cụ (Vượt-Sofa và Với-tới-Sữa) đòi hỏi khả năng suy luận để chọn công cụ phù hợp nhất trong nhiều lựa chọn. Nó đòi hỏi hiểu biết rộng về các thuộc tính đối tượng như kích thước, vật liệu và hình dạng, cũng như khả năng phân tích mối quan hệ giữa các tính chất này và mục tiêu dự định.

• Sử dụng công cụ tuần tự (Trèo-Sofa và Nắm-Lon) đòi hỏi việc sử dụng một loạt công cụ theo thứ tự cụ thể để đạt được mục tiêu mong muốn. Độ phức tạp của nó phát sinh từ nhu cầu lập kế hoạch dài hạn để xác định chuỗi tốt nhất cho việc sử dụng công cụ, với việc hoàn thành thành công phụ thuộc vào độ chính xác của từng bước trong kế hoạch.

• Sản xuất công cụ (Nâng-Khối và Ấn-Nút) bao gồm việc hoàn thành các nhiệm vụ bằng cách chế tạo công cụ từ vật liệu có sẵn hoặc điều chỉnh các công cụ hiện có. Quy trình này đòi hỏi robot phải hiểu các kết nối ngầm định giữa các đối tượng và lắp ráp các thành phần thông qua thao tác.

5 KẾT QUẢ THÍ NGHIỆM

Chúng tôi nhằm điều tra liệu RoboTool có sở hữu các loại khả năng sử dụng công cụ sáng tạo khác nhau hay không bằng cách đánh giá nó trên bộ đánh giá được nêu trong Phần 4. Chúng tôi xây dựng cả nền tảng mô phỏng và thế giới thực được chi tiết trong Phần 5.1 và so sánh RoboTool với bốn baseline được mô tả trong Phần 5.2. Chúng tôi đo lường tỷ lệ thành công nhiệm vụ để hiểu hiệu suất của RoboTool trong Phần 5.3 và phân tích tác động của các mô-đun RoboTool thông qua phân tích lỗi trong Phần 5.4. Sau đó chúng tôi đi sâu hơn vào vai trò của Bộ phân tích và cho thấy rằng nó cho phép các hành vi sử dụng công cụ sáng tạo phân biệt trong Phần 5.5.

5.1 THIẾT LẬP THÍ NGHIỆM

Cánh tay Robot. Chúng tôi kiểm tra RoboTool với cánh tay robot Kinova Gen3 (chi tiết trong Phần C). Trong mô phỏng, chúng tôi xây dựng các nhiệm vụ dựa trên robosuite (Zhu et al., 2020) và giả sử biết vị trí và kích thước đối tượng. Trong các thí nghiệm thế giới thực, chúng tôi sử dụng OWL-ViT (Minderer et al., 2022) để thu được vị trí 2D và hộp giới hạn cho từng đối tượng. Trong cả hai nền tảng, robot duy trì một tập kỹ năng là ["getposition", "getsize", "open_gripper", "close_gripper", "move_to_position"]. Lưu ý rằng chúng tôi sử dụng các kỹ năng mà không liệt kê rõ ràng các chuyển động tập trung vào đối tượng được gây ra bởi kỹ năng "move_to_position", chẳng hạn như đẩy hoặc nhặt.

Robot Bốn chân. Chúng tôi kiểm tra RoboTool với robot bốn chân Unitree Go1 (chi tiết trong Phần B). Các thí nghiệm mô phỏng cho robot bốn chân được đánh giá dựa trên mã được tạo ra và thông qua đánh giá của con người. Trong các thí nghiệm thế giới thực, xem xét không gian làm việc tương đối lớn so với thiết lập trên bàn khi thí nghiệm với cánh tay robot, chúng tôi sử dụng AprilTags (Olson, 2011) gắn trên mỗi đối tượng trong các thí nghiệm thế giới thực để lấy vị trí của đối tượng. Mỗi kỹ năng trong các thí nghiệm thế giới thực được trang bị các bộ lập kế hoạch chuyển động cụ thể cho kỹ năng để tạo ra các lệnh vận tốc mượt mà và không va chạm cho các chế độ đi bộ khác nhau của Go1. Đối với cả thí nghiệm mô phỏng và thế giới thực, tập kỹ năng của robot bốn chân là ["getposition", "getsize", "walk_to_position", "climb_to_position", "push_to_position"].

5.2 BASELINE

Chúng tôi so sánh RoboTool với bốn baseline, bao gồm một biến thể của Code-as-Policies (Liang et al., 2023) và ba biến thể của RoboTool được đề xuất của chúng tôi.

• Bộ lập mã. Nó nhận hướng dẫn bằng ngôn ngữ tự nhiên làm đầu vào và trực tiếp đưa ra mã thực thi được. Đây là một biến thể được thúc đẩy bởi Code-as-Policies (Liang et al., 2023). Baseline này thể hiện tác động kết hợp của ba mô-đun khác trong RoboTool.

--- TRANG 8 ---
Bảng 1: Tỷ lệ thành công của RoboTool và baseline. Mỗi giá trị được tính trung bình trên 10 lần chạy. Tất cả các phương pháp ngoại trừ RoboTool (Thế giới Thực) được đánh giá trong mô phỏng.

| | Với-tới-Sữa | Nắm-Lon | Ấn-Nút | Vượt-Sofa | Trèo-Sofa | Nâng-Khối | Trung bình |
|---|---|---|---|---|---|---|---|
| RoboTool | 0.9 | 0.7 | 0.8 | 1.0 | 1.0 | 0.8 | 0.87 |
| RoboTool w/o Analyzer | 0.0 | 0.4 | 0.2 | 1.0 | 0.7 | 0.2 | 0.42 |
| RoboTool w/o Calculator | 0.0 | 0.1 | 0.8 | 0.3 | 0.0 | 0.3 | 0.25 |
| Planner-Coder | 0.0 | 0.2 | 0.5 | 0.1 | 0.0 | 0.4 | 0.20 |
| Coder | 0.0 | 0.0 | 0.0 | 0.0 | 0.0 | 0.4 | 0.07 |
| RoboTool (Thế giới Thực) | 0.7 | 0.7 | 0.8 | 0.7 | 0.8 | 0.9 | 0.77 |

Bảng 2: Độ chính xác khái niệm chính được đề xuất của RoboTool trong mô phỏng. Mỗi giá trị được tính trung bình trên 10 lần chạy.

| Khái niệm Chính và Ràng buộc Bị vi phạm | Độ chính xác |
|---|---|
| Với-tới-Sữa | Vị trí sữa nằm ngoài không gian làm việc của robot. | 1.0 |
| Nắm-Lon | Vị trí lon nằm ngoài không gian làm việc của robot. | 1.0 |
| Ấn-Nút | Vị trí nút nằm ngoài không gian làm việc của robot. | 0.9 |
| Vượt-Sofa | Chiều rộng khoảng trống nằm ngoài khả năng đi bộ của robot. | 1.0 |
| Trèo-Sofa | Chiều cao sofa nằm ngoài khả năng trèo của robot. | 0.8 |
| Nâng-Khối | Trọng lượng khối nằm ngoài khả năng đẩy của robot. | 1.0 |

• Planner-Coder. Nó loại bỏ Bộ phân tích và Bộ tính toán trong RoboTool. Baseline này thể hiện tác động kết hợp của các mô-đun Bộ phân tích và Bộ tính toán.
• RoboTool không có Bộ phân tích. Bộ lập kế hoạch trực tiếp nhận hướng dẫn ngôn ngữ làm đầu vào. Baseline này tiết lộ tác động của Bộ phân tích trong lập kế hoạch downstream.
• RoboTool không có Bộ tính toán. Bộ lập mã trực tiếp nhận phản hồi của Bộ lập kế hoạch. Baseline này thể hiện tác động của mô-đun Bộ tính toán.

Chúng tôi đánh giá RoboTool cả trong mô phỏng và trong thế giới thực trong khi chỉ đánh giá baseline trong mô phỏng do tỷ lệ thành công tương đối thấp của chúng trong mô phỏng. Các prompt của RoboTool có trong Phần D.

5.3 ROBOTOOL CÓ THỂ ĐẠT ĐƯỢC SỬ DỤNG CÔNG CỤ SÁNG TẠO KHÔNG?

Chúng tôi trình bày tỷ lệ thành công định lượng của RoboTool và baseline trong Bảng 1 và hình ảnh hóa định tính thế giới thực của RoboTool trong Hình 5. RoboTool liên tục đạt được tỷ lệ thành công có thể so sánh hoặc vượt trội so với các baseline trên sáu nhiệm vụ trong mô phỏng. Hiệu suất của RoboTool trong thế giới thực giảm 0.1 so với kết quả mô phỏng, chủ yếu do lỗi nhận thức và lỗi thực thi liên quan đến các kỹ năng có tham số, chẳng hạn như robot bốn chân rơi khỏi ghế sofa mềm. Tuy nhiên, RoboTool (Thế giới Thực) vẫn vượt trội hơn hiệu suất mô phỏng của tất cả baseline. Xem xét rằng các nhiệm vụ trong Phần 4 không khả thi nếu không thao tác đối tượng như công cụ, chúng tôi cho thấy RoboTool có thể thành công cho phép các hành vi sử dụng công cụ robot. Hơn nữa, như được hình ảnh hóa trong Hình 5, RoboTool vượt ra ngoài các chức năng tiêu chuẩn của đối tượng và sáng tạo tận dụng các tính chất vật lý và hình học của chúng, bao gồm vật liệu, hình dạng và kích thước. Dưới đây là một số điểm nổi bật của các hành vi sử dụng công cụ sáng tạo.

Kiến thức Trước. Trong nhiệm vụ Với-tới-Sữa (Hình 5a), RoboTool tận dụng kiến thức trước của LLM về hình dạng của tất cả các đối tượng có sẵn và do đó ứng biến sử dụng búa như một tay cầm hình chữ L để kéo hộp sữa vào không gian làm việc.

Lập kế hoạch Dài hạn. Trong nhiệm vụ Nắm-Lon (Hình 5b), RoboTool tuần tự sử dụng gậy để đẩy lon lên cuộn giấy và sau đó kéo cuộn giấy vào không gian làm việc với lon trên đó. Điều này tiết lộ khả năng lập kế hoạch dài hạn của RoboTool bằng cách tạo ra một kế hoạch với tới 15 bước.

Xác định Cơ chế Ẩn. Trong nhiệm vụ Nâng-Khối với robot bốn chân (Hình 5c), RoboTool xác định sự tồn tại tiềm năng của một cơ chế gồm con lăn yoga làm điểm tựa và ván lướt sóng làm đòn bẩy. RoboTool đầu tiên xây dựng đòn bẩy bằng cách đẩy ghế đi, sau đó kích hoạt đòn bẩy bằng cách đi đến một đầu của đòn bẩy, và cuối cùng nâng khối. Nó minh họa rằng RoboTool không chỉ có thể chế tạo công cụ từ các đối tượng có sẵn mà còn sử dụng công cụ mới được tạo ra.

RoboTool không có Bộ phân tích hoạt động tệ hơn RoboTool nhưng tốt hơn RoboTool không có Bộ tính toán. Hơn nữa, chúng hoạt động tốt hơn các baseline thiếu Bộ phân tích và Bộ tính toán, bao gồm Planner-Coder và Coder. Những quan sát này cho thấy rằng cả Bộ phân tích và Bộ tính toán đều quan trọng trong việc đạt được tỷ lệ thành công cao, và Bộ tính toán đóng vai trò quan trọng hơn trong các nhiệm vụ đòi hỏi độ lệch vị trí chính xác như Với-tới-Sữa, Nắm-Lon và Trèo-Sofa.

--- TRANG 9 ---
RoboTool | RoboTool w/o Analyzer | RoboTool w/o Calculator | Planner-Coder | Coder
0.0 | 0.2 | 0.4 | 0.6 | 0.8 | 1.0
Lỗi Sử dụng Công cụ | Lỗi Logic | Lỗi Số | Thành công

(a) Phân tích lỗi

Xác suất
1.00 | 1.00
0.90 | 0.90
0.15 | 0.90
1.00 | 1.00
0.90 | 1.00
0.10 | 1.00

Không Sử dụng Công cụ | Có Sử dụng Công cụ
Khoảng trống Nhỏ | Sofa Thấp
Khoảng trống Lớn | Sofa Cao

Oracle | RoboTool | RoboTool w/o Analyzer

(b) Hành vi sử dụng công cụ phân biệt

Hình 6: (a) Phân tích lỗi của RoboTool và baseline. (b) Hành vi sử dụng công cụ phân biệt được kích hoạt bởi suy luận rõ ràng của Bộ phân tích về các khái niệm chính.

5.4 PHÂN TÍCH LỖI

Chúng tôi tiếp tục phân tích nguyên nhân gây ra thất bại của RoboTool và baseline dựa trên các thí nghiệm mô phỏng. Chúng tôi định nghĩa ba loại lỗi: lỗi sử dụng công cụ, lỗi logic và lỗi số. Lỗi sử dụng công cụ cho biết liệu công cụ đúng có được sử dụng hay không. Lỗi logic chủ yếu tập trung vào lỗi lập kế hoạch, chẳng hạn như sử dụng công cụ theo thứ tự sai hoặc bỏ qua các ràng buộc được cung cấp. Lỗi số bao gồm tính toán sai vị trí mục tiêu hoặc thêm độ lệch không chính xác. Chúng tôi hiển thị phân tích lỗi được tính trung bình trên sáu nhiệm vụ trong Hình 6a. Kết quả cho thấy rằng Bộ phân tích giúp giảm lỗi sử dụng công cụ khi so sánh RoboTool và RoboTool không có Bộ phân tích. Bộ tính toán giảm đáng kể lỗi số khi so sánh RoboTool, RoboTool không có Bộ tính toán và Planner-Coder. Chúng tôi cung cấp kết quả phân tích lỗi cho từng nhiệm vụ trong Phần A.

5.5 BỘ PHÂN TÍCH ẢNH HƯỞNG NHƯ THẾ NÀO ĐẾN KHẢCÓ SỬ DỤNG CÔNG CỤ?

Độ Chính xác Xác định Khái niệm Chính. Chúng tôi hiển thị độ chính xác của khái niệm chính được đề xuất trong Bảng 2, dựa trên việc Bộ phân tích có trả về đúng khái niệm chính, giá trị của khái niệm chính và ràng buộc liên quan hay không. Các phản hồi mục tiêu được cung cấp bởi con người. Kết quả cho thấy rằng Bộ phân tích có thể xác định chính xác khái niệm chính ảnh hưởng đến tính khả thi của kế hoạch và tính toán chính xác giá trị của khái niệm chính. Ví dụ, trong nhiệm vụ Vượt-Sofa, khái niệm chính được xác định là khoảng cách giữa ranh giới của hai ghế sofa, đó là chiều rộng khoảng trống mà robot cần bao phủ. Hơn nữa, Bộ phân tích có thể liên kết khái niệm chính với giới hạn của robot: robot bốn chân chỉ có thể đi qua khoảng trống trên 0.1m.

Khả năng Sử dụng Công cụ Phân biệt. Với khả năng sử dụng công cụ sáng tạo ấn tượng của RoboTool, chúng tôi muốn điều tra thêm liệu RoboTool có sở hữu khả năng sử dụng công cụ phân biệt hay không, đó là sử dụng công cụ khi cần thiết và bỏ qua công cụ khi robot có thể trực tiếp hoàn thành nhiệm vụ mà không cần thao tác các đối tượng khác. Chúng tôi chọn Vượt-Sofa và Trèo-Sofa để kiểm tra khả năng sử dụng công cụ phân biệt. Đối với Vượt-Sofa, chúng tôi so sánh tỷ lệ sử dụng công cụ trong các tình huống với khoảng trống lớn nơi sử dụng công cụ là cần thiết, so với các tình huống với khoảng trống nhỏ cho phép robot đi đến ghế sofa khác mà không sử dụng công cụ. Đối với Trèo-Sofa, chúng tôi đánh giá tỷ lệ sử dụng công cụ trong các tình huống nơi ghế sofa cao yêu cầu sử dụng hộp như viên đá bước, ngược lại với ghế sofa thấp, trong đó robot có thể leo lên trực tiếp mà không cần hỗ trợ.

Chúng tôi so sánh RoboTool với Oracle có thể suy ra kế hoạch hiệu quả nhất và baseline RoboTool không có Bộ phân tích, và trình bày kết quả chính trong Hình 6. Trong cả hai tập nhiệm vụ, RoboTool có xu hướng không sử dụng công cụ khi không cần thiết (Khoảng trống Nhỏ và Sofa Thấp), thể hiện hành vi thích ứng hơn với các bố cục môi trường khác nhau. Ngược lại, không có sự trợ giúp của Bộ phân tích, baseline có xu hướng sử dụng công cụ trong cả bốn tình huống, bị chi phối bởi kiến thức trước trong LLM. Những quan sát này cho thấy rằng Bộ phân tích giúp kích hoạt hành vi sử dụng công cụ phân biệt của RoboTool.

6 KẾT LUẬN

Chúng tôi giới thiệu RoboTool, một người dùng công cụ robot sáng tạo được cung cấp năng lượng bởi LLM cho phép giải quyết các vấn đề lập kế hoạch dài hạn với các ràng buộc vật lý ngầm định. RoboTool chứa bốn thành phần: (i) một "Bộ phân tích" hiểu các khái niệm quan trọng liên quan đến tính khả thi nhiệm vụ, (ii) một "Bộ lập kế hoạch" tạo ra các kế hoạch sử dụng công cụ sáng tạo, (iii) một "Bộ tính toán" tính toán các tham số của kỹ năng, và (iv) một "Bộ lập mã" tạo ra mã thực thi được. Chúng tôi đề xuất một bộ đánh giá để đánh giá ba hành vi sử dụng công cụ sáng tạo, bao gồm lựa chọn công cụ, sử dụng công cụ tuần tự và sản xuất công cụ. Thông qua đánh giá trên bộ đánh giá sử dụng công cụ sáng tạo, chúng tôi cho thấy RoboTool có thể xác định công cụ đúng, tạo ra các kế hoạch sử dụng công cụ chính xác và tạo ra các công cụ mới để hoàn thành nhiệm vụ. Chúng tôi so sánh phương pháp của mình với bốn phương pháp baseline và chứng minh rằng RoboTool đạt được hiệu suất vượt trội khi các nhiệm vụ mong muốn đòi hỏi việc sử dụng công cụ chính xác và sáng tạo.

Hạn chế. Vì chúng tôi tập trung vào khả năng sử dụng công cụ của LLM ở cấp độ nhiệm vụ trong bài báo này, chúng tôi dựa vào các API hiện có để xử lý thông tin thị giác, chẳng hạn như mô tả các điểm có thể nắm của từng đối tượng và tóm tắt cảnh. Có thể tích hợp các mô hình ngôn ngữ thị giác để thay thế API được thiết kế để có được khả năng cho từng đối tượng tương tự như VoxPoser (Huang et al., 2023b). Ngoài ra, chúng tôi nhấn mạnh rằng phương pháp được đề xuất phục vụ như một bộ lập kế hoạch, chuyên về việc tạo kế hoạch thực thi được, không phải là một khung thực thi. Việc thực thi phản ứng với vòng lặp phản hồi có thể đạt được bằng cách tích hợp shooting lai và tìm kiếm tham lam vào phương pháp của chúng tôi, chẳng hạn như trong Lin et al. (2023).

LỜI CẢM ƠN

Chúng tôi muốn cảm ơn Jacky Liang vì phản hồi và gợi ý, và Yuyou Zhang, Yikai Wang, Changyi Lin vì đã giúp thiết lập các thí nghiệm thế giới thực.

--- TRANG 10 ---
TÀI LIỆU THAM KHẢO

Michael Ahn, Anthony Brohan, Noah Brown, Yevgen Chebotar, Omar Cortes, Byron David, Chelsea Finn, Chuyuan Fu, Keerthana Gopalakrishnan, Karol Hausman, et al. Do as i can, not as i say: Grounding language in robotic affordances. arXiv preprint arXiv:2204.01691, 2022. 2, 3, 5

Anthony Brohan, Noah Brown, Justice Carbajal, Yevgen Chebotar, Xi Chen, Krzysztof Choromanski, Tianli Ding, Danny Driess, Avinava Dubey, Chelsea Finn, et al. Rt-2: Vision-language-action models transfer web knowledge to robotic control. arXiv preprint arXiv:2307.15818, 2023. 2, 3

Josep Call. Three ingredients for becoming a creative tool user, pp. 3–20. Cambridge University Press, 2013. doi: 10.1017/CBO9780511894800.002. 7

Yongchao Chen, Jacob Arkin, Yang Zhang, Nicholas Roy, and Chuchu Fan. Autotamp: Autoregressive task and motion planning with llms as translators and checkers. arXiv preprint arXiv:2306.06531, 2023. 2, 3

Yan Ding, Xiaohan Zhang, Chris Paxton, and Shiqi Zhang. Task and motion planning with large language models for object rearrangement. arXiv preprint arXiv:2303.06247, 2023. 3

Carl Henrik Ek, Dan Song, Kai Huebner, and Danica Kragic. Exploring affordances in robot grasping through latent structure representation. Vision for Cognitive Tasks, ECCV, 2010. 17

Kuan Fang, Yuke Zhu, Animesh Garg, Andrey Kurenkov, Viraj Mehta, Li Fei-Fei, and Silvio Savarese. Learning task-oriented grasping for tool manipulation from simulated self-supervision. The International Journal of Robotics Research, 39(2-3):202–216, 2020. 3, 17

M. Fischler and R. Bolles. Random sample consensus: A paradigm for model fitting with applications to image analysis and automated cartography. Communications of the ACM, 24(6):381–395, 1981. 15, 17

Tesca Fitzgerald, Ashok Goel, and Andrea Thomaz. Modeling and learning constraints for creative tool use. Frontiers in Robotics and AI, 8:674292, 2021. 1, 7

Jonathan D. Gammell, Siddhartha S. Srinivasa, and Timothy D. Barfoot. Informed rrt*: Optimal sampling-based path planning focused via direct sampling of an admissible ellipsoidal heuristic. In 2014 IEEE/RSJ International Conference on Intelligent Robots and Systems, pp. 2997–3004, 2014. doi: 10.1109/IROS.2014.6942976. 15

Caelan Reed Garrett, Tomás Lozano-Pérez, and Leslie Pack Kaelbling. Pddlstream: Integrating symbolic planners and blackbox samplers via optimistic adaptive planning. In Proceedings of the International Conference on Automated Planning and Scheduling, volume 30, pp. 440–448, 2020. 3

Caelan Reed Garrett, Rohan Chitnis, Rachel Holladay, Beomjoon Kim, Tom Silver, Leslie Pack Kaelbling, and Tomás Lozano-Pérez. Integrated task and motion planning. Annual review of control, robotics, and autonomous systems, 4:265–293, 2021. 2, 3

Michael D Gumert, Marius Kluck, and Suchinda Malaivijitnond. The physical characteristics and usage patterns of stone axe and pounding hammers used by long-tailed macaques in the andaman sea region of thailand. American Journal of Primatology: Official Journal of the American Society of Primatologists, 71(7):594–608, 2009. 1

Siyuan Huang, Zhengkai Jiang, Hao Dong, Yu Qiao, Peng Gao, and Hongsheng Li. Instruct2act: Mapping multi-modality instructions to robotic actions with large language model. arXiv preprint arXiv:2305.11176, 2023a. 3

Wenlong Huang, Pieter Abbeel, Deepak Pathak, and Igor Mordatch. Language models as zero-shot planners: Extracting actionable knowledge for embodied agents. In International Conference on Machine Learning, pp. 9118–9147. PMLR, 2022a. 2, 3, 5

Wenlong Huang, Fei Xia, Ted Xiao, Harris Chan, Jacky Liang, Pete Florence, Andy Zeng, Jonathan Tompson, Igor Mordatch, Yevgen Chebotar, et al. Inner monologue: Embodied reasoning through planning with language models. arXiv preprint arXiv:2207.05608, 2022b. 3

--- TRANG 11 ---
Wenlong Huang, Chen Wang, Ruohan Zhang, Yunzhu Li, Jiajun Wu, and Li Fei-Fei. Voxposer: Composable 3d value maps for robotic manipulation with language models. arXiv preprint arXiv:2307.05973, 2023b. 2, 3, 10

Wenlong Huang, Fei Xia, Dhruv Shah, Danny Driess, Andy Zeng, Yao Lu, Pete Florence, Igor Mordatch, Sergey Levine, Karol Hausman, et al. Grounded decoding: Guiding text generation with grounded models for robot control. arXiv preprint arXiv:2303.00855, 2023c. 3

Leslie Pack Kaelbling and Tomás Lozano-Pérez. Hierarchical task and motion planning in the now. In 2011 IEEE International Conference on Robotics and Automation, pp. 1470–1477. IEEE, 2011. 3

Liyiming Ke, Jingqiang Wang, Tapomayukh Bhattacharjee, Byron Boots, and Siddhartha Srinivasa. Grasping with chopsticks: Combating covariate shift in model-free imitation learning for fine manipulation. In 2021 IEEE International Conference on Robotics and Automation (ICRA), pp. 6185–6191. IEEE, 2021. 3

Wolfgang Kohler. The mentality of apes. Routledge, 2018. 1

Martin Levihn and Mike Stilman. Using environment objects as tools: Unconventional door opening. In 2014 IEEE/RSJ International Conference on Intelligent Robots and Systems, pp. 2502–2508. IEEE, 2014. 3

Jacky Liang, Wenlong Huang, Fei Xia, Peng Xu, Karol Hausman, Brian Ichter, Pete Florence, and Andy Zeng. Code as policies: Language model programs for embodied control. In 2023 IEEE International Conference on Robotics and Automation (ICRA), pp. 9493–9500. IEEE, 2023. 3, 6, 7

Kevin Lin, Christopher Agia, Toki Migimatsu, Marco Pavone, and Jeannette Bohg. Text2motion: From natural language instructions to feasible plans. arXiv preprint arXiv:2303.12153, 2023. 2, 3, 10

Yun Lin and Yu Sun. Robot grasp planning based on demonstrated grasp strategies. The International Journal of Robotics Research, 34(1):26–42, 2015. 17

Bo Liu, Yuqian Jiang, Xiaohan Zhang, Qiang Liu, Shiqi Zhang, Joydeep Biswas, and Peter Stone. Llm+p: Empowering large language models with optimal planning proficiency. arXiv preprint arXiv:2304.11477, 2023. 3

Matthias Minderer, Alexey Gritsenko, Austin Stone, Maxim Neumann, Dirk Weissenborn, Alexey Dosovitskiy, Aravindh Mahendran, Anurag Arnab, Mostafa Dehghani, Zhuoran Shen, et al. Simple open-vocabulary object detection. In European Conference on Computer Vision, pp. 728–755. Springer, 2022. 7, 17, 18

Katharina Muelling, Jens Kober, and Jan Peters. Learning table tennis with a mixture of motor primitives. In 2010 10th IEEE-RAS International Conference on Humanoid Robots, pp. 411–416. IEEE, 2010. 3

Austin Myers, Ching L Teo, Cornelia Fermüller, and Yiannis Aloimonos. Affordance detection of tool parts from geometric features. In 2015 IEEE International Conference on Robotics and Automation (ICRA), pp. 1374–1381. IEEE, 2015. 17

Fusaomi Nagata, Keigo Watanabe, and Kiyotaka Izumi. Furniture polishing robot using a trajectory generator based on cutter location data. In Proceedings 2001 ICRA. IEEE International Conference on Robotics and Automation (Cat. No. 01CH37164), volume 1, pp. 319–324. IEEE, 2001. 3

Edwin Olson. Apriltag: A robust and flexible visual fiducial system. In 2011 IEEE international conference on robotics and automation, pp. 3400–3407. IEEE, 2011. 7

Kai Pfeiffer, Adrien Escande, and Abderrahmane Kheddar. Nut fastening with a humanoid robot. In 2017 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), pp. 6142–6148. IEEE, 2017. 3

--- TRANG 12 ---
Meiying Qin, Jake Brawer, and Brian Scassellati. Robot tool use: A survey. Frontiers in Robotics and AI, 9:1009488, 2023. 7

Allen Z Ren, Anushri Dixit, Alexandra Bodrova, Sumeet Singh, Stephen Tu, Noah Brown, Peng Xu, Leila Takayama, Fei Xia, Jake Varley, et al. Robots that ask for help: Uncertainty alignment for large language model planners. arXiv preprint arXiv:2307.01928, 2023a. 3

Allen Z Ren, Bharat Govil, Tsung-Yen Yang, Karthik R Narasimhan, and Anirudha Majumdar. Leveraging language for accelerated learning of tool manipulation. In Conference on Robot Learning, pp. 1531–1541. PMLR, 2023b. 3

Tom Silver, Soham Dan, Kavitha Srinivas, Joshua B Tenenbaum, Leslie Pack Kaelbling, and Michael Katz. Generalized planning in pddl domains with pretrained large language models. arXiv preprint arXiv:2305.11014, 2023. 3

Jivko Sinapov and Alexadner Stoytchev. Detecting the functional similarities between tools using a hierarchical representation of outcomes. In 2008 7th IEEE International Conference on Development and Learning, pp. 91–96. IEEE, 2008. 3

Ishika Singh, Valts Blukis, Arsalan Mousavian, Ankit Goyal, Danfei Xu, Jonathan Tremblay, Dieter Fox, Jesse Thomason, and Animesh Garg. Progprompt: Generating situated robot task plans using large language models. In 2023 IEEE International Conference on Robotics and Automation (ICRA), pp. 11523–11530. IEEE, 2023. 3

Dan Song, Kai Huebner, Ville Kyrki, and Danica Kragic. Learning task constraints for robot grasping using graphical models. In 2010 IEEE/RSJ International Conference on Intelligent Robots and Systems, pp. 1579–1585. IEEE, 2010. 17

Dan Song, Carl Henrik Ek, Kai Huebner, and Danica Kragic. Task-based robot grasp planning using probabilistic inference. IEEE transactions on robotics, 31(3):546–561, 2015. 17

Marc A Toussaint, Kelsey Rebecca Allen, Kevin A Smith, and Joshua B Tenenbaum. Differentiable physics and stable modes for tool-use and manipulation planning. Robotics: Science and Systems Foundation, 2018. 2, 3

Yijia Weng, Kaichun Mo, Ruoxi Shi, Yanchao Yang, and Leonidas Guibas. Towards learning geometric eigen-lengths crucial for fitting tasks. ICML, 2023. 5

Handy Wicaksono and Claude Sammut. Relational tool use learning by a robot in a real and simulated world. In Proceedings of ACRA, 2016. 3

Annie Xie, Frederik Ebert, Sergey Levine, and Chelsea Finn. Improvisation through physical understanding: Using novel objects as tools with visual foresight. arXiv preprint arXiv:1904.05538, 2019. 3

Yaqi Xie, Chen Yu, Tongyao Zhu, Jinbin Bai, Ze Gong, and Harold Soh. Translating natural language to planning goals with large-language models. arXiv preprint arXiv:2302.05128, 2023. 3

Wenhao Yu, Nimrod Gileadi, Chuyuan Fu, Sean Kirmani, Kuang-Huei Lee, Montse Gonzalez Arenas, Hao-Tien Lewis Chiang, Tom Erez, Leonard Hasenclever, Jan Humplik, et al. Language to rewards for robotic skill synthesis. arXiv preprint arXiv:2306.08647, 2023. 2, 6

Yuke Zhu, Josiah Wong, Ajay Mandlekar, Roberto Martín-Martín, Abhishek Joshi, Soroush Nasiriany, and Yifeng Zhu. robosuite: A modular simulation framework and benchmark for robot learning. arXiv preprint arXiv:2009.12293, 2020. 7

--- TRANG 13 ---
A KẾT QUẢ THÍ NGHIỆM BỔ SUNG

Chúng tôi cung cấp kết quả phân tích lỗi bổ sung trong Hình 7. Chúng tôi quan sát thấy rằng các mô-đun khác nhau đóng vai trò khác nhau trong các nhiệm vụ khác nhau. Ví dụ, trong nhiệm vụ Với-tới-Sữa, baseline Planner-Coder bị chi phối bởi lỗi sử dụng công cụ mà không biết sử dụng búa như công cụ để kéo sữa vào không gian làm việc. Trong trường hợp này, Bộ phân tích giúp giảm đáng kể lỗi sử dụng công cụ. Ngược lại, trong nhiệm vụ Nâng-Khối, hầu hết các kế hoạch được tạo ra có thể xây dựng một đòn bẩy bằng cách đẩy ghế đi. Tuy nhiên, các baseline có xu hướng bỏ qua trọng lượng của khối và giả sử rằng ván lướt sóng rơi xuống có thể tự động nâng khối. Trong trường hợp này, Bộ phân tích giúp giảm lỗi logic. Trong khi đó ở các nhiệm vụ khác, Bộ tính toán trở nên khá quan trọng, đặc biệt là trong Nắm-Lon, Trèo-Sofa và Với-tới-Sữa.

[Các biểu đồ phân tích lỗi cho từng nhiệm vụ được hiển thị]

(a) Với-tới-Sữa
(b) Vượt-Sofa  
(c) Nắm-Lon
(d) Trèo-Sofa
(e) Ấn-Nút
(f) Nâng-Khối

Hình 7: Phân tích lỗi cho từng nhiệm vụ sử dụng công cụ sáng tạo.

--- TRANG 14 ---
B THIẾT LẬP THẾ GIỚI THỰC CHO ROBOT BỐN CHÂN

Trong thiết lập môi trường robot bốn chân, một số đối tượng mà robot có thể tương tác được trình bày trong Hình 8. Chúng bao gồm hai khối có chiều cao khác nhau, hai ghế sofa được đặt liền kề với khoảng trống giữa chúng, một chiếc ghế, một ván lướt sóng và một con lăn yoga. Ngoài ra, hai camera ZED2 được đặt ở góc trên-trái và trên-phải của môi trường để ghi lại vị trí của robot và các đối tượng khác. Những April tag này có thể được nhận dạng bởi hai camera ZED 2 đặt ở góc trên-trái và trên-phải của môi trường, cho phép tính toán vị trí của đối tượng bằng thuật toán PnP Fischler & Bolles (1981).

[Hình 8 hiển thị sơ đồ thiết lập môi trường robot bốn chân với các đối tượng được đặt tên]

Hình 8: Các hình minh họa thiết lập môi trường robot bốn chân, bao gồm tên đối tượng và hình học. Hình ảnh hiển thị các đối tượng khác nhau mà robot có thể tương tác. Các đối tượng được mô tả ở trên được gắn nhãn với tên trong hình.

Robot bốn chân sở hữu năm kỹ năng trong bộ kỹ năng của mình: move_to_position, push_to_position, climb_to_position, get_position, get_size.

B.1 DI CHUYỂN ĐẾN VỊ TRÍ

Khi gọi kỹ năng này, robot bốn chân điều hướng đến vị trí mục tiêu từ vị trí hiện tại của nó, tránh các chướng ngại vật có trong cảnh. Chuyển động được hỗ trợ bằng cách sử dụng bước đi trot tích hợp trong chế độ đi bộ liên tục từ Unitree. Các quỹ đạo được tạo ra bằng phương pháp informed RRT* Gammell et al. (2014) để ngăn chặn va chạm tiềm ẩn trong quá trình lập kế hoạch quỹ đạo. Hình 9 minh họa một ví dụ về quỹ đạo được tạo bởi bộ lập kế hoạch chuyển động và thể hiện chuyển động của robot dọc theo đường này.

B.2 ĐẨY ĐẾN VỊ TRÍ

Khi kỹ năng này được gọi, robot bốn chân đẩy một đối tượng đến vị trí mục tiêu theo trình tự này, cũng như được thể hiện trong Hình 10:

1. Xoay Đối tượng: Robot bốn chân ban đầu cố gắng xoay đối tượng cho đến khi độ xoay của nó dọc theo trục z phù hợp với mục tiêu.

--- TRANG 15 ---
Hình 9: Hình này minh họa kỹ năng di chuyển của robot, đạt đến vị trí mục tiêu trong khi tránh chướng ngại vật trên đường đi. Quỹ đạo không va chạm được tạo ra bởi bộ lập kế hoạch đường đi informed RRT*.

2. Đẩy dọc theo trục y: Robot bốn chân sau đó cố gắng đẩy đối tượng dọc theo trục y cho đến khi vị trí y của đối tượng khớp với mục tiêu.

3. Đẩy dọc theo trục x: Cuối cùng, robot bốn chân đẩy đối tượng dọc theo trục x cho đến khi vị trí x của đối tượng đạt mục tiêu.

(a) Xoay đối tượng (b) Đẩy dọc trục y (c) Đẩy dọc trục x

Hình 10: Hình này thể hiện kỹ năng đẩy đối tượng của robot. (a) Đầu tiên, robot xoay đối tượng bằng cách đẩy một góc. (b) Sau đó, nó đẩy đối tượng dọc theo trục y, (c) tiếp theo là trục x, cho đến khi đối tượng đạt đến vị trí được chỉ định.

B.3 TRÈO ĐẾN VỊ TRÍ

Kỹ năng này cho phép robot trèo đến vị trí mong muốn sử dụng chế độ leo cầu thang tích hợp từ Unitree. Lập kế hoạch đường đi bị vô hiệu hóa khi kỹ năng này được gọi vì robot có thể di chuyển trên các chướng ngại vật.

Hình 11: Minh họa thể hiện kỹ năng leo trèo của robot, robot thành công leo lên ghế sofa bằng cách điều hướng qua hộp 1 và hộp 2 có chiều cao khác nhau.

--- TRANG 16 ---
Hình 11 minh họa một trường hợp nơi robot trèo lên ghế sofa bằng cách leo lên hai hộp có chiều cao khác nhau.

B.4 LẤY VỊ TRÍ

Vị trí của từng đối tượng được ước tính bằng AprilTags được gắn trên chúng. Những AprilTags này có thể được nhận dạng bởi hai camera ZED 2, cho phép tính toán vị trí của đối tượng bằng thuật toán PnP (Fischler & Bolles, 1981). Hình 12 hiển thị vị trí ước tính của một số đối tượng từ một camera.

B.5 LẤY KÍCH THƯỚC

Các hộp giới hạn của đối tượng được đo trước và lưu trữ trong cơ sở dữ liệu. Mỗi lần hàm này được gọi, nó trả về kích thước của đối tượng dựa trên vị trí và hướng của nó.

Hình 12 minh họa một số hộp giới hạn đối tượng được ước tính từ một camera.

[Hình 12 với nhãn: Ván lướt, Robot chân, Hộp2, Hộp1, Ghế]

Hình 12: Hình ảnh này minh họa vị trí và hộp giới hạn ước tính của các đối tượng khác nhau, như được tính toán bởi thuật toán PnP bằng cách ghi lại AprilTags được đặt trên mỗi đối tượng. Các đối tượng được hiển thị bao gồm hộp 1, hộp 2, ván lướt sóng, robot bốn chân và ghế.

C THIẾT LẬP THẾ GIỚI THỰC CHO CÁNH TAY ROBOT

Chúng tôi kiểm tra RoboTool bằng cánh tay Robot Kinova Gen3 với 7 bậc tự do và một gripper hai ngón. Trong các thí nghiệm thế giới thực, chúng tôi áp dụng OWL-ViT Minderer et al. (2022) để thu được vị trí 2D và hộp giới hạn cho từng đối tượng. Chúng tôi làm điều này bằng cách chụp một góc nhìn từ trên xuống hơi nghiêng của cảnh. Tiếp theo, chúng tôi chuyển đổi tọa độ của hình ảnh được giới hạn từ 2D sang cả tọa độ thế giới và tọa độ robot. Cuối cùng, chúng tôi kết hợp thông tin độ sâu của mỗi đối tượng được phát hiện với hộp giới hạn 2D được chuyển đổi trong tọa độ robot để tính toán vị trí và kích thước 3D hoàn chỉnh của các đối tượng trong cảnh.

Chúng tôi giả sử điểm có thể nắm của mỗi đối tượng được cung cấp cho RoboTool. Điểm có thể nắm của đối tượng là một lĩnh vực nghiên cứu lâu đời và tích cực trong robot học (Fang et al., 2020; Lin & Sun, 2015; Myers et al., 2015; Song et al., 2010; Ek et al., 2010; Song et al., 2015). Trong công trình này, chúng tôi tập trung vào khả năng lập kế hoạch cấp cao của LLM thay vì chính sách nắm cấp thấp.

Trong thiết lập môi trường cánh tay robot, các nhiệm vụ tập trung vào thao tác trên bàn. như Ấn-Nút, Với-tới-Sữa và Nắm-Lon. Các nhiệm vụ được thực hiện bằng sự kết hợp của các kỹ năng sau: move_to_position, open_gripper, close_gripper, get_position, get_size

C.1 DI CHUYỂN ĐẾN VỊ TRÍ

Khi gọi kỹ năng move_to_position, bộ lập kế hoạch cấp cao tích hợp của Kinova sẽ tạo ra các điểm tham chiếu dọc theo hướng khoảng cách Euclidean giữa tư thế công cụ hiện tại và vị trí mục tiêu. Tuy nhiên, có một số ràng buộc được đưa ra bởi các cảnh đối tượng nhất định. Các đường dẫn lập kế hoạch chuyển động chi tiết được hiển thị trong Hình 13 và được mô tả như sau:

1. Với-tới-Sữa: Do các đặc điểm hình học của búa đối tượng, mà trung tâm của nó không đại diện cho điểm nắm của đối tượng, chúng tôi đã thêm một độ lệch cụ thể cho đối tượng trong cả trục x và y vào bộ lập kế hoạch chuyển động khi nắm búa. Tất cả các hành vi chuyển động khác được tạo ra bởi RoboTool và được thực hiện trực tiếp bởi bộ lập kế hoạch chuyển động cấp cao của Kinova.

2. Nắm-Lon: Trong thiết lập đối tượng, chúng tôi đã lập script trước một đường dẫn không va chạm cho vị trí mục tiêu. Thay vì di chuyển dọc theo vector khoảng cách Euclidean, chúng tôi giả sử cảnh ở trong thiết lập thế giới lưới nơi cánh tay chỉ có thể di chuyển theo một hướng một lần. Chuyển động tiếp cận đối tượng mục tiêu bắt đầu với Y, tiếp theo là X, và sau đó là Z.

3. Ấn-Nút: Đối với hình học khối từ tính, chỉ có bề mặt phẳng mới có thể được gắn chắc chắn. Để giải quyết sự không ổn định, chúng tôi giả sử cảnh Ấn-Nút ở trong thiết lập thế giới lưới nơi tác nhân cánh tay chỉ có thể di chuyển theo một hướng một lần. Chuyển động tiếp cận đối tượng mục tiêu bắt đầu với Z, tiếp theo là Y, và sau đó là X.

(a) Ấn-Nút (b) Với-tới-Sữa (c) Nắm-Lon

Hình 13: Hình này thể hiện thứ tự thực hiện được script cho bộ lập kế hoạch chuyển động cánh tay. Các mũi tên đỏ trong (b) hiển thị chuyển động vector khoảng cách Euclidean. (a) và (c) hiển thị thứ tự di chuyển được script trên mỗi trục.

C.2 LẤY VỊ TRÍ

Khi gọi hàm getposition, chúng tôi sử dụng phương pháp OWL-ViT như được chi tiết trong tài liệu tham khảo Minderer et al. (2022). Phương pháp này cho phép chúng tôi suy ra các hộp giới hạn 2D bao quanh các đối tượng trong cảnh. Điều này đã được thực hiện bằng cách chụp một góc nhìn từ trên xuống hơi nghiêng của môi trường. Sau đó, chúng tôi thực hiện chuyển đổi tọa độ của hình ảnh được giới hạn từ 2D sang cả tọa độ thế giới và tọa độ robot. Tiếp theo, chúng tôi kết hợp thông tin độ sâu từ đầu vào stereo với mỗi đối tượng được xác định với hộp giới hạn 2D được chuyển đổi được biểu diễn trong tọa độ robot. Kết quả là, chúng tôi có thể tính toán vị trí 3D toàn diện của các đối tượng trong cảnh. Hình 14 trình bày một ví dụ về các vị trí đối tượng khác nhau như được phát hiện bởi detector OWL-ViT.

C.3 LẤY KÍCH THƯỚC

Trong khi hàm này được gọi, kích thước của đối tượng cũng có thể được ghi lại bằng các phương pháp như được mô tả trong hàm getposition. Đầu ra là ba chiều, bao gồm chiều rộng, chiều dài và chiều cao của đối tượng. Hình 14 cũng trình bày hộp giới hạn của các vị trí đối tượng khác nhau.

--- TRANG 18 ---
(a) Lon (b) Hộp sữa (c) Nút khẩn cấp (d) Búa

Hình 14: Hình ảnh này thể hiện khả năng phát hiện của detector OWL-ViT. Detector thành công xác định các đối tượng khác nhau cùng với vị trí và hộp giới hạn tương ứng của chúng trên bàn.

C.4 MỞ & ĐÓNG GRIPPER

Điều này sẽ kết nối với API Kinova để đóng và mở gripper. Trong khi đóng gripper, khoảng cách ngón gripper không cần script rõ ràng, nơi cảm biến gripper tích hợp của Kinova sẽ tự động nắm đối tượng dưới áp suất được thiết lập trước.

D PROMPTS

D.1 CÁNH TAY ROBOT

Prompt cho Bộ phân tích: Link.
Prompt cho Bộ lập kế hoạch: Link.
Prompt cho Bộ tính toán: Link.
Prompt cho Bộ lập mã: Link.

D.2 ROBOT BỐN CHÂN

Prompt cho Bộ phân tích: Link.
Prompt cho Bộ lập kế hoạch: Link.
Prompt cho Bộ tính toán: Link.
Prompt cho Bộ lập mã: Link.

E MÔ TẢ NHIỆM VỤ

Mô tả cho Với-tới-Sữa: Link.
Mô tả cho Nắm-Lon: Link.
Mô tả cho Ấn-Nút: Link.
Mô tả cho Vượt-Sofa: Link.
Mô tả cho Trèo-Sofa: Link.
Mô tả cho Nâng-Khối: Link.
