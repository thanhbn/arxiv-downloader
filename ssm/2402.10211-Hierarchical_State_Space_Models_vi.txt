# Mô hình Không gian Trạng thái Phân cấp
để Mô hình hóa Chuỗi-tới-Chuỗi Liên tục
Raunaq Bhirangi1 2Chenyu Wang3Venkatesh Pattabiraman3Carmel Majidi1Abhinav Gupta1
Tess Hellebrekers2Lerrel Pinto3

Tóm tắt
Suy luận từ các chuỗi dữ liệu cảm biến thô là một vấn đề phổ biến trong nhiều lĩnh vực từ thiết bị y tế đến robot. Những vấn đề này thường liên quan đến việc sử dụng các chuỗi dài dữ liệu cảm biến thô (ví dụ: từ kế, điện trở áp suất) để dự đoán các chuỗi đại lượng vật lý mong muốn (ví dụ: lực, đo lường quán tính). Trong khi các phương pháp cổ điển mạnh mẽ cho các vấn đề dự đoán tuyến tính cục bộ, chúng thường thiếu sót khi sử dụng các cảm biến thực tế. Những cảm biến này thường phi tuyến, bị ảnh hưởng bởi các biến ngoại lai (ví dụ: rung động), và thể hiện sự trôi dạt phụ thuộc dữ liệu. Đối với nhiều vấn đề, nhiệm vụ dự đoán trở nên phức tạp hơn do các tập dữ liệu được gán nhãn nhỏ vì việc thu thập nhãn chân lý đòi hỏi thiết bị đắt tiền. Trong nghiên cứu này, chúng tôi trình bày Mô hình Không gian Trạng thái Phân cấp (HiSS), một kỹ thuật mới đơn giản về mặt khái niệm cho dự đoán chuỗi liên tục. HiSS xếp chồng các mô hình không gian trạng thái có cấu trúc lên nhau để tạo ra một hệ thống phân cấp thời gian. Trên sáu tập dữ liệu cảm biến thực tế, từ dự đoán trạng thái dựa trên xúc giác đến đo lường quán tính dựa trên gia tốc kế, HiSS vượt trội hơn các mô hình chuỗi hiện đại như Transformer nhân quả, LSTM, S4, và Mamba ít nhất 23% về MSE. Các thí nghiệm của chúng tôi cũng cho thấy HiSS thể hiện khả năng mở rộng hiệu quả với các tập dữ liệu nhỏ hơn và tương thích với các kỹ thuật lọc dữ liệu hiện có.

Giới thiệu
Cảm biến có mặt khắp nơi. Từ máy điều hòa đến điện thoại thông minh, các hệ thống tự động phân tích các chuỗi dữ liệu cảm biến để điều khiển các tham số khác nhau. Lớp vấn đề này - dự đoán chuỗi-tới-chuỗi liên tục từ dữ liệu cảm biến dòng - là trung tâm của việc ra quyết định và điều khiển thời gian thực. Tuy nhiên, nó đã nhận được sự chú ý hạn chế so với các vấn đề chuỗi rời rạc trong các lĩnh vực như ngôn ngữ và thị giác máy tính.

Các phương pháp hiện có để dự đoán từ dữ liệu cảm biến chủ yếu dựa vào các giải pháp dựa trên mô hình. Tuy nhiên, những phương pháp này đòi hỏi chuyên môn lĩnh vực và mô hình hóa chính xác động lực hệ thống phức tạp, điều này thường không khả thi trong các ứng dụng thực tế. Hơn nữa, dữ liệu cảm biến chứa nhiễu và sự trôi dạt đặc thù cảm biến phải được tính đến để đạt được hiệu suất dự đoán cao. Trong nghiên cứu này, chúng tôi điều tra các mô hình chuỗi-tới-chuỗi sâu có thể giải quyết những thách thức này bằng cách học trực tiếp từ các luồng cảm biến thô.

Tuy nhiên, để có tiến bộ trong dự đoán chuỗi liên tục (CSP), trước tiên chúng ta cần một điểm chuẩn đại diện để đo lường hiệu suất. Hầu hết các nghiên cứu trước đây trong CSP tập trung vào một lớp cảm biến duy nhất, khiến việc phát triển các thuật toán đa năng trở nên khó khăn. Để giải quyết điều này, chúng tôi đã tạo ra CSP-Bench, một điểm chuẩn gồm sáu tập dữ liệu thực tế được gán nhãn. Bộ sưu tập này bao gồm ba tập dữ liệu được tạo nội bộ và ba được sưu tầm từ các nghiên cứu trước - tổng cộng 40 giờ dữ liệu thực tế.

Với dữ liệu từ CSP-Bench, một lựa chọn mô hình hóa rõ ràng là sử dụng các mô hình chuỗi hiện đại như LSTM hoặc Transformer. Tuy nhiên, dữ liệu cảm biến có tần số cao, dẫn đến các chuỗi dài dữ liệu có mối tương quan cao. Đối với dữ liệu như vậy, Transformer nhanh chóng hết bộ nhớ vì chúng mở rộng với độ phức tạp bậc hai theo độ dài chuỗi, trong khi LSTM đòi hỏi các trạng thái ẩn lớn hơn đáng kể. Mô hình Không gian Trạng thái Sâu (SSM) là một lớp mô hình chuỗi mới đầy hứa hẹn. Những mô hình này đã được chứng minh là xử lý hiệu quả độ dài ngữ cảnh dài trong khi mở rộng tuyến tính theo độ dài chuỗi về thời gian và độ phức tạp bộ nhớ, với kết quả mạnh mẽ trên âm thanh và mô hình hóa ngôn ngữ. Trên CSP-Bench, chúng tôi thấy rằng SSM liên tục vượt trội hơn LSTM và Transformer với mức cải thiện trung bình 10% về chỉ số MSE. Nhưng liệu chúng ta có thể làm tốt hơn không?

Một hiểu biết quan trọng về dữ liệu cảm biến liên tục là nó có một lượng đáng kể cấu trúc thời gian và redundancy. Trong khi SSM mạnh mẽ để mô hình hóa loại dữ liệu này, chúng vẫn phẳng về mặt thời gian, tức là mọi mẫu trong chuỗi được suy luận với mọi mẫu khác. Do đó, lấy cảm hứng từ nghiên cứu về mô hình hóa phân cấp, chúng tôi đề xuất Mô hình Không gian Trạng thái Phân cấp (HiSS). HiSS xếp chồng hai SSM với độ phân giải thời gian khác nhau lên nhau. SSM cấp thấp chia dữ liệu chuỗi đầy đủ lớn hơn thành các chuỗi nhỏ hơn theo thời gian và xuất ra các đặc trưng cục bộ, trong khi SSM cấp cao hoạt động trên chuỗi nhỏ hơn của các đặc trưng cục bộ để xuất ra dự đoán chuỗi toàn cục. Điều này dẫn đến hiệu suất được cải thiện hơn nữa trên CSP-Bench, vượt trội hơn các SSM phẳng tốt nhất 23% về hiệu suất MSE trung vị trên các nhiệm vụ.

Chúng tôi tóm tắt các đóng góp của bài báo này như sau:
1. Chúng tôi phát hành CSP-Bench, điểm chuẩn công khai lớn nhất có thể truy cập cho dự đoán chuỗi-tới-chuỗi liên tục cho nhiều tập dữ liệu cảm biến.
2. Chúng tôi chỉ ra rằng SSM vượt trội hơn các mô hình SOTA trước đây như LSTM và Transformer trên CSP-Bench.
3. Chúng tôi đề xuất HiSS, một kiến trúc mô hình hóa chuỗi phân cấp cải thiện hơn nữa so với SSM trên các nhiệm vụ trong CSP-Bench.
4. Chúng tôi chỉ ra rằng HiSS tăng hiệu quả mẫu với các tập dữ liệu nhỏ hơn, và tương thích với các kỹ thuật tiền xử lý cảm biến tiêu chuẩn như lọc thông thấp.

Nghiên cứu liên quan

Dự đoán chuỗi-tới-chuỗi cho dữ liệu cảm biến
Hầu hết các hệ thống điều khiển thực tế, như giám sát tình trạng tua-bin gió, nhận dạng MRI và odometry quán tính, thường xử lý dữ liệu cảm biến nhiễu để suy ra các trạng thái môi trường. Truyền thống, những vấn đề này được giải quyết như các vấn đề ước lượng và điều khiển sử dụng các kỹ thuật lọc, như Bộ lọc Kalman, vẫn đòi hỏi các mô hình cảm biến phức tạp. Học sâu đã cho thấy triển vọng trong các lĩnh vực không có mô hình phân tích, tuy nhiên nhiều giải pháp tiếp tục mang tính chuyên biệt cho cảm biến.

Gần đây hơn, một số nghiên cứu đã hướng đến việc phát triển các kiến trúc thần kinh cải thiện so với các mô hình chuỗi thông thường trong việc mô hình hóa phụ thuộc tầm xa. Điều này báo hiệu tốt cho việc học các mô hình dự đoán cảm biến phải suy luận tự nhiên trên các chuỗi dài do tính chất tần số cao của dữ liệu cảm biến. Tuy nhiên, theo hiểu biết của chúng tôi, không có mô hình nào trong số này đã được đánh giá trên dữ liệu cảm biến liên tục ngoài âm thanh. Trong nghiên cứu này, chúng tôi tập trung vào các mô hình không gian trạng thái sâu (SSM), một lớp mô hình mới nổi trong mô hình hóa chuỗi thần kinh tầm xa. Chúng tôi đánh giá SSM sâu trên sáu nhiệm vụ dự đoán chuỗi-tới-chuỗi trên các cảm biến như ReSkin, XELA, gia tốc kế và con quay hồi chuyển.

Mô hình hóa Phân cấp
Kết hợp các hệ thống phân cấp thời gian vào kiến trúc mô hình hóa chuỗi đã được chứng minh là cải thiện hiệu suất trên một số nhiệm vụ như phân loại giấc ngủ, hệ thống đề xuất, nhận dạng hoạt động con người và học tăng cường. HiSS được lấy cảm hứng từ dòng nghiên cứu này và mở rộng nó cho SSM cho các nhiệm vụ chuỗi-tới-chuỗi liên tục.

Dữ liệu cho Dự đoán Chuỗi Liên tục
Một thách thức chính với việc phát triển các mô hình tổng quát cho dự đoán chuỗi liên tục là thiếu một điểm chuẩn đánh giá cụ thể. Các tập dữ liệu Odometry/SLAM là những ứng viên khả thi cho các tập dữ liệu CSP. Nhưng hầu hết dữ liệu trên các phương thức cảm biến như âm thanh, ECG, IMU và cảm biến xúc giác chỉ được gán nhãn thưa thớt ở cấp độ chuỗi.

Sự phổ biến gần đây của cảm biến trong điện thoại thông minh và các thiết bị thông minh khác đã dẫn đến sự quan tâm đổi mới trong việc tạo ra các tập dữ liệu được gán nhãn cho CSP. Một cài đặt phổ biến là sử dụng hệ thống bắt chuyển động để có được nhãn chuỗi dày đặc cho dữ liệu cảm biến từ các cảm biến IMU rẻ tiền. Trong nghiên cứu này, chúng tôi sưu tầm ba tập dữ liệu như vậy như một phần của CSP-Bench: một điểm chuẩn dự đoán chuỗi liên tục.

Một danh mục cảm biến khác có tầm quan trọng đáng kể cho CSP là cảm biến chạm. Cảm biến chạm nắm bắt động lực của tiếp xúc giữa robot và môi trường xung quanh. Học sâu và tạo mẫu nhanh đã thúc đẩy sự gia tăng nhanh chóng trên một loạt các phương thức xúc giác từ quang học đến điện dung và cảm biến từ tính. Hầu hết nghiên cứu về suy luận liên tục trên dữ liệu xúc giác hướng đến việc học chính sách, nơi các tập dữ liệu nhỏ và các yếu tố gây nhiễu khiến việc đánh giá hiệu quả của kiến trúc cho CSP trở nên khó khăn. Trong nghiên cứu này, chúng tôi thiết lập các vấn đề học có giám sát để điều tra các mô hình chuỗi-tới-chuỗi cho hai cảm biến xúc giác từ tính: ReSkin và XELA.

Kiến thức cơ bản

Dự đoán Chuỗi-tới-chuỗi
Xem xét một quá trình tạo dữ liệu được mô tả bởi Mô hình Markov Ẩn trong Hình 2. Các quá trình quan sát được - cảm biến S và đầu ra Y, đại diện cho hai thiết bị đo lường nắm bắt sự tiến hóa của quá trình tiềm ẩn không quan sát được X. Nói chung, S là một thiết bị nhiễu, chi phí thấp như gia tốc kế, và Y là một hệ thống gán nhãn chính xác, đắt tiền như Bắt Chuyển động. Mục tiêu là học một mô hình cho phép chúng ta ước lượng Y sử dụng các chuỗi dữ liệu từ S.

Vấn đề CSP liên quan đến việc ước lượng xác suất của quan sát đầu ra thứ t, yt, cho trước lịch sử các quan sát đầu vào, s1:t. Đối với các thí nghiệm được liệt kê trong bài báo này, chúng tôi xấp xỉ xác suất này bằng một Gaussian với độ lệch chuẩn không đổi, tức là p(yt|s1, . . . st) = N(μθ(s1:t), σ²I), trong đó σ là một hằng số, và tham số hóa μθ bằng một mô hình chuỗi sâu. Mục tiêu của chúng tôi là tìm ước lượng khả năng tối đa cho phân phối này - arg minθ Σt∥yt - μθ(s1:t)∥². Do đó, các mô hình của chúng tôi được huấn luyện để tối thiểu hóa mất mát MSE trên độ dài của chuỗi đầu ra.

Mô hình Không gian Trạng thái Sâu
Mô hình Không gian Trạng thái Sâu (SSM) xây dựng trên các mô hình không gian trạng thái đơn giản cho mô hình hóa chuỗi-tới-chuỗi. Trong dạng tổng quát, một mô hình không gian trạng thái tuyến tính có thể được viết như:

x'(t) = A(t)x(t) + B(t)u(t)
y(t) = C(t)x(t) + D(t)u(t)

ánh xạ một chuỗi đầu vào 1-D u(t) trong R đến một chuỗi đầu ra 1-D y(t) trong R thông qua một chuỗi trạng thái tiềm ẩn N-D ngầm x(t) trong Rn. Cụ thể, SSM sâu tìm cách sử dụng các chồng của mô hình đơn giản này trong một kiến trúc mô hình hóa chuỗi thần kinh, nơi các tham số A, B, C và D cho mỗi lớp có thể được học thông qua gradient descent.

SSM đã được chứng minh xử lý phụ thuộc tầm xa về mặt lý thuyết và thực nghiệm với khả năng mở rộng tuyến tính theo độ dài chuỗi, nhưng về mặt tính toán bị cấm đoán cho đến Mô hình Chuỗi Không gian Trạng thái Có cấu trúc (S4). S4 và các kiến trúc liên quan dựa trên một tham số hóa mới dựa vào tính bất biến thời gian của các tham số SSM để cho phép tính toán hiệu quả. Gần đây, Mamba đã cải thiện các kiến trúc dựa trên S4 bằng cách nới lỏng ràng buộc bất biến thời gian trên các tham số SSM, trong khi duy trì hiệu quả tính toán. Điều này cho phép Mamba đạt được hiệu suất cao trên một loạt điểm chuẩn từ âm thanh và genomics đến mô hình hóa ngôn ngữ, trong khi duy trì khả năng mở rộng tuyến tính theo độ dài chuỗi. Trong bài báo này, chúng tôi đánh giá hiệu suất của SSM như S4 và Mamba trên các nhiệm vụ CSP cảm biến, và chỉ ra rằng chúng liên tục vượt trội hơn LSTM và Transformer.

CSP-Bench: Một Điểm chuẩn Dự đoán Chuỗi Liên tục

Chúng tôi giải quyết sự khan hiếm của các tập dữ liệu với nhãn liên tục, dày đặc cho dự đoán chuỗi-tới-chuỗi bằng cách thu thập ba tập dữ liệu chạm với 1000 quỹ đạo mỗi tập và kết hợp chúng với ba tập dữ liệu IMU từ tài liệu để tạo ra CSP-Bench. Đối với mỗi tập dữ liệu, chúng tôi thiết kế các nhiệm vụ để dự đoán các chuỗi được gán nhãn từ dữ liệu cảm biến đơn để tránh các yếu tố gây nhiễu. Chúng tôi cũng bao gồm dữ liệu từ các nguồn đa dạng như camera và chuyển động robot để tạo điều kiện cho nghiên cứu tương lai trong tích hợp đa cảm biến và học đa phương thức. Các đặc điểm chi tiết của những tập dữ liệu này được tóm tắt trong Bảng 1, nhằm hỗ trợ phân tích dữ liệu cảm biến đa dạng.

Tập dữ liệu Chạm

Các tập dữ liệu chạm của chúng tôi được thu thập trên hai thiết kế cảm biến xúc giác từ tính: ReSkin và Xela. Cài đặt ReSkin bao gồm một robot Kinova JACO Gen1 6-DOF với một gripper RG2 OnRobot 1-DOF như được hiển thị trong Hình 3. Cả hai bề mặt gripper đều được trang bị cảm biến với một cảm biến ReSkin 32mm×30mm×2mm. Mỗi cảm biến có năm từ kế 3 trục đo lường các thay đổi trong từ thông từ kết quả từ sự biến dạng của da trên bề mặt gripper. Phụ lục A chứa thêm chi tiết về việc chế tạo và tích hợp ReSkin vào gripper.

Cài đặt Xela bao gồm một robot Franka Emika 7-DOF được trang bị một bàn tay Allegro 16-DOF của Wonik Robotics. Mỗi ngón tay trên bàn tay được trang bị cảm biến với ba cảm biến xúc giác uSkin 4x4 và một cảm biến uSkin cong từ XELA Robotics như được hiển thị trong Hình 3. Tích hợp cảm biến được cung cấp bởi XELA robotics, được thiết kế đặc biệt cho Bàn tay Allegro. Trong khi phương thức cảm biến cơ bản giống nhau cho cả ReSkin và Xela, chúng khác nhau về độ phân giải không gian và thời gian, bố cục vật lý, và nguồn từ tính.

RESKIN: TẬP DỮ LIỆU VIẾT MARKER

Chúng tôi thu thập 1000 quỹ đạo robot Kinova của các nét tuyến tính ngẫu nhiên trên giấy. Ban đầu, marker được đặt tùy ý giữa các đầu gripper, và việc thu thập dữ liệu bắt đầu khi marker chạm vào giấy. Robot sau đó di chuyển tuyến tính giữa 8-12 điểm ngẫu nhiên được lấy mẫu đồng đều trong không gian làm việc 10cm x 10cm, tạm dừng với độ trễ được lấy mẫu ngẫu nhiên 1-4 giây sau mỗi chuyển động. Hình ảnh của các quỹ đạo mẫu có thể được tìm thấy trong Phụ lục C.

Mục tiêu của vấn đề dự đoán chuỗi này là sử dụng tín hiệu xúc giác từ gripper để dự đoán vận tốc của end-effector trong mặt phẳng bàn. Nhãn vận tốc dễ dàng thu được từ động học robot, và phục vụ như một proxy cho vận tốc của các nét marker trên giấy. Điều làm cho vấn đề này thách thức là cảm biến thu thập thông tin tiếp xúc từ cả chuyển động tương đối giữa marker và gripper, và chuyển động của marker trên giấy. Mô hình phải học cách tách biệt hai chuyển động này để đưa ra dự đoán chính xác.

RESKIN: TẬP DỮ LIỆU TRƯỢT NỘI TẠI

Chúng tôi lại sử dụng cài đặt Kinova để thu thập 1000 quỹ đạo trượt nội tại - gripper nắm và trượt dọc theo các hộp khác nhau được kẹp vào bàn. Ở đầu mỗi episode, chúng tôi đóng gripper tại một vị trí và hướng ngẫu nhiên trên hộp và bắt đầu ghi dữ liệu. Chúng tôi lấy mẫu 8-12 vị trí và hướng ngẫu nhiên trong không gian làm việc của robot dọc theo chiều dài hộp, và sau đó ra lệnh cho robot di chuyển dọc theo hộp trong khi trượt trên nó. Chúng tôi sử dụng 10 hộp có kích thước khác nhau để thu thập tập dữ liệu này nhằm cải thiện tính đa dạng dữ liệu về mặt động lực tiếp xúc. Hình ảnh ví dụ và kích thước có sẵn trong Phụ lục C.1.2.

Mục tiêu của vấn đề dự đoán chuỗi là sử dụng chuỗi tín hiệu xúc giác từ đầu gripper để dự đoán vận tốc tịnh tiến và quay của end-effector (lại thu được từ động học robot) trong mặt phẳng chuyển động của robot. Ngoài ra, tính chất mài mòn của nhiệm vụ khiến da bị hao mòn theo thời gian. Để tính đến sự hao mòn này, chúng tôi thay đổi đầu gripper và da sau 25 quỹ đạo trên mỗi hộp, cải thiện tính đa dạng dữ liệu kết quả.

XELA: TẬP DỮ LIỆU ĐIỀU KHIỂN JOYSTICK

Đối với tập dữ liệu cuối cùng của chúng tôi, chúng tôi ghi lại 1000 quỹ đạo dữ liệu từ bàn tay Allegro tương tác với joystick như được hiển thị trong Hình 3. Cài đặt bàn tay/robot được điều khiển từ xa bằng hệ thống dựa trên VR xuất phát từ HoloDex. Các tương tác joystick được ghi lại đồng bộ với dữ liệu robot, dữ liệu cảm biến xúc giác, và nguồn cấp camera. Cụ thể, điều này bao gồm toàn bộ động học robot (Cánh tay 7 DOF ở 50 Hz + Bàn tay 16 DOF ở 300 Hz), đầu ra xúc giác XELA (552 dim ở 100 Hz), và 2 camera Realsense D435 (1080p ở 30 Hz). Mỗi quỹ đạo bao gồm 25-40 giây tương tác với joystick.

Mục tiêu của vấn đề dự đoán chuỗi là sử dụng tín hiệu xúc giác từ bàn tay robot có cảm biến Xela để dự đoán trạng thái của joystick, được ghi lại đồng bộ với tất cả các phương thức khác. Thách thức bổ sung với tập dữ liệu này, ngoài chiều cao đáng kể hơn của không gian quan sát, là các quỹ đạo nhiễu hơn do demo con người thay vì chính sách có script.

Các Tập dữ liệu Công khai Được sưu tầm

Ngoài các tập dữ liệu xúc giác chúng tôi phát hành với bài báo này, chúng tôi cũng kiểm tra các phát hiện của mình trên dữ liệu từ các tập dữ liệu khác, đặc biệt là những tập sử dụng dữ liệu cảm biến IMU (được minh họa trong Hình 3) - tập dữ liệu RoNIN chứa dữ liệu IMU điện thoại thông minh từ 100 đối tượng con người với quỹ đạo 3D chân lý dưới chuyển động tự nhiên của con người, tập dữ liệu VECtor - một tập dữ liệu SLAM được thu thập trên ba nền tảng khác nhau, và tập dữ liệu TotalCapture - một tập dữ liệu ước lượng tư thế 3D con người.

Mô hình Không gian Trạng thái Phân cấp (HiSS)

Trong nghiên cứu này, chúng tôi tập trung vào các vấn đề dự đoán chuỗi-tới-chuỗi liên tục cho cảm biến tức là các vấn đề liên quan đến việc ánh xạ một chuỗi dữ liệu cảm biến đến một chuỗi đầu ra. Trong các phần tiếp theo, chúng tôi mô tả đường ống tiền xử lý của chúng tôi và HiSS - phương pháp của chúng tôi để suy luận chuỗi-tới-chuỗi ở các tỷ lệ thời gian khác nhau.

Chuẩn bị Dữ liệu và Lấy mẫu

Mỗi cảm biến trong thế giới thực hoạt động ở một tần số khác nhau, và dữ liệu từ các cảm biến khác nhau do đó được thu thập ở các tần số danh nghĩa khác nhau. Nói chung, các chuỗi cảm biến của chúng tôi đến từ một cảm biến rẻ tiền, nhiễu hoạt động ở tần số cao hơn một thiết bị chính xác cao, đắt tiền cung cấp cho chúng tôi các chuỗi đầu ra. Để mô phỏng kịch bản này và tiêu chuẩn hóa các thí nghiệm của chúng tôi, tất cả các chuỗi cảm biến được lấy mẫu lại ở tần số 50Hz, và các chuỗi đầu ra được lấy mẫu lại ở 5Hz cho tất cả các tập dữ liệu đang xem xét, trừ khi được chỉ định khác. Lựa chọn cụ thể của những tần số này được quyết định bởi tần số lấy mẫu của các cảm biến trong dữ liệu có sẵn. Phạm vi độ dài chuỗi (theo số timestep chuỗi cảm biến) cho mỗi nhiệm vụ có thể thay đổi: 450-3000 cho Marker Writing, 750-2150 cho Intrinsic Slip, 750-4250 cho Joystick Control, 12000 cho RoNIN, 1900-9100 cho VectorEnv và 1700-5600 cho TotalCapture.

Tất cả các cảm biến được xem xét trong CSP-Bench đều dễ bị trôi dạt; do đó, phù hợp với nghiên cứu trước đây, chúng tôi ước lượng một tín hiệu nghỉ ở đầu mỗi quỹ đạo cảm biến và các độ lệch từ tín hiệu nghỉ này được truyền đến mô hình. Vì sự trôi dạt cảm biến có thể phụ thuộc dữ liệu một cách nhân quả, toàn bộ quỹ đạo cảm biến được truyền đến mô hình như đầu vào. Các chuỗi cảm biến và đầu ra được chuẩn hóa dựa trên thống kê dữ liệu cho các tập dữ liệu tương ứng của chúng, và chi tiết được liệt kê trong Phụ lục B. Ngoài ra, chúng tôi thấy rằng việc thêm các khác biệt một bước vào mọi phần tử trong chuỗi cảm biến giúp cải thiện hiệu suất, phù hợp với nhiều nghiên cứu trước đây.

Kiến trúc Mô hình

Ở đây chúng tôi mô tả Mô hình Không gian Trạng thái Phân cấp (HiSS) - một kiến trúc phân cấp đơn giản sử dụng SSM để suy luận rõ ràng trên dữ liệu chuỗi ở hai độ phân giải thời gian, như được hiển thị trong Hình 4. Chuỗi cảm biến đầu tiên được chia thành một tập hợp các chunk có kích thước bằng nhau là k. Mỗi chunk được truyền qua một SSM chia sẻ, ví dụ S4, mà chúng tôi gọi là SSM cấp thấp. Các đầu ra của SSM cấp thấp tương ứng với phần tử thứ k của mỗi chunk sau đó được nối để tạo thành một chuỗi đặc trưng chunk được làm thưa. Cuối cùng, chuỗi này được truyền qua một mô hình chuỗi cấp cao để tạo ra chuỗi đầu ra.

Tại sao HiSS nên hoạt động? Dữ liệu cảm biến chuỗi chịu các hiện tượng xảy ra ở các tần số tự nhiên khác nhau. Ví dụ, một thiết bị IMU được gắn trên quadrotor chịu nhiễu rung động tần số cao và trôi dạt tần số thấp đặc trưng của các thiết bị MEMS. Với HiSS, mục tiêu của chúng tôi là tạo ra một kiến trúc thần kinh với cấu trúc rõ ràng để hoạt động ở các tỷ lệ thời gian khác nhau. Điều này sẽ cho phép mô hình cấp thấp học các biểu diễn hiệu quả, cục bộ về thời gian, trong khi cho phép mô hình cấp cao tập trung vào dự đoán toàn cục trên một chuỗi ngắn hơn.

Độ phức tạp Tính toán HiSS xây dựng dựa trên các mô hình như S4 và Mamba có tính tuyến tính theo độ dài chuỗi, O(N). Đối với các chunk không chồng lấp có kích thước k mỗi cái, mô hình cấp thấp hoạt động trên N/k chunk với mỗi tính toán là O(k). Mô hình cấp cao lần lượt hoạt động trên một chuỗi có độ dài N/k dẫn đến chi phí tính toán O(N/k). Chi phí ròng do đó là O(k*(N/k) + N/k) = O(N + N/k) = O(N). Đối với trường hợp các chunk chồng lấp, trong trường hợp cực đoan nhất khi chúng ta có sự chồng lấp (k-1) phần tử giữa các chunk, chúng ta bây giờ có N chunk có kích thước k, mỗi cái được vận hành bởi mô hình cấp thấp. Mô hình cấp cao hoạt động trên chuỗi đặc trưng chunk kết quả có độ dài N. Do đó độ phức tạp tính toán trong trường hợp này là O(Nk + N) = O(Nk), vẫn tốt hơn đáng kể so với transformer có độ phức tạp O(N²).

Chi tiết Huấn luyện

Chúng tôi tập trung vào các nhiệm vụ dự đoán chuỗi-tới-chuỗi. Tất cả các mô hình của chúng tôi được huấn luyện end-to-end để tối thiểu hóa mất mát MSE như được giải thích trong Phần 3.1. Đối với tất cả các tập dữ liệu xúc giác và VECtor, chúng tôi sử dụng phân chia train-validation 80-20. Đối với tập dữ liệu RoNIN, chúng tôi sử dụng bốn phút đầu tiên của mỗi quỹ đạo cho phân tích của mình, và sử dụng tập validation bao gồm các quỹ đạo từ các đối tượng chưa thấy. Đối với TotalCapture, chúng tôi sử dụng phân chia train-validation được đề xuất bởi Trumble et al. (2017). Phạm vi quét siêu tham số cho mỗi mô hình và baseline của chúng tôi, cùng với phạm vi kết quả của số lượng tham số được liệt kê trong Phụ lục B. Chúng tôi duy trì các phạm vi tương tự của số lượng tham số trên các mô hình cho cùng một nhiệm vụ.

Thí nghiệm và Kết quả

Trong phần này, chúng tôi đánh giá hiệu suất của các mô hình HiSS trên các nhiệm vụ CSP và hiểu điểm mạnh và hạn chế của chúng. Trừ khi được chỉ định khác, chúng tôi sử dụng các chunk không chồng lấp có kích thước 10, và nhằm trả lời các câu hỏi sau:

• SSM so sánh như thế nào với LSTM và Transformer trên CSP-Bench?
• HiSS có thể cung cấp lợi ích so với các mô hình phẳng về thời gian không?
• Kích thước chunk ảnh hưởng như thế nào đến hiệu suất của HiSS?
• HiSS có tương thích với các kỹ thuật tiền xử lý hiện có như lọc không?
• HiSS hoạt động như thế nào trong các chế độ dữ liệu thấp?

Baseline: Chúng tôi sử dụng hai danh mục baseline: Phẳng và Phân cấp. Các mô hình phẳng bao gồm LSTM, Causal Transformer, S4 và Mamba, ngoài MEGA. Các baseline phân cấp bao gồm các biến thể của mô hình HiSS nơi SSM cấp cao và/hoặc cấp thấp được thay thế bằng causal transformer và LSTM, và MEGA-chunk, được phân loại lỏng lẻo như một transformer cấp cao với mô hình MEGA cấp thấp. Bảng 2 trình bày so sánh hiệu suất trên CSP-Bench cho mỗi baseline này và các mô hình HiSS được đề xuất.

Hiệu suất của các mô hình Phẳng trên CSP-Bench

Ngay từ đầu, chúng ta thấy rằng SSM - Mamba và S4, liên tục vượt trội hơn các mô hình Transformer và LSTM hoạt động tốt nhất lần lượt 10% và 14% MSE trung vị trên các nhiệm vụ CSP-Bench. Ngoại lệ duy nhất là tập dữ liệu TotalCapture nơi LSTM vượt trội hơn tất cả các mô hình khác. Chúng tôi phân tích điều này sau trong Phần 6.7.

Cải thiện Hiệu suất CSP với HiSS

Các mô hình HiSS hoạt động tốt hơn các mô hình phẳng hoạt động tốt nhất, SSM hay khác, với mức cải thiện thêm ~23% MSE trung vị trên các nhiệm vụ. Trong số các mô hình phân cấp, các mô hình HiSS tiếp tục hoạt động tốt như hoặc tốt hơn các mô hình khác với mức cải thiện tương đối ~9.8% MSE trung vị. Hơn nữa, chúng tôi có hai quan sát chính trong các mô hình sử dụng một kiến trúc cấp cao cụ thể: (1) những mô hình này liên tục vượt trội hơn các mô hình phẳng tương ứng, cho thấy rằng các hệ thống phân cấp thời gian hiệu quả trong việc chưng cất thông tin từ dữ liệu cảm biến liên tục; (2) các mô hình tốt nhất sử dụng S4 như mô hình cấp thấp, cho thấy rằng S4 đặc biệt khéo léo trong việc nắm bắt cấu trúc thời gian cấp thấp trong dữ liệu.

Những quan sát này đặt ra một câu hỏi tự nhiên: Điều gì đang xảy ra bên dưới? Trong bốn phần tiếp theo, chúng tôi cố gắng hiểu rõ hơn hoạt động của HiSS.

HiSS có Đơn giản chỉ làm Downsampling Tốt hơn không?

Câu hỏi đầu tiên chúng tôi tìm cách trả lời là liệu việc đơn giản downsample chuỗi cảm biến đến cùng tần số với đầu ra có làm tốt như các mô hình HiSS không. Như chúng ta thấy trong Bảng 3, trong khi một số mô hình phẳng với các chuỗi cảm biến được downsample thật sự cải thiện hiệu suất so với các mô hình phẳng trong Bảng 2, chúng vẫn xa lắm so với các mô hình HiSS. Điều này củng cố giả thuyết của chúng tôi rằng các mô hình HiSS chưng cất nhiều thông tin hơn từ chuỗi cảm biến so với downsampling ngây thơ.

Một lợi thế của việc sử dụng các mô hình phân cấp là hiệu quả bộ nhớ. Chúng có thể giảm đáng kể tải tính toán cho các mô hình như transformer mở rộng theo cấp số nhân theo độ dài của chuỗi. Việc sử dụng một SSM như S4 hoặc Mamba như mô hình cấp thấp có thể giảm đáng kể tải tính toán O(N²) → O(N²/k²) cho k ≪ N, trong đó k và n là kích thước chunk và độ dài chuỗi tương ứng. Bảng 2 cho thấy rằng mô hình như vậy liên tục cải thiện hiệu suất so với một Causal Transformer phẳng trên các nhiệm vụ.

Ảnh hưởng của Kích thước Chunk đến Hiệu suất

Sau khi thiết lập hiệu quả của HiSS so với các kiến trúc mô hình hóa chuỗi thông thường, chúng tôi tìm cách điều tra ảnh hưởng của một tham số chính - kích thước chunk - đến hiệu suất của các mô hình HiSS. Downsampling các chuỗi cảm biến ở tần số đầu ra, như được trình bày trong Phần 6.3 về cơ bản tương ứng với việc sử dụng kích thước chunk là 1. Phần còn lại của phân tích được trình bày cho đến nay sử dụng kích thước chunk là 10, tương ứng với các chunk không chồng lấp lớn nhất bao phủ toàn bộ chuỗi cảm biến cho tần số chuỗi cảm biến và đầu ra lần lượt là 50 Hz và 5 Hz. Trong phần này, chúng tôi tiến hành hai thí nghiệm bổ sung với kích thước chunk là 5 và 15 và trình bày kết quả trong Bảng 4.

Chúng ta thấy rằng trong khi hiệu suất cải thiện đáng kể khi kích thước chunk tăng, nó ổn định khi kích thước chunk đạt tỷ lệ của tần số cảm biến và đầu ra (10 trong trường hợp của chúng tôi). Hành vi này có thể được giải thích bởi thực tế là kích thước chunk nhỏ hơn tỷ lệ này dẫn đến mô hình không bao giờ thấy các phần của chuỗi cảm biến, trong khi kích thước chunk lớn hơn tỷ lệ này dẫn đến sự chồng lấp giữa các chunk.

Ảnh hưởng của Tiền xử lý Cảm biến đến Hiệu suất

Một phương pháp phổ biến để tiền xử lý dữ liệu cảm biến nhiễu là thiết kế các bộ lọc thông thấp để xử lý tín hiệu trước khi nó được truyền qua mô hình. Để phân tích tính tương thích của các mô hình HiSS với các kỹ thuật tiền xử lý hiện có như vậy, chúng tôi áp dụng riêng biệt các bộ lọc Butterworth bậc 5 với 3 tần số cắt khác nhau cho chuỗi cảm biến và báo cáo mô hình tương ứng với tần số cắt tốt nhất trong Bảng 3. Chúng tôi có hai quan sát chính: (1) ngoại trừ mô hình HiSS cho RoNIN, lọc thông thấp cải thiện hiệu suất trên toàn bộ; (2) các mô hình HiSS vẫn hoạt động tương đương hoặc tốt hơn các mô hình phẳng.

Đối với (1), chúng ta thấy rằng mô hình HiSS hoạt động tốt nhất từ Bảng 2 tiếp tục vượt trội hơn mô hình phẳng tốt nhất sử dụng dữ liệu được lọc, ngụ ý rằng bộ lọc thông thấp có thể đã lọc thông tin hữu ích có thể được sử dụng để cải thiện hiệu suất nhiệm vụ. Điều này chỉ ra một cạm bẫy quan trọng của các kỹ thuật tiền xử lý thủ công - chúng thường có thể lọc ra thông tin có thể được khai thác bởi một mô hình đủ mạnh. Do đó, khả năng của các mô hình HiSS đòi hỏi ít hoặc không có tiền xử lý chuỗi đầu vào củng cố thông tin đăng nhập của chúng để phục vụ như các mô hình đa năng cho dữ liệu CSP.

HiSS Hoạt động như thế nào trên Các Tập dữ liệu Nhỏ hơn?

Việc thiếu một điểm chuẩn toàn diện cho dự đoán chuỗi liên tục cho đến nay nói lên sự khó khăn của việc thu thập các tập dữ liệu lớn, được gán nhãn của dữ liệu cảm biến. Do đó, hiệu suất trong các chế độ dữ liệu thấp có thể quan trọng đối với khả năng ứng dụng rộng rãi hơn của các kiến trúc mô hình hóa chuỗi khác nhau. Để đánh giá hiệu suất này, chúng tôi so sánh hiệu suất của các mô hình phẳng cũng như HiSS trên các tập con của dữ liệu huấn luyện. Trong khi TotalCapture và VECtor nhỏ hơn đáng kể so với các tập dữ liệu khác (xem Bảng 1), chúng tôi bao gồm chúng trong phân tích này trong khi sử dụng một phần lớn hơn của dữ liệu huấn luyện so với các tập dữ liệu khác. Kết quả được trình bày trong Bảng 3. Chúng tôi chỉ trình bày mô hình HiSS hoạt động tốt nhất ở đây để ngắn gọn. Bảng đầy đủ có thể được tìm thấy trong Phụ lục D.

Chúng ta thấy rằng trên các phần nhỏ hơn của tập dữ liệu huấn luyện, HiSS vượt trội hơn các baseline phẳng trên mọi nhiệm vụ trong CSP-Bench. Điều này cho thấy một tính chất quan trọng của các mô hình HiSS - hiệu quả dữ liệu. Các mô hình cấp thấp hoạt động giống hệt nhau trên tất cả các chunk trong dữ liệu, cho phép chúng học các biểu diễn hiệu quả hơn từ các tập dữ liệu nhỏ so với các mô hình phẳng.

Thất bại trên TotalCapture

Trường hợp thất bại rõ ràng nhất cho hiệu suất của cả SSM phẳng cũng như các mô hình HiSS là trên tập dữ liệu TotalCapture, nơi LSTM phẳng vượt trội đáng kể hơn tất cả các mô hình khác. Chúng tôi giả thuyết rằng chiều cao của không gian đầu vào và đầu ra ngăn SSM học các biểu diễn đủ biểu cảm có thể lọc ra dữ liệu tần số cao. Điều này cũng được chứng minh bởi hiệu suất cao hơn của các mô hình LSTM cấp thấp trên các kiến trúc phân cấp cho tập dữ liệu này, tương quan với hiệu quả tương ứng cao hơn của LSTM phẳng so với SSM phẳng. Bằng chứng thêm về sự bất lực của SSM trong việc lọc ra nhiễu có thể được tìm thấy trong Phần 6.5, nơi hiệu suất của các mô hình HiSS gần như khớp với LSTM khi chuỗi đầu vào được truyền qua bộ lọc thông thấp. Điều này cho thấy rằng mô hình HiSS gặp khó khăn trong việc học hành vi lọc từ dữ liệu ở đây, không giống như các tập dữ liệu khác nơi hiệu suất vẫn khá nhất quán với và không có bộ lọc thông thấp.

Kết luận và Hạn chế

Chúng tôi trình bày CSP-Bench, điểm chuẩn công khai đầu tiên có sẵn cho Dự đoán Chuỗi Liên tục, và chỉ ra rằng SSM làm tốt hơn LSTM và Transformer trên các nhiệm vụ CSP. Sau đó, chúng tôi đề xuất HiSS, một kiến trúc mô hình hóa chuỗi phân cấp có hiệu suất hơn, hiệu quả dữ liệu và tối thiểu hóa nhu cầu tiền xử lý cho các vấn đề CSP. Tuy nhiên, dự đoán chuỗi-tới-chuỗi từ dữ liệu cảm biến tiếp tục là một vấn đề mở, tương đối ít được khám phá, và nghiên cứu của chúng tôi cho thấy không gian cải thiện đáng kể. Hơn nữa, trong khi SSM cho thấy triển vọng đáng kể cho các nhiệm vụ CSP, chúng là các kiến trúc tương đối mới có điểm mạnh và điểm yếu còn xa mới được hiểu rõ. Phần 6.7 giải thích một số thách thức của SSM, và kết quả là, HiSS, trên các vấn đề dự đoán chiều cao với các tập dữ liệu nhỏ của dữ liệu cảm biến nhiễu. Về mặt dễ dàng huấn luyện, các mô hình HiSS hiện tại giới thiệu một siêu tham số bổ sung của kích thước chunk. Trong khi chúng tôi cung cấp một phân tích sơ bộ về ảnh hưởng của kích thước chunk trong Phần 6.4, tối ưu hóa kích thước chunk là một hướng tương lai thú vị. Cuối cùng, CSP-Bench lớn, nhưng số lượng cảm biến có thể hưởng lợi từ các mô hình đã học lớn hơn. Chúng tôi cam kết hỗ trợ CSP-Bench và thêm nhiều tập dữ liệu lớn hơn trong tương lai.
