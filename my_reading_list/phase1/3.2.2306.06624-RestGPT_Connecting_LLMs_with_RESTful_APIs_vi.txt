Tài liệu tham khảo

[1] Tom Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, et al. Language models are few-shot learners. Advances in neural information processing systems, 33:1877–1901, 2020.

[2] OpenAI. Chatgpt, 2022. URL https://openai.com/blog/chatgpt.

[3] Qingxiu Dong, Lei Li, Damai Dai, Ce Zheng, Zhiyong Wu, Baobao Chang, Xu Sun, Jingjing Xu, và Zhifang Sui. A survey for in-context learning. arXiv preprint arXiv:2301.00234, 2022.

[4] Jason Wei, Xuezhi Wang, Dale Schuurmans, Maarten Bosma, Ed Chi, Quoc Le, và Denny Zhou. Chain of thought prompting elicits reasoning in large language models. arXiv preprint arXiv:2201.11903, 2022.

[5] Jason Wei, Yi Tay, Rishi Bommasani, Colin Raffel, Barret Zoph, Sebastian Borgeaud, Dani Yogatama, Maarten Bosma, Denny Zhou, Donald Metzler, et al. Emergent abilities of large language models. arXiv preprint arXiv:2206.07682, 2022.

[6] Wenlong Huang, Pieter Abbeel, Deepak Pathak, và Igor Mordatch. Language models as zero-shot planners: Extracting actionable knowledge for embodied agents. In International Conference on Machine Learning, pages 9118–9147. PMLR, 2022.

[7] Zihao Wang, Shaofei Cai, Anji Liu, Xiaojian Ma, và Yitao Liang. Describe, explain, plan and select: Interactive planning with large language models enables open-world multi-task agents. arXiv preprint arXiv:2302.01560, 2023.

[8] Grégoire Mialon, Roberto Dessì, Maria Lomeli, Christoforos Nalmpantis, Ram Pasunuru, Roberta Raileanu, Baptiste Rozière, Timo Schick, Jane Dwivedi-Yu, Asli Celikyilmaz, et al. Augmented language models: a survey. arXiv preprint arXiv:2302.07842, 2023.

[9] Yujia Qin, Shengding Hu, Yankai Lin, Weize Chen, Ning Ding, Ganqu Cui, Zheni Zeng, Yufei Huang, Chaojun Xiao, Chi Han, et al. Tool learning with foundation models. arXiv preprint arXiv:2304.08354, 2023.

[10] Aaron Parisi, Yao Zhao, và Noah Fiedel. Talm: Tool augmented language models. arXiv preprint arXiv:2205.12255, 2022.

[11] Timo Schick, Jane Dwivedi-Yu, Roberto Dessì, Roberta Raileanu, Maria Lomeli, Luke Zettlemoyer, Nicola Cancedda, và Thomas Scialom. Toolformer: Language models can teach themselves to use tools. arXiv preprint arXiv:2302.04761, 2023.

[12] Pan Lu, Baolin Peng, Hao Cheng, Michel Galley, Kai-Wei Chang, Ying Nian Wu, Song-Chun Zhu, và Jianfeng Gao. Chameleon: Plug-and-play compositional reasoning with large language models. arXiv preprint arXiv:2304.09842, 2023.

[13] Yongliang Shen, Kaitao Song, Xu Tan, Dongsheng Li, Weiming Lu, và Yueting Zhuang. Hugginggpt: Solving ai tasks with chatgpt and its friends in huggingface. arXiv preprint arXiv:2303.17580, 2023.

[14] Chenfei Wu, Shengming Yin, Weizhen Qi, Xiaodong Wang, Zecheng Tang, và Nan Duan. Visual chatgpt: Talking, drawing and editing with visual foundation models. arXiv preprint arXiv:2303.04671, 2023.

[15] Rui Yang, Lin Song, Yanwei Li, Sijie Zhao, Yixiao Ge, Xiu Li, và Ying Shan. Gpt4tools: Teaching large language model to use tools via self-instruction. arXiv preprint arXiv:2305.18752, 2023.

[16] Shunyu Yao, Jeffrey Zhao, Dian Yu, Nan Du, Izhak Shafran, Karthik Narasimhan, và Yuan Cao. React: Synergizing reasoning and acting in language models. arXiv preprint arXiv:2210.03629, 2022.

[17] Li Li, Wu Chou, Wei Zhou, và Min Luo. Design patterns and extensibility of rest api for networking applications. IEEE Transactions on Network and Service Management, 13(1):154–167, 2016.

[18] SmartBear. Swagger, 2023. URL https://swagger.io/.

[19] Bhargavi Paranjape, Scott Lundberg, Sameer Singh, Hannaneh Hajishirzi, Luke Zettlemoyer, và Marco Tulio Ribeiro. Art: Automatic multi-step reasoning and tool-use for large language models. arXiv preprint arXiv:2303.09014, 2023.

[20] Dídac Surís, Sachit Menon, và Carl Vondrick. Vipergpt: Visual inference via python execution for reasoning. arXiv preprint arXiv:2303.08128, 2023.

[21] Shishir G Patil, Tianjun Zhang, Xin Wang, và Joseph E Gonzalez. Gorilla: Large language model connected with massive apis. arXiv preprint arXiv:2305.15334, 2023.

[22] Qiaoyu Tang, Ziliang Deng, Hongyu Lin, Xianpei Han, Qiao Liang, và Le Sun. Toolalpaca: Generalized tool learning for language models with 3000 simulated cases. arXiv preprint arXiv:2306.05301, 2023.

[23] Minghao Li, Feifan Song, Bowen Yu, Haiyang Yu, Zhoujun Li, Fei Huang, và Yongbin Li. Api-bank: A benchmark for tool-augmented llms. arXiv preprint arXiv:2304.08244, 2023.

[24] Peiyi Wang, Lei Li, Liang Chen, Dawei Zhu, Binghuai Lin, Yunbo Cao, Qi Liu, Tianyu Liu, và Zhifang Sui. Large language models are not fair evaluators. arXiv preprint arXiv:2305.17926, 2023.

[25] Mark Masse. REST API design rulebook: designing consistent RESTful web service interfaces. "O'Reilly Media, Inc.", 2011.

[26] Noah Shinn, Federico Cassano, Beck Labash, Ashwin Gopinath, Karthik Narasimhan, và Shunyu Yao. Reflexion: Language agents with verbal reinforcement learning. arXiv preprint arXiv:2303.11366, 2023.

--- TRANG 12 ---

Hình 6: Một RESTful API từ TMDB.

A RESTful API và OAS

RESTful API (Representational State Transfer API) là một kiểu kiến trúc được sử dụng để thiết kế các ứng dụng mạng. Nó dựa trên các nguyên tắc của Representational State Transfer (REST) và được sử dụng rộng rãi để xây dựng các dịch vụ web [25,17]. Trong RESTful API, các tài nguyên (như đối tượng dữ liệu hoặc dịch vụ) được đại diện dưới dạng URL (Uniform Resource Locators), được gọi là endpoints. Các endpoints này được truy cập thông qua giao thức HTTP, và các phương thức HTTP khác nhau (GET, POST, v.v.) được sử dụng để thực hiện các hoạt động trên tài nguyên. Có hàng triệu RESTful API có sẵn trên Internet, như Spotify, Twitter, Gmail, v.v.

Đặc tả OpenAPI (OAS), trước đây được gọi là Swagger, là một đặc tả để định nghĩa và tài liệu hóa RESTful API [18]. Nó cung cấp một cách tiêu chuẩn hóa để mô tả cấu trúc, chức năng và hành vi của một API, giúp các nhà phát triển dễ dàng hiểu và tương tác với API. Đặc tả OpenAPI được viết bằng định dạng JSON hoặc YAML và bao gồm một tập hợp các quy tắc và quy ước định nghĩa các endpoints, định dạng yêu cầu/phản hồi, tham số, phương thức xác thực và các chi tiết khác của API. Cụ thể hơn, một OAS bao gồm các khía cạnh sau cho mỗi endpoint API:

• Đường dẫn API: một đường dẫn tương đối đến một endpoint API riêng lẻ, ví dụ: /{person_id}/details.

• Mô tả API: API làm gì, hoạt động như thế nào, và bất kỳ lỗi hoặc ngoại lệ tiềm ẩn nào có thể được nêu ra.

• Phương thức Yêu cầu: hành động mong muốn được thực hiện cho API, ví dụ: GET, POST, DELETE.

• Danh sách Tham số: tên tham số, mô tả tham số, kiểu dữ liệu, giá trị mặc định, giá trị tùy chọn của mỗi tham số cho API.

• Lược đồ Phản hồi: lược đồ của phản hồi API. Thông tin này có thể hỗ trợ bộ phân tích phản hồi trích xuất thông tin hữu ích từ phản hồi JSON.

• Ví dụ Phản hồi (Tùy chọn): một ví dụ về cuộc gọi API có thể giúp chứng minh API sẽ phản hồi như thế nào.

• Lỗi và Ngoại lệ: các mã lỗi tiềm ẩn và mô tả tương ứng của chúng.

Chúng tôi cung cấp một ví dụ về mô tả OAS của một endpoint API trong Hình 6 và Hình 7.

--- TRANG 13 ---

description: Tìm kiếm phim
operationId: GET_search-movie
parameters:
- description: Truyền giá trị ISO 639-1 để hiển thị dữ liệu đã dịch cho các trường hỗ trợ.
  in: query
  name: language
  schema:
    default: en-US
    type: string
- description: Truyền truy vấn văn bản để tìm kiếm. Giá trị này nên được mã hóa URI.
  in: query
  name: query
  required: true
  schema:
    type: string
- description: Chỉ định trang nào để truy vấn.
  in: query
  name: page
  schema:
    default: 1
    type: integer
- description: Chọn có bao gồm nội dung người lớn (khiêu dâm) trong kết quả hay không.
  in: query
  name: include_adult
  schema:
    default: false
    type: boolean
- description: Chỉ định mã ISO 3166-1 để lọc ngày phát hành. Phải là chữ hoa.
  in: query
  name: region
  schema:
    type: string
- in: query
  name: year
  schema:
    type: integer
- in: query
  name: primary_release_year
  schema:
    type: integer

responses:
  '200':
    content:
      application/json:
        schema:
          properties:
            page:
              type: integer
            results:
              items:
                properties:
                  adult:
                    type: boolean
                  backdrop_path:
                    type: string
                  genre_ids:
                    items:
                      type: integer
                    type: array
                  id:
                    type: integer
                  original_language:
                    type: string
                  original_title:
                    type: string
                  overview:
                    type: string
                  popularity:
                    type: number
                  poster_path:
                    type: string
                  release_date:
                    type: string
                  title:
                    type: string
                  video:
                    type: boolean
                  vote_average:
                    type: number
                  vote_count:
                    type: integer
                title: Movie List Result Object
                type: object
              type: array
            total_pages:
              type: integer
            total_results:
              type: integer
          type: object

Đặc tả OpenAPI

Hình 7: Đặc tả OpenAPI (OAS) của endpoint API trong Hình 6.

B Baseline

Để chứng minh hiệu quả của RestGPT, chúng tôi so sánh nó với bốn baseline gần đây:

Phương pháp nội tâm ngoại tuyến [9] được sử dụng rộng rãi trong công việc về LLM được tăng cường công cụ, như HuggingGPT [13] và Chameleon [12]. Phương pháp này trực tiếp tạo ra các kế hoạch nhiều bước để sử dụng công cụ và sau đó thực thi tuần tự kế hoạch API. Do thiếu phản hồi API, phương pháp ngoại tuyến không thể điều chỉnh kế hoạch để thích ứng với các tình huống không lường trước và lỗi trong các tình huống phức tạp.

DEPS [7], hoặc "Describe, Explain, Plan and Select", là một phương pháp lập kế hoạch tương tác dựa trên LLM để cải thiện khả năng lập kế hoạch dài hạn trên các vấn đề thế giới mở. DEPS sẽ cập nhật kế hoạch một cách lặp đi lặp lại dựa trên phản hồi môi trường cho đến khi nhiệm vụ được hoàn thành.

ReAct [16] tạo ra chuỗi suy nghĩ và hành động theo cách xen kẽ. LLM sẽ lý luận về tình huống hiện tại để đưa ra kế hoạch tiếp theo tốt hơn.

Reflexion [26] được lấy cảm hứng từ quá trình "thử và sai" của việc học của con người. Nó phản ánh bằng lời về các tín hiệu phản hồi nhiệm vụ, sau đó duy trì văn bản phản ánh trong bộ nhớ epizod để tạo ra lập kế hoạch tốt hơn trong các lần thử tiếp theo.

Vì một số phương pháp không được thiết kế ban đầu cho việc sử dụng công cụ/API, chúng tôi tái tạo chúng và thêm trình thực thi API mà chúng tôi đề xuất để làm cho chúng có thể gọi RESTful API.

--- TRANG 14 ---

{
    "id": 96657,
    "cast": [
      {
        "id": 953536,
        "original_title": "이창동 : 아이러니의 예술",
        "title": "Lee Chang-dong: The Art of Irony",
        "character": "Self",
  ...
      },
      ...
    ],
    "crew": [
      {
        "id": 2015,
        "original_language": "ko",
        "original_title": "밀양",
        "overview": "Shin-ae moves to ...",
        "release_date": "2007-05-17",
        "title": "Secret Sunshine",
        "department": "Directing",
        "job": "Director"
      },
      {
        "id": 26955,
        "original_language": "ko",
        "original_title": "오아시스",
        "overview": "A young man released...",
        "release_date": "2002-08-09",
        "title": "Oasis",
        "department": "Directing",
        "job": "Director"
      },
      {
        "id": 124316,
        "original_language": "ko",
        "original_title": "그 섬에 가고싶다",
        "overview": "Moon Chae-Ku and his friend...",
        "release_date": "1993-12-25",
        "title": "To the Starry Island",
        "department": "Directing",
        "job": "Assistant Director"
      },
      ...
    ]
}

Q: JSON này là danh sách tín dụng phim của người có id 96657. Tên của những bộ phim do người này đạo diễn là gì?
A: Burning, To the Starry Island, Poetry, Secret Sunshine, Oasis, Peppermint Candy, A Single Rider

# công việc của To the Starry Island và A Single Rider không phải là Director
movies_directed = [movie['title'] for movie in data['crew'] 
     if movie['job'] == 'Director']
print(f"Những bộ phim do người này đạo diễn là {', '.join(str(movie_title) for movie_title in movies_directed)}")

Lược đồ phản hồi là:
Kế hoạch: tìm kiếm những bộ phim do Lee Chang-dong đạo diễn (person_id: 96657).
URL: https://api.themoviedb.org/3/person/96657/movie_credits?language=en-US
JSON này là danh sách tín dụng phim của người có id 96657. Tên của những bộ phim do người này đạo diễn là gì?
Mã:

"id": integer
"cast": 
    "id": integer
    "original_title": string
    "title": string
    "character": string
    ....
"crew": 
    "id": integer,
    "original_language": string,
    "original_title": string,
    "overview": string,
    "release_date": date,
    "title": string,
    "department": string,
    "job": string

A: Những bộ phim do người này đạo diễn là Green Fish, Peppermint Candy, Oasis, Secret Sunshine, Poetry, Burning

(a) Kế hoạch
(c) Bộ phân tích LLM (b) Phản hồi API
(d) Bộ phân tích RestGPT

694 dòng!

Hình 8: Nghiên cứu trường hợp về bộ phân tích phản hồi. Mục đích của việc phân tích phản hồi là trích xuất thông tin cần thiết từ phản hồi API (b) theo kế hoạch (a). Chúng tôi so sánh bộ phân tích được đề xuất của chúng tôi (d) với việc nhắc nhở trực tiếp LLM làm bộ phân tích (c).

C Nghiên cứu Trường hợp về Trình thực thi

Hình 8 minh họa cách RestGPT phân tích phản hồi JSON của RESTful API. Chúng tôi so sánh bộ phân tích RestGPT với việc nhắc nhở trực tiếp LLM làm bộ phân tích. Như thể hiện, phản hồi từ RESTful API thường ở định dạng JSON dài và phức tạp (694 dòng trong Hình 8 (b)). Bộ phân tích RestGPT tạo ra mã trích xuất thông tin dựa trên lược đồ phản hồi trong OAS để tránh phân tích trực tiếp các tệp JSON dài, cải thiện đáng kể hiệu quả và độ chính xác của việc phân tích phản hồi.

D Thêm Trường hợp về RestBench

Trong phần này, chúng tôi thể hiện thêm các trường hợp của RestGPT hoàn thành các hướng dẫn phức tạp trong hai tình huống của RestBench. Bảng 5 và 6 thể hiện hai trường hợp của tình huống TMDB. Bảng 7 và 8 thể hiện hai trường hợp của tình huống Spotify.

E Trường hợp Thất bại

Chúng tôi cũng trình bày hai trường hợp thất bại của RestGPT. Trong trường hợp đầu tiên (Bảng 9), bộ chọn API ảo tưởng để tạo ra tham số trong đường dẫn tv_id cho API. Trường hợp thất bại thứ hai (Bảng 10) liên quan đến nhiều vấn đề. Đầu tiên, trình thực thi đã cung cấp chính xác kết quả truy vấn mong muốn, trong khi người lập kế hoạch tiếp tục tạo ra kế hoạch dư thừa. Ngoài ra, bộ phân tích phản hồi tạo ra mã phân tích không chính xác và lấy tên của album thay vì track. Kết quả là, RestGPT trả về câu trả lời không chính xác. Những trường hợp thất bại này làm nổi bật các hạn chế của RestGPT và nhu cầu cải thiện thêm.

F Chi tiết Triển khai

Trong phần này, chúng tôi thể hiện chi tiết của thiết kế lời nhắc trong RestGPT. Một số lời nhắc được lấy cảm hứng từ tác nhân OpenAPI được triển khai bởi LangChain. Các lời nhắc của người lập kế hoạch, bộ chọn API, người gọi, bộ phân tích phản hồi được thể hiện trong Bảng 11, 12, 13, 14, tương ứng.

[Tiếp tục với các bảng chi tiết và nội dung còn lại...]

--- TRANG 16 ---

▷Hướng dẫn của TMDB
Cho tôi biết số lượng phim do Sofia Coppola đạo diễn.

▷RestGPT
Người lập kế hoạch: tìm kiếm đạo diễn "Sofia Coppola"
Bộ chọn API: GET /search/person để tìm kiếm đạo diễn "Sofia Coppola"
Người gọi:
Tôi cần thực hiện yêu cầu GET đến endpoint /search/person với tham số truy vấn được đặt là "Sofia Coppola".
Hoạt động: GET
Đầu vào: {
xxxx"url": "https://api.themoviedb.org/3/search/person",
xxxx"params": {
xxxxxxxx"query": "Sofia Coppola"
xxxx},
xxxx"description": "Phản hồi API là danh sách những người khớp với truy vấn.",
xxxx"output_instructions": "Id của Sofia Coppola là gì?"
}
Bộ phân tích: Id của người này là 1769
Người gọi: Gọi thành công GET /search/person để tìm kiếm đạo diễn "Sofia Coppola".
Id của Sofia Coppola là 1769.
Người lập kế hoạch: Lấy số lượng phim do Sofia Coppola (1769) đạo diễn
Bộ chọn API: GET /person/1769/movie_credits để lấy số lượng phim do Sofia Coppola (id 1769) đạo diễn
Người gọi:
Tôi cần gọi GET /person/1769/movie_credits để lấy số lượng phim do Sofia Coppola (id 1769) đạo diễn.
Hoạt động: GET
Đầu vào: {
xxxx"url": "https://api.themoviedb.org/3/person/1769/movie_credits",
xxxx"description": "Phản hồi API là danh sách tín dụng phim của Sofia Coppola (id 1769)",
xxxx"output_instructions": "Tên và id của những bộ phim do người này đạo diễn là gì?"
}
Bộ phân tích: Những bộ phim do Sofia Coppola đạo diễn là Lost in Translation (153), The Virgin Suicides (1443), Marie Antoinette (1887), Somewhere (39210), Lick the Star (92657), The Bling Ring (96936), A Very Murray Christmas (364067), Bed, Bath and Beyond (384947), The Beguiled (399019), On the Rocks (575417), The Custom of the Country (758422), New York City Ballet (826970), Priscilla (1020006), Un matin partout dans le monde (835318)
Người gọi: Gọi thành công GET /person/1769/movie_credits để lấy danh sách tín dụng phim của Sofia Coppola (id 1769). Những bộ phim do Sofia Coppola đạo diễn là Lost in Translation (153), The Virgin Suicides (1443), Marie Antoinette (1887), Somewhere (39210), Lick the Star (92657), The Bling Ring (96936), A Very Murray Christmas (364067), Bed, Bath and Beyond (384947), The Beguiled (399019), On the Rocks (575417), The Custom of the Country (758422), New York City Ballet (826970), Priscilla (1020006), Un matin partout dans le monde (835318).
Người lập kế hoạch: Tôi đã hoàn thành việc thực thi kế hoạch và có thông tin mà người dùng yêu cầu hoặc dữ liệu mà người dùng yêu cầu tạo. Câu trả lời cuối cùng: Sofia Coppola đã đạo diễn 14 bộ phim.

Bảng 5: Trường hợp 1 cho TMDB.

[Tiếp tục với các bảng và nội dung còn lại...]
