CoMoSVC: Chuyển đổi giọng hát dựa trên mô hình nhất quán

Tóm tắt
Các phương pháp Chuyển đổi Giọng Hát (SVC) dựa trên khuếch tán đã đạt được hiệu suất đáng chú ý, tạo ra âm thanh tự nhiên với độ tương tự cao với âm sắc mục tiêu. Tuy nhiên, quá trình lấy mẫu lặp lại dẫn đến tốc độ suy luận chậm, và do đó việc tăng tốc trở nên quan trọng. Trong bài báo này, chúng tôi đề xuất CoMoSVC, một phương pháp SVC dựa trên mô hình nhất quán, nhằm đạt được cả việc tạo sinh chất lượng cao và lấy mẫu tốc độ cao. Một mô hình giáo viên dựa trên khuếch tán được thiết kế đặc biệt cho SVC, và một mô hình học sinh được chưng cất dưới tính chất tự nhất quán để đạt được lấy mẫu một bước. Các thí nghiệm trên một GPU NVIDIA GTX4090 cho thấy rằng mặc dù CoMoSVC có tốc độ suy luận nhanh hơn đáng kể so với hệ thống SVC dựa trên khuếch tán tiên tiến (SOTA), nó vẫn đạt được hiệu suất chuyển đổi tương đương hoặc vượt trội dựa trên cả chỉ số chủ quan và khách quan. Các mẫu âm thanh và mã nguồn có sẵn tại https://comosvc.github.io/.

Từ khóa: Chuyển đổi Giọng Hát, Mô hình Khuếch tán, Mô hình Nhất quán

1 Giới thiệu
Chuyển đổi Giọng Hát (SVC) nhằm chuyển đổi giọng của một ca sĩ thành giọng của ca sĩ khác, trong khi bảo toàn nội dung và giai điệu. Nó có ứng dụng rộng rãi trong giải trí âm nhạc, làm đẹp giọng hát và sáng tạo nghệ thuật Zhang et al. [2023].

Các phương pháp thống kê Kobayashi et al. [2014, 2015b,a] được áp dụng cho các nhiệm vụ SVC với dữ liệu huấn luyện song song từ cả ca sĩ nguồn và ca sĩ mục tiêu, thường không khả thi, và do đó các phương pháp SVC không song song đã trở thành chủ đạo. Các phương pháp hai giai đoạn thường được sử dụng cho SVC, giai đoạn đầu tiên tách rời và mã hóa các đặc trưng độc lập với ca sĩ và phụ thuộc vào ca sĩ từ âm thanh. Sau đó giai đoạn giải mã thứ hai tạo ra âm thanh đã chuyển đổi bằng cách thay thế đặc trưng phụ thuộc vào ca sĩ bằng đặc trưng mục tiêu. Do tác động đáng kể của giai đoạn thứ hai đến chất lượng của âm thanh đã chuyển đổi, việc thiết kế và tối ưu hóa giai đoạn này đã trở nên quan trọng. Do đó, nhiều mô hình tạo sinh đã được sử dụng cho việc giải mã SVC, bao gồm các mô hình tự hồi quy (AR), mạng đối thủ tạo sinh (GAN), Normalizing Flow, và các mô hình khuếch tán. Các mô hình AR đầu tiên được sử dụng để phát triển USVC Nachmani và Wolf [2019], và PitchNet Deng et al. [2020] cải thiện thêm USVC bằng cách thêm một mạng đối thủ cao độ để học biểu diễn âm vị và cao độ kết hợp. Tuy nhiên, các mô hình AR chậm do bản chất đệ quy, sau đó UCD-SVC Polyak et al. [2020] và FastSVC Liu et al. [2021a] dựa trên GAN không AR được đề xuất. Do việc huấn luyện GAN không ổn định, một hệ thống SVC end-to-end dựa trên flow, được đặt tên là SoVITS-SVC SVC-Develop-Team [2023] đã nhận được sự chú ý rộng rãi vì kết quả chuyển đổi xuất sắc với tốc độ nhanh. Gần đây, đã được chứng minh rằng hiệu suất chuyển đổi có thể được cải thiện đáng kể bởi các phương pháp SVC dựa trên khuếch tán như DiffSVC Liu et al. [2021b] và phiên bản khuếch tán của SoVITS-SVC.

Tuy nhiên, quá trình lấy mẫu lặp lại dẫn đến suy luận chậm của các phương pháp SVC dựa trên khuếch tán. Một mô hình tạo sinh mới được gọi là mô hình nhất quán Song et al. [2023] đã được đề xuất để thực hiện tạo sinh một bước. Tiếp theo cho tổng hợp giọng nói, CoMoSpeech Ye et al. [2023] khai thác mô hình nhất quán để đạt được cả tổng hợp chất lượng cao và tốc độ suy luận nhanh. Lấy cảm hứng từ điều này, một phương pháp SVC dựa trên mô hình nhất quán, được đặt tên là CoMoSVC, được phát triển thêm trong bài báo này để đạt được SVC chất lượng cao, độ tương tự cao và tốc độ cao. Dựa trên cấu trúc của EDM Karras et al. [2022], một mô hình giáo viên dựa trên khuếch tán với khả năng tạo sinh xuất sắc được thiết kế đầu tiên, và một mô hình học sinh được chưng cất từ đó để đạt được lấy mẫu một bước. Các thí nghiệm cho thấy rằng trong khi tốc độ lấy mẫu của CoMoSVC nhanh hơn khoảng 500 và 50 lần so với SoVITS-SVC và DiffSVC dựa trên khuếch tán tương ứng, hiệu suất tương đương vẫn được duy trì và thậm chí một số cải thiện có thể được đạt được trong cả chất lượng và độ tương tự.

2 Kiến thức nền tảng
Mô hình khuếch tán tạo ra các mẫu bằng cách đầu tiên thêm nhiễu vào dữ liệu trong quá trình tiến và sau đó tái tạo cấu trúc dữ liệu trong quá trình ngược. Chúng ta giả sử rằng phân phối dữ liệu gốc là pdata(x), và quá trình tiến có thể được biểu diễn bởi một phương trình vi phân ngẫu nhiên (SDE) Song et al. [2021], Karras et al. [2022]:

dxt=f(xt, t)dt+g(t)dwt, (1)

trong đó wt là quá trình wiener chuẩn, f(xt, t) và g(t) là các hệ số drift và diffusion tương ứng. Với việc đặt f(xt, t) = 0 và g(t) = √2t, giống như lựa chọn trong Karras et al. [2022], SDE có thể được định nghĩa bởi:

dxt=√2tdwt. (2)

Quá trình ngược cũng có thể được biểu diễn bởi một SDE thời gian ngược Song et al. [2021]:

dxt=−2t∇logpt(xt)dt+√2td¯wt, (3)

trong đó pt(xt) là phân phối của xt, ∇logpt(xt) là hàm điểm số, và ¯wt là quá trình wiener chuẩn thời gian ngược. Song et al. [2021] đã phát hiện rằng tồn tại một phương trình vi phân thường (ODE) dòng xác suất (PF), mà phân phối quỹ đạo giải pháp tại thời điểm t giống như pt(xt). PF ODE với tính chất như vậy có thể được biểu diễn bởi

dxt/dt=−t∇logpt(xt) = (xt−Dϕ(xt, t))/t, (4)

trong đó Dϕ là mạng neural với ϕ là các tham số để xấp xỉ hàm khử nhiễu. Sau đó để lấy mẫu, PF ODE được giải bằng cách khởi tạo từ xT, như

x0=xT+∫0T (xt−Dϕ(xt, t))/t dt. (5)

Tuy nhiên, mô hình khuếch tán thường cần một số lượng lớn lặp lại để giải PF ODE, làm cho việc lấy mẫu chậm. Một mô hình nhất quán Song et al. [2023] được đề xuất cho lấy mẫu một bước dựa trên tính chất tự nhất quán, làm cho bất kỳ điểm nào từ cùng một quỹ đạo PF ODE được ánh xạ đến cùng một điểm ban đầu. Tính chất tự nhất quán có hai ràng buộc: thứ nhất, bất kỳ cặp điểm xtm và xtn sẽ được ánh xạ đến cùng một điểm, có thể được biểu diễn bởi:

Dϕ(xtm, tm) = Dϕ(xtn, tn). (6)

Thứ hai, điểm ban đầu cũng nên được ánh xạ đến chính nó và ràng buộc này được gọi là điều kiện biên. Để tránh bất ổn định số, nó có thể được cho bởi

Dϕ(xε, tε) = xε, (7)

trong đó ε là một số dương nhỏ cố định và được đặt là 0.002. Tất cả các ca sĩ có số định danh của họ, sẽ được mã hóa như một embedding ca sĩ.

3 Phương pháp đề xuất
CoMoSVC là một mô hình hai giai đoạn, trong đó giai đoạn đầu tiên mã hóa các đặc trưng được trích xuất và danh tính ca sĩ thành các embedding. Các embedding này được nối và phục vụ như đầu vào có điều kiện cho giai đoạn thứ hai để tạo ra mel-spectrogram, có thể được hiển thị thêm thành âm thanh bằng cách sử dụng một vocoder được huấn luyện trước. Quá trình huấn luyện được mô tả trong Hình 1 lấy dạng sóng và danh tính ca sĩ của nó làm đầu vào để tái tạo mel-spectrogram, trong khi quá trình suy luận được minh họa trong Hình 2 thay thế danh tính ca sĩ bằng danh tính mục tiêu để tạo ra mel-spectrogram đã chuyển đổi.

3.1 Mã hóa
Phần này mã hóa cả các đặc trưng độc lập với ca sĩ và phụ thuộc vào ca sĩ, có thể được thể hiện trong phần trên của cả Hình 1 và Hình 2. Chúng tôi trích xuất các đặc trưng nội dung, cao độ và âm lượng để nắm bắt thông tin độc lập với ca sĩ trong âm thanh, trong khi ID ca sĩ được sử dụng như thông tin phụ thuộc vào ca sĩ. Các đặc trưng nội dung được trích xuất bằng cách sử dụng mô hình âm thanh được huấn luyện trước ContentVec Qian et al. [2022] và tính chiều lớn của các đặc trưng này cho phép tăng cường độ rõ ràng của lời bài hát trong âm thanh đã chuyển đổi. Để biểu diễn thông tin cao độ, chúng tôi sử dụng bộ ước tính F0 được sử dụng rộng rãi và cổ điển DIO Morise et al. [2009]. Độ lớn bình phương của tín hiệu âm thanh được tính toán như đặc trưng âm lượng. Sau khi trích xuất đặc trưng, chúng tôi áp dụng một lớp tuyến tính cho tất cả các embedding để thống nhất kích thước và nối chúng để tạo thành đầu vào có điều kiện cho giai đoạn giải mã.

3.2 Giải mã
Giai đoạn này là thành phần chính của CoMoSVC, trong đó các mel-spectrogram có thể được tạo ra từ đầu vào có điều kiện. Một mô hình giáo viên được huấn luyện đầu tiên và sau đó một mô hình học sinh được chưng cất từ nó, sẽ được giới thiệu trong phần 3.2.1 và phần 3.2.2 tương ứng. Quá trình lấy mẫu của cả mô hình giáo viên và mô hình học sinh sẽ được giải thích trong phần 3.2.3.

3.2.1 Mô hình giáo viên
Chúng tôi sử dụng kiến trúc của EDM Karras et al. [2022] như mô hình giáo viên để huấn luyện hàm khử nhiễu Dϕ do khả năng tạo sinh cao của nó. Hơn nữa, cấu trúc của Dϕ được sử dụng ở đây là Wavenet không nhân quả Rethage et al. [2018]. Chúng tôi sử dụng x0∼pdata(x) và cond để biểu thị mel-spectrogram ground truth và đầu vào có điều kiện. Theo (4), ODE thực nghiệm là

dxt/dt = (xt−Dϕ(xt, t, cond))/t, (8)

trong đó xt = x0 + t * N(0,I), biểu thị kết quả sau khi thêm nhiễu. Tương tự như Karras et al. [2022], chúng tôi sử dụng một mạng khác Fϕ thay vì trực tiếp xấp xỉ hàm khử nhiễu bằng Dϕ. Mạng được tiền điều kiện với một kết nối bỏ qua để làm cho việc ước tính linh hoạt hơn, nó có thể được cho bởi

Dϕ(xt, t, cond) = cskip(t)xt + cout(t)Fϕ(cin(t)xt, t, cnoise(t)). (9)

cskip(t) điều chỉnh kết nối bỏ qua, cin(t) và cout(t) chia tỷ lệ độ lớn của xt và Fϕ tương ứng, và cnoise(t) ánh xạ mức nhiễu t thành một đầu vào điều kiện cho Fϕ. Để thỏa mãn điều kiện biên được đề cập trong (7) và đảm bảo cskip(t) và cout(t) có thể vi phân, chúng tôi chọn

cskip(t) = σ²data/((t−ε)² + σ²data), cout(t) = σdata(t−ε)/√(σ²data + t²), (10)

trong đó σdata là độ lệch chuẩn của pdata(x). Hàm mất mát Lϕ được sử dụng để huấn luyện Dϕ có thể được thiết kế bởi

Lϕ = E[λ(t)‖Dϕ(xt, t, cond) − x0‖²], (11)

trong đó λ(t) = (t² + σ²data)/(t·σdata)², biểu thị trọng số tương ứng với mức nhiễu khác nhau t. Toàn bộ thủ tục được mô tả trong phần dưới bên trái của Hình 1.

3.2.2 Chưng cất nhất quán
Một mô hình học sinh có thể được chưng cất thêm từ hàm khử nhiễu được huấn luyện trước Dϕ để cuối cùng đạt được lấy mẫu một bước, quá trình được minh họa trong Thuật toán 1 và phần dưới bên phải của Hình 1. Đầu tiên, chúng tôi lấy mẫu ngẫu nhiên n từ phân phối đồng đều U(1, N−1) và thu được xtn+1 bằng cách thêm tn+1 * N(0,I) vào x0, sau đó chúng tôi sử dụng Dϕ để có được ước tính một bước x̂ϕtn từ xtn+1. Theo (4), vì trình giải Euler bậc nhất được sử dụng ở đây, nó có thể được cho bởi

x̂ϕtn = (tn/tn+1)xtn+1 + ((tn+1−tn)/tn+1)Dϕ(xtn+1, tn+1, cond). (12)

Cấu trúc của mô hình học sinh được thừa hưởng từ hàm khử nhiễu Dϕ của mô hình giáo viên, dẫn đến Dθ và Dθ−. Các tham số θ và θ− được khởi tạo với ϕ, θ− là một trung bình chạy của các giá trị trước đó của θ. Sau đó, chúng tôi sử dụng Dθ−(x̂ϕtn, tn, cond) và Dθ(xtn+1, tn+1, cond) để thu được các đầu ra khác nhau của cặp điểm liền kề x̂ϕtn và xtn. Việc chưng cất nhất quán được huấn luyện bằng cách giảm thiểu khoảng cách L2 giữa hai đầu ra:

d(Dθ(xtn+1, tn+1, cond), Dθ−(x̂ϕtn, tn, cond)) = ‖Dθ(xtn+1, tn+1, cond) − Dθ−(x̂ϕtn, tn, cond)‖². (13)

Tham số θ được cập nhật bởi:

θ ← θ − η∇θL(θ,θ−;ϕ). (14)

Để ổn định việc huấn luyện, việc cập nhật trung bình động mũ (EMA) và stop grad được áp dụng cho θ−, như:

θ− ← stopgrad(μθ− + (1−μ)θ), (15)

trong đó μ là hệ số momentum, được đặt thực nghiệm là 0.95.

3.2.3 Quá trình lấy mẫu
Các quá trình lấy mẫu của cả hai mô hình được mô tả trong phần dưới của Hình 2. Mô hình giáo viên lấy một số lần lặp để lấy mẫu, trong khi mô hình học sinh có thể đạt được lấy mẫu một bước như được tóm tắt trong Thuật toán 2. Chúng tôi đầu tiên lấy mẫu nhiễu có cùng hình dạng với mel-spectrogram bằng xtN = tN * N(0,I), và đầu ra của Dθ(xtN, tN, cond) là kết quả lấy mẫu. CoMoSVC được đề xuất cũng hỗ trợ lấy mẫu đa bước bằng cách nối các đầu ra tại nhiều bước thời gian. Tuy nhiên, sẽ có một sự đánh đổi giữa số lần lặp và chất lượng lấy mẫu.

4 Thí nghiệm
4.1 Thiết lập thí nghiệm
Chúng tôi tiến hành thí nghiệm trên hai bộ dữ liệu mã nguồn mở, đó là M4Singer Zhang et al. [2022] và OpenSinger Huang et al. [2021], tương ứng. Bộ dữ liệu trước có 29.77 giờ giọng hát và 20 ca sĩ, và bộ dữ liệu sau chứa 50 giờ và 66 ca sĩ. Tất cả các âm thanh được lấy mẫu lại về 24kHz và chuẩn hóa. Sau đó chúng tôi tính toán đặc trưng âm lượng, trích xuất đường cong F0 cùng với cờ có giọng/không giọng cho mỗi khung bằng cách sử dụng DIO Morise et al. [2009] và đặc trưng nội dung 768 chiều từ lớp thứ 12 bằng cách sử dụng ContentVec Qian et al. [2022]. Tất cả các đặc trưng này được chiếu lên 256 chiều và sau đó nối như đầu vào có điều kiện cho giai đoạn giải mã. Chúng tôi sử dụng vocoder được huấn luyện trước với giọng hát từ M4singer Zhang et al. [2022], và các mel-spectrogram được tính toán với biến đổi Fourier nhanh (FFT) 512 điểm, kích thước cửa sổ 512 điểm và kích thước hop 128 điểm với 80 bin tần số.

Tất cả các mô hình được huấn luyện cho 1 triệu lần lặp trên một GPU NVIDIA GTX4090 với kích thước batch là 48, với tỷ lệ học tương ứng là 1e-4 và 5e-5 và bộ tối ưu là AdamW.

Chúng tôi đầu tiên tiến hành thí nghiệm tái tạo để đánh giá khả năng của các giai đoạn giải mã khác nhau trong cài đặt tự mã hóa. Sau đó hai bộ thí nghiệm được tiến hành cho nhiệm vụ SVC bất kỳ-đến-nhiều, a) huấn luyện trên bộ dữ liệu OpenSinger cho ca sĩ mục tiêu và sử dụng M4singer làm nguồn cho chuyển đổi; b) huấn luyện trên bộ dữ liệu M4singer cho ca sĩ mục tiêu và sử dụng OpenSinger làm nguồn cho chuyển đổi. Hơn nữa, chúng tôi tăng số bước lấy mẫu của CoMoSVC và tiến hành các thí nghiệm chuyển đổi để đánh giá ảnh hưởng của các bước lấy mẫu.

4.2 Các phương pháp so sánh
Chúng tôi so sánh CoMoSVC được đề xuất với các phương pháp SVC SOTA, bao gồm:
• SoVITS-Flow: Phiên bản flow của SoVITS-SVC.
• SoVITS-Diff: Phiên bản khuếch tán của SoVITS-SVC. Số bước khuếch tán là 1000.
• DiffSVC Liu et al. [2021b]: Phương pháp SVC đầu tiên dựa trên mô hình khuếch tán, và số bước là 100.

Các embedding đặc trưng và chi tiết huấn luyện giống như được mô tả trong Phần 4.1 được sử dụng cho các phương pháp so sánh để so sánh công bằng.

4.3 Đánh giá
Chúng tôi đánh giá khả năng tái tạo của các phương pháp khác nhau bằng các chỉ số khách quan và khả năng chuyển đổi bằng cả chỉ số chủ quan và khách quan. Đối với kiểm tra chủ quan, chúng tôi mời 12 tình nguyện viên đưa ra Điểm Ý kiến Trung bình (MOS) về tính tự nhiên và độ tương tự trên các âm thanh đã chuyển đổi. Hệ số Thời gian Thực (RTF), Tỷ lệ Lỗi Ký tự (CER) thu được bởi Whisper Radford et al. [2023] và Độ TƯơng tự Người nói (SIM) tính bằng khoảng cách cosine giữa các embedding người nói được sử dụng làm các chỉ số khách quan cho đánh giá SVC. Vì phiên bản flow SoVITS-SVC là end-to-end và các phương pháp khác là hai giai đoạn, chúng tôi sử dụng tỷ lệ thời gian chuyển đổi embedding thành biểu diễn tiềm ẩn (Flow) / mel-spectrogram (Khác) với thời lượng âm thanh để biểu thị RTF để so sánh rõ ràng. Đối với tái tạo, hệ số tương quan Pearson F0 (FPC) và PESQ [ITU-T] được sử dụng thêm cho đánh giá.

4.3.1 Tái tạo
Như được minh họa trong Bảng 1, mô hình giáo viên vượt trội hơn tất cả các mô hình trong tất cả các chỉ số. Tương tự, CoMoSVC vượt trội hơn tất cả các phương pháp so sánh trong tất cả các chỉ số ngoại trừ độ tương tự, nơi nó đạt được kết quả tương đương. Điều này cho thấy khả năng tạo sinh xuất sắc của giai đoạn giải mã của CoMoSVC chỉ với một bước, ít hơn hàng trăm hoặc hàng nghìn lần so với tất cả các phương pháp so sánh.

4.3.2 Hiệu suất SVC
Chúng tôi tiến hành hai bộ thí nghiệm SVC như được mô tả trong phần 4.1 và các âm thanh nguồn đều không được nhìn thấy trong quá trình huấn luyện. Như được minh họa bởi CER và SIM trong Bảng 2, CoMoSVC thực hiện tương đương với tất cả các phương pháp so sánh. Các đánh giá chủ quan trong Bảng 3 cho thấy CoMoSVC đạt được tính tự nhiên tương đương với các phương pháp SVC dựa trên khuếch tán. Hơn nữa, độ tương tự của CoMoSVC vượt quá tất cả các phương pháp so sánh trong cả hai thí nghiệm, thể hiện một cải thiện ít nhất 0.05 so với các phương pháp SVC dựa trên khuếch tán. Hơn nữa, cả tính tự nhiên và độ tương tự của CoMoSVC đều cho thấy một sự gia tăng khoảng 1 so với phiên bản flow SoVITS-SVC. Về tốc độ suy luận, RTF của CoMoSVC là 0.002 nhỏ hơn so với phiên bản flow SoVITS-SVC. So với các phương pháp SVC dựa trên khuếch tán, CoMoSVC nhanh hơn 45 lần so với DiffSVC và gần 500 lần nhanh hơn so với phiên bản khuếch tán SoVITS-SVC.

4.3.3 Ảnh hưởng của các bước lấy mẫu
Nói chung, khi số bước lấy mẫu tăng, có một sự gia tăng nhỏ trong các chỉ số được trình bày trong Bảng 4. Sự cải thiện nhỏ và biến động nhỏ cho thấy CoMoSVC đã đạt được ước tính điểm số chính xác thông qua việc rời rạc hóa chỉ một bước mang lại kết quả chất lượng cao.

5 Kết luận
Trong bài báo này, chúng tôi đề xuất CoMoSVC, dựa trên mô hình nhất quán để đạt được SVC chất lượng cao, độ tương tự cao và tốc độ cao. CoMoSVC được đề xuất là một mô hình hai giai đoạn trong đó giai đoạn đầu tiên mã hóa các đặc trưng từ dạng sóng, sau đó giai đoạn thứ hai sử dụng một mô hình học sinh được chưng cất từ một mô hình giáo viên được huấn luyện trước để tạo ra các âm thanh đã chuyển đổi. Các đánh giá chủ quan và khách quan toàn diện chứng minh hiệu quả của CoMoSVC.

Lời cảm ơn
Nghiên cứu được hỗ trợ bởi Chương trình Nghiên cứu Theo Chủ đề (T45-205/21-N) và Chương trình Nghiên cứu Sự nghiệp Sớm (ECS-HKUST22201322), Hội đồng Tài trợ Nghiên cứu Hồng Kông.
