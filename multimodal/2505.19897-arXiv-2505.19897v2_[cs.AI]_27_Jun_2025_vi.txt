# 2505.19897.pdf
# Được chuyển đổi từ PDF sang TXT
# Đường dẫn nguồn: /home/admin88/arxiv-downloader/multimodal/2505.19897.pdf
# Kích thước tệp: 15827464 bytes

===============================================
NỘI DUNG TỆP PDF
===============================================

--- TRANG 1 ---
arXiv:2505.19897v2 [cs.AI] 27 Jun 2025
SCIENCE BOARD: Đánh giá các Agent Tự động Đa phương thức trong Quy trình Khoa học Thực tế

Qiushi Sun♡♢Zhoumianze Liu♢Chang Ma♡Zichen Ding♢Fangzhi Xu♢
Zhangyue YinHaiteng Zhao⋆Zhenyu Wu♢Kanzhi Cheng♣Zhaoyang Liu♢
Qintong Li♡Jianing Wang♠Xiangru Tang/♀eafTianbao Xie♡Xiachong Feng♡
Xiang Li♠Ben Kao♡Wenhai Wang♢Biqing Qi♢Lingpeng Kong♡Zhiyong Wu♢
♡Đại học Hồng Kông♢Phòng thí nghiệm AI Thượng Hải Đại học Fudan
⋆Đại học Bắc Kinh♣Đại học Nam Kinh♠Đại học Sư phạm Hoa Đông/♀eafĐại học Yale
{qiushisun,changma}@connect.hku.hk ,{kao,lpk}@cs.hku.hk
{liuzhoumianze,wangwenhai,qibiqing,wuzhiyong}@pjlab.org.cn

Tóm tắt
Các Mô hình Ngôn ngữ Lớn (LLM) đã mở rộng tác động của chúng vượt ra ngoài Xử lý Ngôn ngữ Tự nhiên, đáng kể thúc đẩy sự phát triển của nghiên cứu liên ngành. Gần đây, nhiều agent dựa trên LLM đã được phát triển để hỗ trợ tiến trình khám phá khoa học qua nhiều khía cạnh và lĩnh vực. Trong số này, các agent sử dụng máy tính, có khả năng tương tác với hệ điều hành như con người, đang mở đường cho việc tự động giải quyết vấn đề khoa học và xử lý các công việc thường ngày trong quy trình làm việc của nhà nghiên cứu. Nhận thức được tiềm năng biến đổi của những agent này, chúng tôi giới thiệu SCIENCE BOARD, bao gồm hai đóng góp bổ sung: (i) một môi trường thực tế, đa lĩnh vực với các quy trình khoa học động và phong phú về mặt hình ảnh với phần mềm chuyên nghiệp tích hợp, nơi các agent có thể tự động tương tác thông qua các giao diện khác nhau để tăng tốc các nhiệm vụ và thí nghiệm nghiên cứu phức tạp; và (ii) một bộ đánh giá thử thách gồm 169 nhiệm vụ chất lượng cao, được xác thực nghiêm ngặt từ thế giới thực do con người tuyển chọn, bao trùm các quy trình khám phá khoa học trong các lĩnh vực như hóa sinh, thiên văn học và tin học địa lý. Các đánh giá toàn diện của các agent với các backbone tiên tiến (ví dụ: GPT-4o, Claude 3.7, UI-TARS) cho thấy rằng, mặc dù có một số kết quả đầy hứa hẹn, chúng vẫn chưa đáp ứng được việc hỗ trợ đáng tin cậy các nhà khoa học trong các quy trình phức tạp, chỉ đạt được tỷ lệ thành công tổng thể là 15%. Phân tích sâu hơn cung cấp thêm những hiểu biết có giá trị để giải quyết những hạn chế hiện tại của agent và các nguyên tắc thiết kế hiệu quả hơn, mở đường để xây dựng các agent có khả năng hơn cho khám phá khoa học. Mã nguồn, bộ đánh giá và bảng xếp hạng của chúng tôi có sẵn tại Trang chủ Scienceboard.

1 Giới thiệu
Trong việc theo đuổi những tiến bộ khoa học, các nhà nghiên cứu kết hợp sự khéo léo và sáng tạo để thực hiện nghiên cứu mới dựa trên các khám phá thực nghiệm. Trong thời đại hiện đại, khám phá khoa học ngày càng được thúc đẩy bởi các công cụ chuyên biệt giúp các nhà khoa học tham gia sâu sắc vào thế giới thực nghiệm [1]. Các công cụ như động cơ mô phỏng [2], phần mềm phân tích dữ liệu [3], và nền tảng trực quan hóa [4] rất cần thiết để hình thành giả thuyết, xác thực kết quả và thúc đẩy sự hiểu biết khoa học.

Với sự phức tạp ngày càng tăng của các công cụ khoa học và nhu cầu ngày càng cao về các quy trình khoa học được sắp xếp hợp lý hơn, có một kỳ vọng ngày càng tăng rằng các agent tự động sẽ đóng vai trò trung tâm trong việc tự động hóa các đường ống nghiên cứu và hỗ trợ các nhà nghiên cứu con người như "đồng nghiệp AI" [5,6,7]. Ví dụ, trong khi một nhà khoa học con người có thể mất hàng tuần để thành thạo một công cụ phân tích protein [8] và dành hàng giờ để thực hiện các quan sát đủ, một agent tự động có thể thực hiện các nhiệm vụ tương tự trong vòng vài phút. Bằng cách cho phép các quy trình hoàn toàn tự động—từ sử dụng công cụ đến tạo ra những khám phá mới [9]—những agent như vậy hứa hẹn sẽ tăng tốc khoa học và trao quyền cho các nhà nghiên cứu với những khả năng chưa từng có.

Các agent sử dụng máy tính mới nổi gần đây [10,11], có khả năng vận hành các thiết bị số theo cách giống con người, trình bày một cách tiếp cận đầy hứa hẹn hướng tới việc đạt được những tầm nhìn này. Những agent này có thể tương tác với hệ điều hành thông qua Giao diện Dòng lệnh (CLI; 12,13) hoặc thực hiện các hành động chuột và bàn phím thông qua Giao diện Đồ họa Người dùng (GUI; 14,15). Bằng cách bắt chước chặt chẽ trải nghiệm người dùng khi tương tác với các công cụ [16,17,18], những agent này cho phép một mô hình thống nhất nơi phần mềm có thể được tận dụng để tự động hóa các quy trình khoa học phức tạp với tính linh hoạt tối đa. Như được minh họa trong Hình 1, để dự đoán cấu trúc protein của một chuỗi axit amin, agent khởi chạy ChimeraX, chọn widget AlphaFold và nhập chuỗi để dự đoán. Theo cách này, các nhiệm vụ khoa học có thể được thực hiện thông qua tương tác tự động từng bước với phần mềm.

Để bắt đầu việc sử dụng các agent sử dụng máy tính để hỗ trợ các nhà khoa học con người với các nhiệm vụ hàng ngày, chúng tôi giới thiệu SCIENCE BOARD, một môi trường thực tế mới được thiết kế để phát triển các trợ lý nghiên cứu được hỗ trợ bởi AI. Cơ sở hạ tầng của chúng tôi bao gồm một khung công tác có thể mở rộng cho khám phá khoa học tích hợp: (1) một hệ sinh thái linh hoạt bao gồm phần mềm khoa học qua nhiều lĩnh vực, và (2) các đường ống đánh giá được chuẩn hóa để đánh giá nghiêm ngặt. Nó hỗ trợ tương tác hai chế độ, cho phép các agent máy tính dựa trên LLM/VLM hoạt động thông qua CLI hoặc GUI.

Dựa trên SCIENCE BOARD, chúng tôi tuyển chọn một bộ đánh giá bao gồm 169 nhiệm vụ bao quát các quy trình thí nghiệm khoa học được rút ra từ sáu lĩnh vực khoa học, bao gồm đại số, hóa sinh, chứng minh định lý, hệ thống thông tin địa lý, thiên văn học và tài liệu khoa học. Những nhiệm vụ chất lượng cao và thử thách này được thiết kế tỉ mỉ bởi các chú giải viên có nền tảng chuyên ngành, mô phỏng các công việc hàng ngày mà các nhà khoa học con người phải đối mặt. Hoàn thành nhiệm vụ yêu cầu các agent tương tác với hệ thống thông qua CLI và GUI, thực hiện một loạt các khả năng rộng lớn—bao gồm lý luận thị giác và văn bản, thao tác công cụ, lập trình, toán học, hiểu biết không gian và kiến thức chuyên sâu về lĩnh vực cụ thể. Không giống như các ứng dụng máy tính để bàn được sử dụng rộng rãi, phần mềm khoa học thể hiện sự phức tạp đáng kể trong các định dạng I/O. Do đó, chúng tôi cấu hình lại tất cả phần mềm liên quan để đảm bảo tính chính xác và độ tin cậy của đánh giá dựa trên thực thi. Chúng tôi thiết kế một bộ hàm đánh giá xác minh việc hoàn thành nhiệm vụ bằng cách truy xuất các trạng thái nội bộ của hệ thống.

Chúng tôi đánh giá các LLM và VLM tiên tiến như các agent trên SCIENCE BOARD, tích hợp cả các mô hình độc quyền và các đối tác mã nguồn mở của chúng. Qua các cài đặt quan sát khác nhau, tỷ lệ thành công trung bình của những agent này dao động từ 0% đến 15%, với hiệu suất đạt đỉnh ở 20% trong các danh mục con thuận lợi nhất. Điều này chứng minh rằng các agent sử dụng máy tính hiện tại, mặc dù đầy hứa hẹn, vẫn còn xa mới có khả năng phục vụ như các trợ lý khoa học. Phân tích của chúng tôi cũng tiết lộ những hạn chế cố hữu của chúng và khám phá các nguyên tắc thiết kế để phát triển các agent có khả năng hơn cho khoa học.

--- TRANG 2 ---

[Content continues with translation of the remaining pages...]

2 Các Công trình Liên quan
Các Agent Sử dụng Máy tính. Các agent ngôn ngữ [19] gần đây đã thu hút sự chú ý đáng kể nhờ khả năng tương tác của chúng [20,21,22,23]. Các nghiên cứu gần đây cho thấy tiềm năng của chúng trong việc tương tác với hệ điều hành và tự động hóa các nhiệm vụ máy tính như con người, dẫn đến sự tăng trưởng mạnh mẽ của các agent sử dụng máy tính [11]. Một hướng nghiên cứu sử dụng Giao diện Dòng lệnh (CLI), nơi các agent tạo ra các script có thể thực thi (ví dụ: script Python hoặc Shell) để tương tác với hệ thống theo cách lập trình [24]. Trong quá trình này, các agent thực hiện tổng hợp mã [12] hoặc gọi API [10,25] để thao tác máy tính. Một hướng nghiên cứu khác tập trung vào các agent Giao diện Đồ họa Người dùng (GUI) [14,15,26] tương tác với các thiết bị số thông qua các hành động chuột và bàn phím giống con người [27,28,29]. Những agent này biến đổi hướng dẫn của người dùng thành các hành động có thể thực thi trong hệ điều hành (ví dụ: nhấp vào một biểu tượng hoặc cuộn qua một trang). Được hỗ trợ bởi VLM, các agent GUI đã được áp dụng để tự động hóa các nhiệm vụ trên máy tính để bàn [16] và di động [17], cũng như các quy trình kỹ thuật chuyên biệt [30], cho thấy những con đường đầy hứa hẹn hướng tới tự động hóa kỹ thuật số. Công trình này một cách sáng tạo khởi xướng việc sử dụng các agent máy tính trong quy trình khoa học, tiến gần hơn đến các trợ lý nghiên cứu tự động.

AI cho Khám phá Khoa học. Sự tiến bộ nhanh chóng của LLM đã định hình lại bối cảnh khám phá khoa học [31], thúc đẩy nhiều giai đoạn của chu kỳ nghiên cứu [5]. Với sự gia tăng của các agent dựa trên LLM/VLM, có một nhu cầu ngày càng tăng đối với những yếu tố thay đổi cuộc chơi này với kiến thức cấp đại học [32] để vượt qua các nhiệm vụ truyền thống như trả lời câu hỏi [33,34,35]. Các nỗ lực gần đây đã được hướng tới việc khai thác sức mạnh như vậy để hỗ trợ các thành phần đa dạng của chu kỳ nghiên cứu, bao gồm tạo ý tưởng và giả thuyết [36,37], phân tích dữ liệu [38,39,40], lập trình khoa học [41,42], viết bài báo [43], và đánh giá đồng nghiệp [44]. Đồng thời, việc tích hợp kiến thức lĩnh vực hoặc thậm chí xây dựng các mô hình nền tảng [45] có thể trao cho những agent này khả năng giải quyết các vấn đề cụ thể theo lĩnh vực, như chứng minh định lý [46], lý luận hóa học [47,48] và khám phá sinh học [49,50,49,51]. Với tầm nhìn xây dựng các trợ lý nghiên cứu tự động [6], công trình của chúng tôi đại diện cho cái đầu tiên hỗ trợ các agent trong việc thực hiện các quy trình khám phá khoa học đầu cuối, từ đó đặt nền tảng cho việc thúc đẩy khám phá khoa học được hỗ trợ bởi AI.

3 Môi trường SCIENCE BOARD
Trong phần này, chúng tôi giới thiệu môi trường SCIENCE BOARD, bao gồm phần mềm khoa học thế giới thực có thể được thao tác thông qua giao diện GUI và CLI. Giao diện được phát triển dựa trên một máy ảo Ubuntu (VM), phục vụ như cơ sở hạ tầng cơ bản. Các môi trường động và thâm dụng hình ảnh phân biệt SCIENCE BOARD với tất cả các công trình trước đây đánh giá khả năng khoa học của các mô hình hoặc agent.

3.1 Khái niệm Cơ bản và Định nghĩa Nhiệm vụ
Một agent sử dụng máy tính nhận hướng dẫn nhiệm vụ, chọn các hành động để thao tác phần mềm, và nhận phản hồi phản ánh những thay đổi trong môi trường (mặt bàn). Tương tác này được mô hình hóa như một Quá trình Quyết định Markov Quan sát Một phần (POMDP), được định nghĩa bởi bộ ⟨g,S,A,O,T⟩, trong đó g là mục tiêu, S là không gian trạng thái, A là không gian hành động, O là không gian quan sát (bao gồm phản hồi môi trường), và T:S × A → S là hàm chuyển trạng thái. Với một chính sách π, agent dự đoán các hành động tại mỗi bước thời gian t dựa trên mục tiêu g và bộ nhớ mt=oj, aj, oj+1, aj+1, . . . , ot (0≤j < t), ghi lại chuỗi các hành động và quan sát trong quá khứ. Quỹ đạo τ=[s0, a0, s1, a1, . . . , st] được xác định bởi chính sách và động lực môi trường:
pπ(τ) =p(s0)∏Tt=0π(at|g, st, mt)T(st+1|st, at) (1)

Quan sát và Bộ nhớ. Chúng tôi đánh giá các agent máy tính sử dụng ba loại không gian quan sát: chỉ văn bản, chỉ hình ảnh, và quan sát kết hợp văn bản-hình ảnh. Đối với quan sát dựa trên văn bản, chúng tôi sử dụng cây khả năng tiếp cận (a11ytree1) để tạo ra các biểu diễn văn bản có cấu trúc của ảnh chụp màn hình. Đối với quan sát hình ảnh, chúng tôi chụp ảnh màn hình độ phân giải cao trực tiếp. Các kết hợp quan sát cụ thể được sử dụng trong các thí nghiệm của chúng tôi được trình bày chi tiết trong Phần 5.1, với thông tin thêm trong Phụ lục A.5. Agent POMDP của chúng tôi yêu cầu bộ nhớ để giữ lại thông tin lịch sử. Theo công trình trước đây [52,53], chúng tôi xây dựng bộ nhớ này bằng cách nối các quan sát gần nhất của agent.

Mục tiêu và Không gian Hành động Thống nhất. Mỗi nhiệm vụ được chỉ định bởi một hướng dẫn ngôn ngữ tự nhiên (NL), như "Hiển thị nguyên tử theo kiểu hình cầu", mô tả mục tiêu dự định của người dùng. Mô hình chính sách phân tách một hướng dẫn mục tiêu phức tạp thành một chuỗi các hành động. Chúng tôi thiết kế đặc biệt một không gian hành động thống nhất A trong SCIENCE BOARD, tích hợp các phương thức tương tác đa dạng quan trọng cho các nhiệm vụ khoa học. Đối với các hành động GUI, các agent có thể thực hiện toàn bộ phạm vi tương tác người-máy, bao gồm di chuyển chuột, nhấp chuột, nhấn phím, và các hành vi nhập liệu điển hình khác như trong công trình trước đây [16,54] (ví dụ: CLICK[991, 019]). Đối với các hành động CLI, các agent có thể tương tác ở hai cấp độ: (a) gọi các lệnh cấp hệ thống trong terminal Ubuntu, và (b) sử dụng CLI hoặc cơ chế script cụ thể của ứng dụng. Hơn nữa, A bao gồm một hành động trả lời, cho phép các agent cung cấp câu trả lời cụ thể cho các nhiệm vụ QA, và một hành động call_api, cho phép các agent tận dụng các API bên ngoài được định nghĩa trước để mở rộng khả năng của chúng. Danh sách đầy đủ các loại hành động được hỗ trợ có sẵn trong Phụ lục A.4.

Mô hình Chính sách dựa trên LLM/VLM. Một mô hình LLM/VLM hoạt động như mô hình chính sách để điều khiển hành vi của agent. Mô hình chính sách nhận quan sát hiện tại và tạo ra hành động tiếp theo tương ứng. Đối với quan sát thuần văn bản, chúng tôi áp dụng LLM như chính sách. Ngược lại, chúng tôi tận dụng VLM.

3.2 Khung Đánh giá Khám phá Khoa học
Khác với công trình trước đây chủ yếu tập trung vào QA tĩnh, lập trình, hoặc các nhiệm vụ một bước, chúng tôi nhắm đến cung cấp cho các agent một môi trường thực tế và có cơ sở hình ảnh để hỗ trợ khám phá tự động, từ đó đưa ra những thách thức lớn hơn cho việc lập kế hoạch và hành động. Trong SCIENCE BOARD, như được hiển thị trong Hình 2, chúng tôi (1) mô phỏng các tình huống nơi phần mềm khoa học được sử dụng để giải quyết các vấn đề cụ thể theo lĩnh vực, (2) cho phép các agent tương tác với môi trường thông qua các quan sát đa dạng, và (3) đảm bảo rằng hành vi của agent có thể được đánh giá nghiêm ngặt.

Cài đặt và Điều chỉnh Phần mềm Khoa học. Đối với mỗi lĩnh vực, chúng tôi chọn một ứng dụng mã nguồn mở hỗ trợ cả quan sát hình ảnh và văn bản như sân chơi của agent. Để cho phép truy cập vào trạng thái nội bộ của mỗi ứng dụng trong VM, chúng tôi điều chỉnh phần mềm tương ứng. Với sự phức tạp và tính hoàn thiện hạn chế của các ứng dụng khoa học, chúng tôi tiêm một máy chủ nhẹ khởi chạy cùng với quy trình UI chính của ứng dụng để hiển thị các trạng thái nội bộ thông qua các yêu cầu HTTP. Máy chủ này có khả năng truy vấn các trạng thái nội bộ runtime của ứng dụng, phục vụ như cơ sở cho đánh giá downstream. Đối với các ứng dụng không hỗ trợ điều khiển từ xa thông qua RESTful API, chúng tôi sửa đổi và biên dịch lại mã nguồn của chúng để đảm bảo rằng cả các phần tử UI và trạng thái nội bộ đều có thể được truy cập. Ngoài ra, máy chủ hỗ trợ điều khiển trạng thái một phần của phần mềm, cho phép chúng tôi khởi tạo với các cấu hình cụ thể để mô phỏng các môi trường nhiệm vụ có ngữ cảnh. Thông tin thêm về phần mềm được chọn và chi tiết triển khai thêm được cung cấp trong Phụ lục A.3.

Tương tác của Agent với Môi trường. Agent LLM/VLM tương tác với môi trường như được mô tả trong Phần 3.1, nhận quan sát và thực hiện hành động tương ứng. Phần mềm khoa học xử lý những hành động này và trả về các trạng thái được cập nhật. Agent hoạt động tự động, tiếp tục vòng lặp này cho đến khi nó xuất ra một tín hiệu (DONE hoặc FAIL) hoặc đạt đến giới hạn thử nghiệm được định nghĩa trước.

Đường ống Đánh giá. Với sự đa dạng và phức tạp của nhiệm vụ, các chỉ số khớp câu trả lời thông thường và thậm chí các đánh giá dựa trên thực thi, như những chỉ số được sử dụng trong OSWorld [16] và WebArena [54], thường thiếu tính chi tiết cần thiết để đánh giá các quy trình một cách chính xác. Ví dụ, như được hiển thị trong Bảng 1, việc xoay một protein không ảnh hưởng đến tính chính xác của trực quan hóa, trong khi các nhiệm vụ tính toán trong thiên văn học thường bị ảnh hưởng bởi trạng thái đồng hồ hiện tại. Do đó, chúng tôi đề xuất một đánh giá chi tiết dựa trên cả tính chính xác của I/O chính trong quy trình và trạng thái cuối cùng của VM. Để xử lý các tiêu chí đa dạng cho việc xác định tính chính xác của nhiệm vụ (ví dụ: khớp chính xác, đánh giá dựa trên phạm vi, dung sai số, so sánh tệp), chúng tôi thiết kế một tập hợp các mẫu đánh giá. Đối với mỗi nhiệm vụ cụ thể, mẫu liên quan sau đó được khởi tạo với các tham số thích hợp và các giá trị tiêu chuẩn vàng mong đợi. Điều này đảm bảo cả tính nhất quán trong xác thực và khả năng mở rộng cho việc mở rộng trong tương lai. Chi tiết đánh giá thêm có trong Phụ lục A.2.

4 Bộ đánh giá SCIENCE BOARD
Trong phần này, chúng tôi trình bày các lĩnh vực được bao phủ, đường ống chú giải, và thống kê của bộ đánh giá được xây dựng dựa trên môi trường SCIENCE BOARD.

4.1 Phạm vi Lĩnh vực và Nhiệm vụ
Như một bộ đánh giá tiên phong cho khám phá khoa học, SCIENCE BOARD trải rộng sáu lĩnh vực được chọn vì tính liên quan của chúng đến các giai đoạn chính của quy trình khoa học, như mô phỏng, mô hình hóa, dự đoán, và kiến thức. Những lựa chọn này được thông báo bởi các nỗ lực về LLM cho khoa học [31]. Trong việc chọn phần mềm cho mỗi lĩnh vực, chúng tôi xem xét không chỉ tính đại diện của nó, mà còn các tiêu chí thực tế cho đánh giá: tính khả dụng mã nguồn mở, khả năng tương thích a11ytree, và không yêu cầu xác thực người dùng.

(1) Hóa sinh. Chúng tôi sử dụng UCSF ChimeraX [4,8], một công cụ phân tích phân tử hỗ trợ mô hình hóa cấu trúc (ví dụ: AlphaFold [55]). Các nhiệm vụ đánh giá khả năng của agent trong việc thao tác các cấu trúc phân tử sinh học, cũng như lý luận về các cấu hình không gian và chú giải hóa sinh.

(2) Đại số. KAlgebra được sử dụng để đánh giá tiềm năng của agent trong toán học ký hiệu. Các nhiệm vụ liên quan đến việc thực hiện các biểu thức đại số, giải thích biểu đồ, và thao tác các hàm ký hiệu. Những tình huống này yêu cầu agent thể hiện khả năng lý luận ký hiệu toán học mạnh mẽ và khả năng cơ sở hình ảnh.

(3) Chứng minh Định lý. Chúng tôi sử dụng Lean 4 [56] như một trợ lý chứng minh để đánh giá khả năng của các agent trong logic hình thức và lý luận suy diễn. Các nhiệm vụ ATP trong danh mục này nhấn mạnh độ chính xác cú pháp và tính mạch lạc logic, đánh giá khả năng của agent trong việc tạo ra các chứng minh hình thức có giá trị ngữ nghĩa.

(4) Hệ thống Thông tin Địa lý. GrassGIS, một động cơ tính toán cho xử lý raster, vector, và không gian địa lý, được bao gồm để kiểm tra kỹ năng của agent trong việc hiểu địa hình, thủy văn, và xử lý dữ liệu thời gian-không gian, với hỗ trợ cho các chức năng như mô hình hóa hệ sinh thái.

(5) Thiên văn học. Chúng tôi tích hợp Celestia, một phần mềm thiên văn mô phỏng các tình huống thiên văn thế giới thực. Các agent phải thể hiện nhận thức thời gian-không gian và kiến thức về vũ trụ và các vật thể thiên văn bằng cách theo dõi các hệ hành tinh, mô phỏng các sự kiện quỹ đạo, và truy vấn siêu dữ liệu đối tượng qua thời gian và không gian.

(6) Tài liệu Khoa học. Để mô phỏng các quy trình tài liệu nghiên cứu, chúng tôi điều chỉnh và tích hợp TeXstudio để đánh giá khả năng viết kỹ thuật của agent. Trong các nhiệm vụ độc lập, các agent được kỳ vọng sẽ soạn thảo các tóm tắt có cấu trúc tốt, tạo biểu đồ, và tạo ra các báo cáo hình thức dựa trên hướng dẫn được cung cấp. Trong các tình huống ứng dụng chéo, TeXstudio được kết hợp với phần mềm đã đề cập ở trên để đánh giá liệu các agent có thể trích xuất những hiểu biết có ý nghĩa từ các thí nghiệm và tổng hợp chúng thành những tường thuật mạch lạc.

Những lĩnh vực này cho phép đánh giá khả năng của agent khoa học qua nhiều chiều, bao gồm lý luận hình ảnh/văn bản, toán học, lập trình, sử dụng công cụ, hiểu biết không gian, kiến thức cụ thể lĩnh vực, và nhiều hơn nữa. Ngoài ra, để khám phá tiềm năng cho tự động hóa khoa học đầu cuối, các nhiệm vụ tài liệu được tích hợp với các lĩnh vực khác để hỗ trợ các quy trình ứng dụng chéo—như tự động tạo ra một báo cáo thí nghiệm dựa trên các nhiệm vụ upstream đã hoàn thành. Chi tiết thêm về các nền tảng phần mềm được sử dụng để khởi tạo và truyền đạt các nhiệm vụ trong SCIENCE BOARD được cung cấp trong Phụ lục A.3.

4.2 Đường ống Chú giải Nhiệm vụ
Để hiệu quả xây dựng các nhiệm vụ phù hợp thử thách, đa dạng, và phù hợp với các tính năng của phần mềm khoa học, chúng tôi tận dụng một đường ống chú giải trải rộng từ việc đào tạo các chú giải viên với hướng dẫn và sổ tay đến việc tiến hành xác thực dựa trên thực thi, như được hiển thị trong Hình 3. Đường ống cụ thể như sau:

Bước 1: Học Hướng dẫn và Sổ tay
Bước 2: Tuyển chọn Nhiệm vụ
Bước 3: Hình thức hóa và Xác minh Nhiệm vụ
Bước 4: Cấu hình Nhiệm vụ
Bước 5: Viết Hàm Đánh giá

(1) Học Hướng dẫn. Năm chú giải viên ban đầu thu thập và học từ các hướng dẫn và sổ tay liên quan đến phần mềm. Sau đó, mỗi chú giải viên nghiên cứu và khám phá các hoạt động đơn vị cơ bản của phần mềm, ví dụ: vẽ đường lemniscate Bernoulli trong KAlgebra. Chi tiết có trong Phụ lục B.1.

(2) Tuyển chọn Nhiệm vụ. Mỗi chú giải viên chọn một phần mềm khoa học, cài đặt nó trong SCIENCE BOARD, và bắt đầu soạn thảo hướng dẫn nhiệm vụ dựa trên các chức năng của nó. Các loại nhiệm vụ bao gồm nhưng không giới hạn ở: cấu hình, trả lời câu hỏi, mô phỏng, tính toán, và chuyên môn cụ thể lĩnh vực. Mỗi nhiệm vụ được tạm thời gán một độ khó. Sau đó, một prompt agent phù hợp với các nhiệm vụ đã soạn thảo sẽ được tuyển chọn.

(3) Hình thức hóa và Lựa chọn. Các chú giải viên khác nhau thể hiện thói quen ngôn ngữ khác nhau, chúng tôi sử dụng ChatGPT để chuẩn hóa định dạng nhiệm vụ. Sau đó, các chú giải viên tiến hành kiểm tra chéo, loại trừ những nhiệm vụ thiếu đa dạng, tính thực thi kém, hoặc câu trả lời không duy nhất, để hoàn thiện tập hợp các nhiệm vụ sử dụng.

(4) Viết Hàm Cấu hình. Mục đích của bước này là khởi tạo phần mềm và cung cấp các ngữ cảnh cụ thể, ví dụ: cung cấp bản đồ cho các nhiệm vụ GIS hoặc chuỗi protein cho các nhiệm vụ hóa sinh. Các chú giải viên sẽ viết một tập hợp các hàm cho mỗi phần mềm để sửa đổi trạng thái VM, tức là trạng thái nội bộ của phần mềm, cùng với các hàm cấu hình chung (ví dụ: tải xuống các tệp cần thiết). Các nhiệm vụ chỉ bắt đầu sau khi tất cả khởi tạo đã được thực hiện thành công.

(5) Viết Hàm Đánh giá và Xác thực. Các hàm đánh giá được phát triển để đánh giá kết quả nhiệm vụ một cách nghiêm ngặt. Như được mô tả trong Phần 3.2, các đánh giá dựa trên trạng thái, với các hàm được rút ra từ một mẫu đánh giá cơ sở. Các chú giải viên truy xuất trạng thái nhiệm vụ từ VM và đánh giá nó dựa trên các tiêu chí như khớp I/O và phạm vi được định nghĩa trước. Hàm trả về "nhiệm vụ hoàn thành" hoặc "nhiệm vụ thất bại." Xác thực chéo được thực hiện để đảm bảo tính nhất quán, với mỗi nhiệm vụ được thực hiện bởi hai chú giải viên được chọn ngẫu nhiên trên các VM riêng biệt. Kết quả được phân tích để đảm bảo tính chính xác của đánh giá, thậm chí dưới các nỗ lực cố ý của các chú giải viên để lừa dối hệ thống.

4.3 Thống kê Nhiệm vụ
Thống kê nhiệm vụ của bộ đánh giá SCIENCE BOARD được trình bày trong Bảng 2. Cụ thể, bộ đánh giá của chúng tôi bao gồm 169 nhiệm vụ duy nhất trên 6 lĩnh vực, với độ khó nhiệm vụ được phân loại thành ba cấp độ. Chúng tôi tuyển chọn một số lượng cân bằng các nhiệm vụ đủ đại diện để đánh giá khả năng của agent trong việc giải quyết các thách thức khoa học cụ thể lĩnh vực, trong khi giữ chi phí đánh giá ở mức có thể quản lý. Trong quá trình chú giải, chúng tôi định nghĩa nhiều loại nhiệm vụ trong mỗi lĩnh vực để đánh giá khả năng của các agent thực hiện các luồng hoạt động đa dạng và tận dụng kiến thức cụ thể lĩnh vực.

Phân phối các loại nhiệm vụ được hiển thị trong Hình 4. Ngoài sự đổi mới của một môi trường thực tế, bộ đánh giá SCIENCE BOARD cũng cải thiện so với công trình trước đây về mặt thiết kế nhiệm vụ và đa dạng nội dung. Chi tiết thêm về đa dạng nhiệm vụ và so sánh với các bộ đánh giá khoa học đại diện được cung cấp trong Phụ lục B.

5 Thí nghiệm
5.1 Cài đặt Thí nghiệm
Backbone. Chúng tôi sử dụng ba loại backbone để xây dựng các agent sử dụng máy tính. Bao gồm các mô hình độc quyền: GPT-4o [57], Claude-3.7-Sonnet [58], Gemini-2.0-Flash [59], và o3-mini [60]; các mô hình mã nguồn mở: Qwen2.5-VL-72B-Instruct [61], InternVL3-78B [62], và QvQ-72B-Preview [63]; và các mô hình hành động GUI: OS-Atlas-Pro-7B [15], UGround-V1-7B [29], UI-TARS-72B-DPO / UI-TARS-1.5-7B [64], và GUI-Actor-7B [65]. Chi tiết thêm trong Phụ lục C.1.

Không gian Quan sát. Không gian quan sát xác định các loại trạng thái mà các agent có thể truy cập. Chúng tôi chủ yếu tuân thủ các cài đặt được thiết lập tốt [16,54] bao gồm: (1) Ảnh chụp màn hình, bao gồm một ảnh chụp toàn bộ màn hình máy tính để bàn như được quan sát bởi người dùng; (2) a11ytree, một biểu diễn cấu trúc chỉ văn bản không có thông tin hình ảnh, áp dụng cho các agent nhận đầu vào văn bản thuần; (3) Ảnh chụp màn hình + a11ytree, một cách tiếp cận lai kết hợp và bổ sung cho cả phương thức văn bản và hình ảnh; và (4) Set-of-Marks [66], một phương pháp prompt hình ảnh nhằm tăng cường khả năng cơ sở hình ảnh bằng cách phân vùng một hình ảnh thành các vùng được đánh dấu. Chi tiết trong Phụ lục A.5.

5.2 Kết quả
Chúng tôi so sánh hiệu suất của các agent sử dụng máy tính được hỗ trợ bởi các LLM và VLM khác nhau trên SCIENCE BOARD, như được trình bày trong Bảng 3. Chúng tôi tóm tắt các phát hiện thực nghiệm chính như sau:

Phân cấp Hiệu suất. Các agent hiện có vẫn còn xa mới có khả năng hỗ trợ hiệu quả các nhà khoa học con người trong việc hoàn thành các nhiệm vụ khám phá khoa học thế giới thực. Thậm chí các mô hình SOTA, như GPT-4o và Claude, chỉ đạt được tỷ lệ thành công trung bình là 15%. Qua các cài đặt khác nhau, các đối tác mã nguồn mở có thể khớp một phần với các mô hình độc quyền. Tuy nhiên, chúng vẫn thể hiện hiệu suất tổng thể thấp hơn đáng kể, với tỷ lệ thành công trung bình dưới 12% và tiếp cận gần 0% trong một số danh mục nhiệm vụ. Khoảng cách giữa hiệu suất agent và con người nhấn mạnh những hạn chế của hiện trạng và đòi hỏi nghiên cứu thêm.

Hiểu biết Hiệu suất Cụ thể Lĩnh vực. Qua các lĩnh vực khoa học khác nhau, chúng tôi quan sát một sự mất cân bằng hiệu suất. Hầu hết các mô hình đạt được tỷ lệ thành công nhiệm vụ vừa phải trên các nhiệm vụ Đại số và Hóa sinh, nhưng thể hiện sự suy giảm đáng chú ý trên các nhiệm vụ GIS và thiên văn học. Chúng tôi gán điều này cho hai yếu tố chính: (1) Giao diện: Hầu hết các nhiệm vụ đại số và hóa sinh hỗ trợ cả thực thi CLI và GUI, trong khi các nhiệm vụ GIS và thiên văn học chủ yếu dựa vào các tương tác dựa trên GUI thông qua các hành động chuột và bàn phím. Sau khi lập kế hoạch, các agent thường thấy dễ dàng hơn để thực hiện các lệnh CLI hơn là thực hiện cơ sở GUI chi tiết—đặc biệt khi yêu cầu định vị hình ảnh chính xác. (2) Nhấn mạnh nhiệm vụ: Bản chất của các nhiệm vụ địa lý và thiên văn đưa ra những thách thức độc đáo. Cả bản đồ và biểu đồ sao đều chứa các yếu tố hình ảnh dày đặc, khiến các agent khó có thể nhận dạng hiệu quả và lý luận về thông tin liên quan. Điều này cũng chỉ ra rằng các VLM hiện tại sở hữu khả năng rất hạn chế trong lý luận không gian 3D phức tạp.

Tác động của Các Quan sát Khác nhau. Các phương thức quan sát khác nhau có tác động đáng kể. Nhìn chung, cài đặt a11ytree + ảnh chụp màn hình mang lại hiệu suất tốt nhất. Trong các cài đặt khác, Qwen2.5-VL thể hiện hiệu suất đặc biệt tốt dưới cài đặt ảnh chụp màn hình, mà chúng tôi gán cho khả năng GUI tiên tiến của nó. Dưới a11ytree, thông tin thuộc tính của các yếu tố cho phép LLM hoàn thành một số nhiệm vụ nhất định chỉ bằng cách dựa vào quan sát văn bản. Đồng thời, chúng tôi quan sát rằng SoM đôi khi đưa ra các hiệu ứng tiêu cực. Có thể mặc dù SoM cung cấp các hộp giới hạn để dễ dàng cơ sở, phần mềm khoa học thường chứa các yếu tố lớn trên màn hình (ví dụ: các vật thể thiên văn dày đặc và nền vũ trụ phức tạp), điều này đưa ra tiếng ồn đáng kể và tăng độ khó của lý luận hình ảnh.

6 Phân tích
Để điều tra thêm các yếu tố ảnh hưởng đến khả năng của các agent, chúng tôi tiến hành phân tích bổ sung để hiểu các nguyên nhân cơ bản và sự khác biệt hành vi giữa các mô hình không đồng nhất.

Lập kế hoạch và Hành động Tách biệt. Các quan sát từ các trường hợp thất bại và kết quả qua các cài đặt khác nhau chỉ ra rằng một số mô hình, như GPT-4o, có thể lập kế hoạch nhiệm vụ hiệu quả nhưng thiếu khả năng cơ sở đủ, dẫn đến hiệu suất kém trên SCIENCE BOARD. Do đó, chúng tôi khám phá việc tách biệt lập kế hoạch và cơ sở. Theo các thực hành hiện có [15,29], chúng tôi cấu hình GPT-4o như người lập kế hoạch và sử dụng nhiều VLM và mô hình hành động GUI khác nhau như các mô hình cơ sở.

Kết quả trong Bảng 4 cho thấy rằng các cách tiếp cận mô-đun mang lại những cải thiện đáng kể và đầy hứa hẹn để giải quyết các nhiệm vụ phức tạp và đòi hỏi hình ảnh trong quy trình phần mềm khoa học.

Chỉ Hình ảnh so với Giao diện Lai. Một số nhiệm vụ vốn dĩ hỗ trợ cả GUI và CLI như các phương tiện có thể hoán đổi. Ví dụ, ChimeraX cung cấp phạm vi chức năng gần như đầy đủ thông qua cả GUI và CLI của nó cho các nhiệm vụ hóa sinh. Để kiểm tra cách các agent sử dụng máy tính hiện tại tương tác với phần mềm giao diện lai như vậy, chúng tôi sửa đổi ChimeraX để vô hiệu hóa truy cập CLI, từ đó buộc thực thi chỉ GUI (dưới cài đặt a11ytree + ảnh chụp màn hình). Như được hiển thị trong Hình 5, GPT-4o và InternVL3 thể hiện sự sụt giảm hiệu suất khi truy cập CLI bị loại bỏ. Ngược lại, Qwen2.5-VL vẫn phần lớn không bị ảnh hưởng, cho thấy rằng nó thích nghi tốt với việc hoàn thành các nhiệm vụ thông qua GUI.

Những phát hiện này cho thấy rằng các thiết kế agent trong tương lai nên thích nghi hơn và được trang bị khả năng GUI mạnh mẽ hơn để đảm bảo độ bền qua cả giao diện lai và chỉ hình ảnh. Phân tích mở rộng về các khía cạnh và quan sát khác được trình bày trong Phụ lục D.

7 Thảo luận và Hướng Tương lai
SCIENCE BOARD đại diện cho một bước tiến đáng kể trong việc tận dụng các agent kỹ thuật số tự động để hỗ trợ các quy trình khoa học. Dựa trên các phát hiện được trình bày trong bài báo này, chúng tôi xác định các hướng tiềm năng sau đây để phát triển thêm:

Kiến thức Lĩnh vực và Khả năng Agent Hòa hợp. Các đánh giá của chúng tôi cho thấy rằng một yếu tố góp phần vào các hạn chế hiện tại của agent trong khám phá khoa học là kiến thức lĩnh vực không đủ của chúng. Ví dụ, trong khi các mô hình hành động GUI được đề cập trong nghiên cứu của chúng tôi có thể thực hiện tự động hóa hiệu quả, chúng thường thể hiện một thiếu hụt đáng kể trong việc hiểu kiến thức lĩnh vực cụ thể cần thiết cho các nhiệm vụ khoa học phức tạp. Do đó, các tiến bộ trong tương lai có thể tập trung vào việc tăng cường khả năng hướng tới lĩnh vực, như tăng cường hiểu biết khoa học [67], học từ các tài nguyên có liên quan cao như hướng dẫn và giáo trình, và cho phép các agent truy xuất kiến thức bên ngoài theo nhu cầu của các nhiệm vụ khoa học [68]. Xây dựng trên những nền tảng này, một thách thức thêm nằm ở việc hòa hợp những khả năng cấp lĩnh vực này với khả năng agent [69].

Các Agent Cộng tác và Chuyên biệt như một Giải pháp. Phân tích trong Bảng 4 chỉ ra rằng thậm chí một cách tiếp cận mô-đun cơ bản của việc tách biệt lập kế hoạch và hành động cho các agent khác nhau có thể mang lại những cải thiện hiệu suất đáng kể trong các quy trình phần mềm khoa học phức tạp. Phát hiện này chỉ ra một hướng hấp dẫn: việc phát triển các hệ thống đa agent nơi các agent không đồng nhất với khả năng chuyên biệt được tích hợp một cách gắn kết [70,71,72]. Ví dụ, trách nhiệm có thể được tách biệt bằng cách gán lập kế hoạch cho các agent có khả năng lý luận sâu [73], thực hiện hành động cho các mô hình hành động GUI chuyên biệt [15,74], và khả năng cụ thể lĩnh vực cho các mô hình trong các ngành cụ thể [31,45]. Những agent này có thể là plug-and-play, cho phép ứng dụng linh hoạt qua các khía cạnh rộng hơn của chu kỳ khoa học, như phân tích dữ liệu [38], vẽ biểu đồ khoa học [75], và sửa đổi bài báo [44]. Mặc dù đầy hứa hẹn, nó cũng đòi hỏi các thiết kế đa agent tinh vi hơn để quản lý và điều phối bản chất phức tạp và đa mặt của các nhiệm vụ khoa học.

Mở rộng Các Agent Kỹ thuật số đến Phòng thí nghiệm Vật lý. Các quy trình khoa học được hỗ trợ bởi AI hiện tại chủ yếu ở cấp độ kỹ thuật số, tập trung vào các nhiệm vụ như phân tích dữ liệu, mô phỏng, và điều khiển phần mềm. Một bước tiếp theo tự nhiên và có tác động là mở rộng khả năng của những agent tự động như vậy, như được thúc đẩy và đánh giá trong SCIENCE BOARD, vào môi trường phòng thí nghiệm vật lý. Sự chuyển đổi này liên quan đến việc giao tiếp các agent với các hệ thống robot [76,77], áp dụng các nguyên tắc của AI thể hiện để cảm nhận và tương tác với thế giới vật lý. Các agent sẽ thao tác các thiết bị và mẫu phòng thí nghiệm, thực hiện các giao thức thí nghiệm, và giám sát các quy trình vật lý trong thời gian thực, từ đó thúc đẩy một tương lai "phòng thí nghiệm trong vòng lặp" [51] nơi thí nghiệm và các phương pháp được điều khiển bởi AI tương hỗ tăng cường.

8 Kết luận
Chúng tôi đề xuất SCIENCE BOARD, một môi trường thực tế đầu tiên được thiết kế để trao quyền cho các agent tự động trong khám phá khoa học với xác thực nghiêm ngặt. Dựa trên cơ sở hạ tầng của chúng tôi, chúng tôi tuyển chọn một bộ đánh giá thử thách cao của các nhiệm vụ khoa học đa dạng được chế tác tỉ mỉ bởi các chuyên gia con người. Thông qua các thí nghiệm và phân tích toàn diện, chúng tôi phát hiện rằng thậm chí các agent sử dụng máy tính tiên tiến cũng thể hiện hiệu suất đáng kể dưới mức thành thạo cấp con người. Mặc dù việc thực hiện các agent tự động cho khám phá khoa học vẫn là một mục tiêu xa vời, công trình này cung cấp những hiểu biết có thể hành động cho việc phát triển trong tương lai, và chúng tôi tin rằng nó cấu thành việc thúc đẩy khám phá khoa học được hỗ trợ bởi AI.

[Phần còn lại của tài liệu bao gồm các tham khảo, hạn chế, tác động rộng hơn và các phụ lục chi tiết - tôi sẽ tiếp tục dịch nếu được yêu cầu]
